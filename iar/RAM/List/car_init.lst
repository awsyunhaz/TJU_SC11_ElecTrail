###############################################################################
#
# IAR ANSI C/C++ Compiler V7.20.2.7424/W32 for ARM        10/Apr/2016  21:40:43
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail\app\car_init.c
#    Command line =  
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail\app\car_init.c
#        -D LPLD_K60 -lCN
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail\iar\RAM\List\
#        -lB
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail\iar\RAM\List\
#        -o
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail\iar\RAM\Obj\
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=None --dlib_config "D:\IAR Systems\Embedded
#        Workbench 7.0\arm\INC\c\DLib_Config_Normal.h" -I
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail\iar\..\app\
#        -I
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail\iar\..\..\..\lib\CPU\
#        -I
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail\iar\..\..\..\lib\common\
#        -I
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail\iar\..\..\..\lib\LPLD\
#        -I
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail\iar\..\..\..\lib\LPLD\HW\
#        -I
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail\iar\..\..\..\lib\LPLD\DEV\
#        -I
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail\iar\..\..\..\lib\uCOS-II\Ports\
#        -I
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail\iar\..\..\..\lib\uCOS-II\Source\
#        -I
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail\iar\..\..\..\lib\FatFs\
#        -I
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail\iar\..\..\..\lib\FatFs\option\
#        -I
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail\iar\..\..\..\lib\USB\common\
#        -I
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail\iar\..\..\..\lib\USB\driver\
#        -I
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail\iar\..\..\..\lib\USB\descriptor\
#        -I
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail\iar\..\..\..\lib\USB\class\
#        -Ol -I "D:\IAR Systems\Embedded Workbench 7.0\arm\CMSIS\Include\" -D
#        ARM_MATH_CM4
#    List file    =  
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail\iar\RAM\List\car_init.lst
#    Object file  =  
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail\iar\RAM\Obj\car_init.o
#
###############################################################################

C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail\app\car_init.c
      1          #include "car_init.h"
      2          
      3          #if 1/************************初始化*******************************/
      4          

   \                                 In section .text, align 2, keep-with-next
      5          void init_all()
      6          {
   \                     init_all: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
      7            init_paranum();               //参数初始化        
   \   00000002   0x.... 0x....      BL       init_paranum
      8            init_uart();                  //初始化串口发送
   \   00000006   0x.... 0x....      BL       init_uart
      9            init_pit();
   \   0000000A   0x.... 0x....      BL       init_pit
     10            init_electrail();             //电轨传感器初始化
   \   0000000E   0x.... 0x....      BL       init_electrail
     11            OLED_Init();                  //OLED屏幕初始化
   \   00000012   0x.... 0x....      BL       OLED_Init
     12            init_speedFb();               //速度反馈FTM计数器初始化
   \   00000016   0x.... 0x....      BL       init_speedFb
     13            init_motor();                 //电机输出PMW初始化
   \   0000001A   0x.... 0x....      BL       init_motor
     14            init_servo();                 //舵机输出PWM初始化
   \   0000001E   0x.... 0x....      BL       init_servo
     15            OLED_Init();
   \   00000022   0x.... 0x....      BL       OLED_Init
     16            init_key();                   
   \   00000026   0x.... 0x....      BL       init_key
     17          //  init_sdhc();
     18          }
   \   0000002A   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 2, keep-with-next
     19          void init_paranum()
     20          {
   \                     init_paranum: (+1)
   \   00000000   0xE006             B.N      ??init_paranum_0
     21            while(paralist[oled.para_num].precision)
     22              oled.para_num++;
   \                     ??init_paranum_1: (+1)
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable9
   \   00000006   0x8880             LDRH     R0,[R0, #+4]
   \   00000008   0x1C40             ADDS     R0,R0,#+1
   \   0000000A   0x.... 0x....      LDR.W    R1,??DataTable9
   \   0000000E   0x8088             STRH     R0,[R1, #+4]
   \                     ??init_paranum_0: (+1)
   \   00000010   0x.... 0x....      LDR.W    R0,??DataTable9_1
   \   00000014   0x.... 0x....      LDR.W    R1,??DataTable9
   \   00000018   0x8889             LDRH     R1,[R1, #+4]
   \   0000001A   0x2214             MOVS     R2,#+20
   \   0000001C   0xFB02 0x0001      MLA      R0,R2,R1,R0
   \   00000020   0x7C40             LDRB     R0,[R0, #+17]
   \   00000022   0x2800             CMP      R0,#+0
   \   00000024   0xD1ED             BNE.N    ??init_paranum_1
     23            oled.showpage_max=3;
   \   00000026   0x2003             MOVS     R0,#+3
   \   00000028   0x.... 0x....      LDR.W    R1,??DataTable9
   \   0000002C   0x71C8             STRB     R0,[R1, #+7]
     24            oled.showpage_min=0;
   \   0000002E   0x2000             MOVS     R0,#+0
   \   00000030   0x.... 0x....      LDR.W    R1,??DataTable9
   \   00000034   0x7208             STRB     R0,[R1, #+8]
     25          }
   \   00000036   0x4770             BX       LR               ;; return
     26          

   \                                 In section .text, align 2, keep-with-next
     27          void init_setpara()
     28          {
     29            setpara.SpeedBANGBANG=200;
   \                     init_setpara: (+1)
   \   00000000   0x20C8             MOVS     R0,#+200
   \   00000002   0x.... 0x....      LDR.W    R1,??DataTable9_2
   \   00000006   0x60C8             STR      R0,[R1, #+12]
     30            setpara.SpeedPID.Kp=10;
   \   00000008   0x200A             MOVS     R0,#+10
   \   0000000A   0x.... 0x....      LDR.W    R1,??DataTable9_2
   \   0000000E   0x6008             STR      R0,[R1, #+0]
     31            setpara.SpeedPID.Ki=2;
   \   00000010   0x2002             MOVS     R0,#+2
   \   00000012   0x.... 0x....      LDR.W    R1,??DataTable9_2
   \   00000016   0x6048             STR      R0,[R1, #+4]
     32            setpara.SpeedPID.Kd=2;
   \   00000018   0x2002             MOVS     R0,#+2
   \   0000001A   0x.... 0x....      LDR.W    R1,??DataTable9_2
   \   0000001E   0x6088             STR      R0,[R1, #+8]
     33            setpara.SetSpeedMax=450;
   \   00000020   0xF44F 0x70E1      MOV      R0,#+450
   \   00000024   0x.... 0x....      LDR.W    R1,??DataTable9_2
   \   00000028   0x6108             STR      R0,[R1, #+16]
     34            setpara.SetSpeedMin=250;
   \   0000002A   0x20FA             MOVS     R0,#+250
   \   0000002C   0x.... 0x....      LDR.W    R1,??DataTable9_2
   \   00000030   0x6148             STR      R0,[R1, #+20]
     35            setpara.SteerPD.Kp=100;
   \   00000032   0x2064             MOVS     R0,#+100
   \   00000034   0x.... 0x....      LDR.W    R1,??DataTable9_2
   \   00000038   0x6208             STR      R0,[R1, #+32]
     36            setpara.SteerPD.Kd=80;
   \   0000003A   0x2050             MOVS     R0,#+80
   \   0000003C   0x.... 0x....      LDR.W    R1,??DataTable9_2
   \   00000040   0x6248             STR      R0,[R1, #+36]
     37            setpara.Steer.mid=4500;
   \   00000042   0xF241 0x1094      MOVW     R0,#+4500
   \   00000046   0x.... 0x....      LDR.W    R1,??DataTable9_2
   \   0000004A   0x6288             STR      R0,[R1, #+40]
     38            setpara.Steer.maxturn=1000;
   \   0000004C   0xF44F 0x707A      MOV      R0,#+1000
   \   00000050   0x.... 0x....      LDR.W    R1,??DataTable9_2
   \   00000054   0x62C8             STR      R0,[R1, #+44]
     39            setpara.settime=5;
   \   00000056   0x2005             MOVS     R0,#+5
   \   00000058   0x.... 0x....      LDR.W    R1,??DataTable9_2
   \   0000005C   0x6188             STR      R0,[R1, #+24]
     40            setpara.track_amp=500;
   \   0000005E   0xF44F 0x70FA      MOV      R0,#+500
   \   00000062   0x.... 0x....      LDR.W    R1,??DataTable9_2
   \   00000066   0x61C8             STR      R0,[R1, #+28]
     41            setpara.lose_threshold=80;
   \   00000068   0x2050             MOVS     R0,#+80
   \   0000006A   0x.... 0x....      LDR.W    R1,??DataTable9_2
   \   0000006E   0x6308             STR      R0,[R1, #+48]
     42            setpara.K_far=100;
   \   00000070   0x2064             MOVS     R0,#+100
   \   00000072   0x.... 0x....      LDR.W    R1,??DataTable9_2
   \   00000076   0x6388             STR      R0,[R1, #+56]
     43            setpara.K_near=100;
   \   00000078   0x2064             MOVS     R0,#+100
   \   0000007A   0x.... 0x....      LDR.W    R1,??DataTable9_2
   \   0000007E   0x6348             STR      R0,[R1, #+52]
     44            setpara.cal_far[0]	=	1050;
   \   00000080   0xF240 0x401A      MOVW     R0,#+1050
   \   00000084   0x.... 0x....      LDR.W    R1,??DataTable9_2
   \   00000088   0xF8C1 0x0094      STR      R0,[R1, #+148]
     45            setpara.cal_far[1]	=	950;
   \   0000008C   0xF240 0x30B6      MOVW     R0,#+950
   \   00000090   0x.... 0x....      LDR.W    R1,??DataTable9_2
   \   00000094   0xF8C1 0x0098      STR      R0,[R1, #+152]
     46            setpara.cal_far[2]	=	850;
   \   00000098   0xF240 0x3052      MOVW     R0,#+850
   \   0000009C   0x.... 0x....      LDR.W    R1,??DataTable9_2
   \   000000A0   0xF8C1 0x009C      STR      R0,[R1, #+156]
     47            setpara.cal_far[3]	=	750;
   \   000000A4   0xF240 0x20EE      MOVW     R0,#+750
   \   000000A8   0x....             LDR.N    R1,??DataTable9_2
   \   000000AA   0xF8C1 0x00A0      STR      R0,[R1, #+160]
     48            setpara.cal_far[4]	=	650;
   \   000000AE   0xF240 0x208A      MOVW     R0,#+650
   \   000000B2   0x....             LDR.N    R1,??DataTable9_2
   \   000000B4   0xF8C1 0x00A4      STR      R0,[R1, #+164]
     49            setpara.cal_far[5]	=	550;
   \   000000B8   0xF240 0x2026      MOVW     R0,#+550
   \   000000BC   0x....             LDR.N    R1,??DataTable9_2
   \   000000BE   0xF8C1 0x00A8      STR      R0,[R1, #+168]
     50            setpara.cal_far[6]	=	450;
   \   000000C2   0xF44F 0x70E1      MOV      R0,#+450
   \   000000C6   0x....             LDR.N    R1,??DataTable9_2
   \   000000C8   0xF8C1 0x00AC      STR      R0,[R1, #+172]
     51            setpara.cal_far[7]	=	350;
   \   000000CC   0xF44F 0x70AF      MOV      R0,#+350
   \   000000D0   0x....             LDR.N    R1,??DataTable9_2
   \   000000D2   0xF8C1 0x00B0      STR      R0,[R1, #+176]
     52            setpara.cal_far[8]	=	250;
   \   000000D6   0x20FA             MOVS     R0,#+250
   \   000000D8   0x....             LDR.N    R1,??DataTable9_2
   \   000000DA   0xF8C1 0x00B4      STR      R0,[R1, #+180]
     53            setpara.cal_far[9]	=	150;
   \   000000DE   0x2096             MOVS     R0,#+150
   \   000000E0   0x....             LDR.N    R1,??DataTable9_2
   \   000000E2   0xF8C1 0x00B8      STR      R0,[R1, #+184]
     54            setpara.cal_far[10]	=	50;
   \   000000E6   0x2032             MOVS     R0,#+50
   \   000000E8   0x....             LDR.N    R1,??DataTable9_2
   \   000000EA   0xF8C1 0x00BC      STR      R0,[R1, #+188]
     55            setpara.weight_near[0]	=	50;
   \   000000EE   0x2032             MOVS     R0,#+50
   \   000000F0   0x....             LDR.N    R1,??DataTable9_2
   \   000000F2   0x63C8             STR      R0,[R1, #+60]
     56            setpara.weight_near[1]	=	150;
   \   000000F4   0x2096             MOVS     R0,#+150
   \   000000F6   0x....             LDR.N    R1,??DataTable9_2
   \   000000F8   0x6408             STR      R0,[R1, #+64]
     57            setpara.weight_near[2]	=	250;
   \   000000FA   0x20FA             MOVS     R0,#+250
   \   000000FC   0x....             LDR.N    R1,??DataTable9_2
   \   000000FE   0x6448             STR      R0,[R1, #+68]
     58            setpara.weight_near[3]	=	350;
   \   00000100   0xF44F 0x70AF      MOV      R0,#+350
   \   00000104   0x....             LDR.N    R1,??DataTable9_2
   \   00000106   0x6488             STR      R0,[R1, #+72]
     59            setpara.weight_near[4]	=	450;
   \   00000108   0xF44F 0x70E1      MOV      R0,#+450
   \   0000010C   0x....             LDR.N    R1,??DataTable9_2
   \   0000010E   0x64C8             STR      R0,[R1, #+76]
     60            setpara.weight_near[5]	=	550;
   \   00000110   0xF240 0x2026      MOVW     R0,#+550
   \   00000114   0x....             LDR.N    R1,??DataTable9_2
   \   00000116   0x6508             STR      R0,[R1, #+80]
     61            setpara.weight_near[6]	=	650;
   \   00000118   0xF240 0x208A      MOVW     R0,#+650
   \   0000011C   0x....             LDR.N    R1,??DataTable9_2
   \   0000011E   0x6548             STR      R0,[R1, #+84]
     62            setpara.weight_near[7]	=	750;
   \   00000120   0xF240 0x20EE      MOVW     R0,#+750
   \   00000124   0x....             LDR.N    R1,??DataTable9_2
   \   00000126   0x6588             STR      R0,[R1, #+88]
     63            setpara.weight_near[8]	=	850;
   \   00000128   0xF240 0x3052      MOVW     R0,#+850
   \   0000012C   0x....             LDR.N    R1,??DataTable9_2
   \   0000012E   0x65C8             STR      R0,[R1, #+92]
     64            setpara.weight_near[9]	=	950;
   \   00000130   0xF240 0x30B6      MOVW     R0,#+950
   \   00000134   0x....             LDR.N    R1,??DataTable9_2
   \   00000136   0x6608             STR      R0,[R1, #+96]
     65            setpara.weight_near[10]	=	1050;
   \   00000138   0xF240 0x401A      MOVW     R0,#+1050
   \   0000013C   0x....             LDR.N    R1,??DataTable9_2
   \   0000013E   0x6648             STR      R0,[R1, #+100]
     66            setpara.weight_far[0]	=	1050;
   \   00000140   0xF240 0x401A      MOVW     R0,#+1050
   \   00000144   0x....             LDR.N    R1,??DataTable9_2
   \   00000146   0x6688             STR      R0,[R1, #+104]
     67            setpara.weight_far[1]	=	950;
   \   00000148   0xF240 0x30B6      MOVW     R0,#+950
   \   0000014C   0x....             LDR.N    R1,??DataTable9_2
   \   0000014E   0x66C8             STR      R0,[R1, #+108]
     68            setpara.weight_far[2]	=	850;
   \   00000150   0xF240 0x3052      MOVW     R0,#+850
   \   00000154   0x....             LDR.N    R1,??DataTable9_2
   \   00000156   0x6708             STR      R0,[R1, #+112]
     69            setpara.weight_far[3]	=	750;
   \   00000158   0xF240 0x20EE      MOVW     R0,#+750
   \   0000015C   0x....             LDR.N    R1,??DataTable9_2
   \   0000015E   0x6748             STR      R0,[R1, #+116]
     70            setpara.weight_far[4]	=	650;
   \   00000160   0xF240 0x208A      MOVW     R0,#+650
   \   00000164   0x....             LDR.N    R1,??DataTable9_2
   \   00000166   0x6788             STR      R0,[R1, #+120]
     71            setpara.weight_far[5]	=	550;
   \   00000168   0xF240 0x2026      MOVW     R0,#+550
   \   0000016C   0x....             LDR.N    R1,??DataTable9_2
   \   0000016E   0x67C8             STR      R0,[R1, #+124]
     72            setpara.weight_far[6]	=	450;
   \   00000170   0xF44F 0x70E1      MOV      R0,#+450
   \   00000174   0x....             LDR.N    R1,??DataTable9_2
   \   00000176   0xF8C1 0x0080      STR      R0,[R1, #+128]
     73            setpara.weight_far[7]	=	350;
   \   0000017A   0xF44F 0x70AF      MOV      R0,#+350
   \   0000017E   0x....             LDR.N    R1,??DataTable9_2
   \   00000180   0xF8C1 0x0084      STR      R0,[R1, #+132]
     74            setpara.weight_far[8]	=	250;
   \   00000184   0x20FA             MOVS     R0,#+250
   \   00000186   0x....             LDR.N    R1,??DataTable9_2
   \   00000188   0xF8C1 0x0088      STR      R0,[R1, #+136]
     75            setpara.weight_far[9]	=	150;
   \   0000018C   0x2096             MOVS     R0,#+150
   \   0000018E   0x....             LDR.N    R1,??DataTable9_2
   \   00000190   0xF8C1 0x008C      STR      R0,[R1, #+140]
     76            setpara.weight_far[10]	=	50;     //权重
   \   00000194   0x2032             MOVS     R0,#+50
   \   00000196   0x....             LDR.N    R1,??DataTable9_2
   \   00000198   0xF8C1 0x0090      STR      R0,[R1, #+144]
     77            
     78          }
   \   0000019C   0x4770             BX       LR               ;; return
     79          

   \                                 In section .text, align 2, keep-with-next
     80          void init_sdhc()
     81          {
   \                     init_sdhc: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     82            if(!disk_initialize(0)) printf("SD卡初始化成功.\n");
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0x.... 0x....      BL       disk_initialize
   \   00000008   0x2800             CMP      R0,#+0
   \   0000000A   0xD103             BNE.N    ??init_sdhc_0
   \   0000000C   0x....             LDR.N    R0,??DataTable9_3
   \   0000000E   0x.... 0x....      BL       printf
   \   00000012   0xE002             B.N      ??init_sdhc_1
     83            else printf("SD卡初始化失败.\n");
   \                     ??init_sdhc_0: (+1)
   \   00000014   0x....             LDR.N    R0,??DataTable9_4
   \   00000016   0x.... 0x....      BL       printf
     84          }
   \                     ??init_sdhc_1: (+1)
   \   0000001A   0xBD01             POP      {R0,PC}          ;; return
     85          

   \                                 In section .text, align 2, keep-with-next
     86          void init_uart(void)
     87          {
   \                     init_uart: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB087             SUB      SP,SP,#+28
     88            UART_InitTypeDef uart0_init_struct;
     89            uart0_init_struct.UART_Uartx = UART0;         //使用UART0
   \   00000004   0x....             LDR.N    R0,??DataTable9_5  ;; 0x4006a000
   \   00000006   0x9001             STR      R0,[SP, #+4]
     90            uart0_init_struct.UART_BaudRate = 9600;       //设置波特率9600
   \   00000008   0xF44F 0x5016      MOV      R0,#+9600
   \   0000000C   0x9002             STR      R0,[SP, #+8]
     91            uart0_init_struct.UART_TxPin = PTB17;          //发送引脚为PTB17
   \   0000000E   0x2031             MOVS     R0,#+49
   \   00000010   0xF88D 0x000C      STRB     R0,[SP, #+12]
     92            //初始化UART
     93            LPLD_UART_Init(uart0_init_struct);
   \   00000014   0xA901             ADD      R1,SP,#+4
   \   00000016   0xB084             SUB      SP,SP,#+16
   \   00000018   0x4668             MOV      R0,SP
   \   0000001A   0x2214             MOVS     R2,#+20
   \   0000001C   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000020   0xBC0F             POP      {R0-R3}
   \   00000022   0x.... 0x....      BL       LPLD_UART_Init
     94          
     95          }
   \   00000026   0xB007             ADD      SP,SP,#+28
   \   00000028   0xBD00             POP      {PC}             ;; return

   \                                 In section .text, align 2, keep-with-next
     96          void init_key()
     97          {
   \                     init_key: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB087             SUB      SP,SP,#+28
     98            GPIO_InitTypeDef gpio_init_struct={0};
   \   00000004   0xA801             ADD      R0,SP,#+4
   \   00000006   0x2114             MOVS     R1,#+20
   \   00000008   0x.... 0x....      BL       __aeabi_memclr4
     99            
    100            gpio_init_struct.GPIO_PTx = PTC;              //PORTC
   \   0000000C   0x....             LDR.N    R0,??DataTable9_6  ;; 0x400ff080
   \   0000000E   0x9001             STR      R0,[SP, #+4]
    101            gpio_init_struct.GPIO_Pins = GPIO_Pin3|GPIO_Pin4|GPIO_Pin5|GPIO_Pin6|GPIO_Pin7|GPIO_Pin8;     //引脚3、4、5、6、7、8
   \   00000010   0xF44F 0x70FC      MOV      R0,#+504
   \   00000014   0x9002             STR      R0,[SP, #+8]
    102            gpio_init_struct.GPIO_Dir = DIR_INPUT;        //输入
   \   00000016   0x2000             MOVS     R0,#+0
   \   00000018   0xF88D 0x0010      STRB     R0,[SP, #+16]
    103            gpio_init_struct.GPIO_PinControl = INPUT_PF_EN|IRQC_FA;   //输入低通滤波，下降沿中断
   \   0000001C   0x....             LDR.N    R0,??DataTable9_7  ;; 0xa0010
   \   0000001E   0x9003             STR      R0,[SP, #+12]
    104            gpio_init_struct.GPIO_Isr = portc_isr;        //中断函数
   \   00000020   0x....             LDR.N    R0,??DataTable9_8
   \   00000022   0x9005             STR      R0,[SP, #+20]
    105            LPLD_GPIO_Init(gpio_init_struct);
   \   00000024   0xA901             ADD      R1,SP,#+4
   \   00000026   0xB084             SUB      SP,SP,#+16
   \   00000028   0x4668             MOV      R0,SP
   \   0000002A   0x2214             MOVS     R2,#+20
   \   0000002C   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000030   0xBC0F             POP      {R0-R3}
   \   00000032   0x.... 0x....      BL       LPLD_GPIO_Init
    106            //使能中断
    107            LPLD_GPIO_EnableIrq(gpio_init_struct);
   \   00000036   0xA901             ADD      R1,SP,#+4
   \   00000038   0xB084             SUB      SP,SP,#+16
   \   0000003A   0x4668             MOV      R0,SP
   \   0000003C   0x2214             MOVS     R2,#+20
   \   0000003E   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000042   0xBC0F             POP      {R0-R3}
   \   00000044   0x.... 0x....      BL       LPLD_GPIO_EnableIrq
    108            
    109          }
   \   00000048   0xB007             ADD      SP,SP,#+28
   \   0000004A   0xBD00             POP      {PC}             ;; return
    110          

   \                                 In section .text, align 2, keep-with-next
    111          void init_speedFb()
    112          {
   \                     init_speedFb: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB08B             SUB      SP,SP,#+44
    113            GPIO_InitTypeDef gpio_init_struct={0};
   \   00000004   0xA801             ADD      R0,SP,#+4
   \   00000006   0x2114             MOVS     R1,#+20
   \   00000008   0x.... 0x....      BL       __aeabi_memclr4
    114            gpio_init_struct.GPIO_PTx = PTA;
   \   0000000C   0x....             LDR.N    R0,??DataTable9_9  ;; 0x400ff000
   \   0000000E   0x9001             STR      R0,[SP, #+4]
    115            gpio_init_struct.GPIO_Pins = GPIO_Pin12 | GPIO_Pin13;
   \   00000010   0xF44F 0x5040      MOV      R0,#+12288
   \   00000014   0x9002             STR      R0,[SP, #+8]
    116            gpio_init_struct.GPIO_Dir = DIR_INPUT;
   \   00000016   0x2000             MOVS     R0,#+0
   \   00000018   0xF88D 0x0010      STRB     R0,[SP, #+16]
    117            gpio_init_struct.GPIO_PinControl = INPUT_PULL_UP | INPUT_PF_EN;
   \   0000001C   0x2013             MOVS     R0,#+19
   \   0000001E   0x9003             STR      R0,[SP, #+12]
    118            LPLD_GPIO_Init(gpio_init_struct);
   \   00000020   0xA901             ADD      R1,SP,#+4
   \   00000022   0xB084             SUB      SP,SP,#+16
   \   00000024   0x4668             MOV      R0,SP
   \   00000026   0x2214             MOVS     R2,#+20
   \   00000028   0x.... 0x....      BL       __aeabi_memcpy4
   \   0000002C   0xBC0F             POP      {R0-R3}
   \   0000002E   0x.... 0x....      BL       LPLD_GPIO_Init
    119            
    120            //配置正交解码功能参数
    121            FTM_InitTypeDef ftm_init_struct={0};
   \   00000032   0xA803             ADD      R0,SP,#+12
   \   00000034   0x211C             MOVS     R1,#+28
   \   00000036   0x.... 0x....      BL       __aeabi_memclr4
    122            ftm_init_struct.FTM_Ftmx = FTM1;              //只有FTM1和FTM2有正交解码功能
   \   0000003A   0x....             LDR.N    R0,??DataTable9_10  ;; 0x40039000
   \   0000003C   0x9003             STR      R0,[SP, #+12]
    123            ftm_init_struct.FTM_Mode = FTM_MODE_QD;       //正交解码功能
   \   0000003E   0x2004             MOVS     R0,#+4
   \   00000040   0xF88D 0x0010      STRB     R0,[SP, #+16]
    124            ftm_init_struct.FTM_QdMode = QD_MODE_PHAB;    //AB相输入模式
   \   00000044   0x2000             MOVS     R0,#+0
   \   00000046   0xF88D 0x001E      STRB     R0,[SP, #+30]
    125            //初始化FTM
    126            LPLD_FTM_Init(ftm_init_struct);
   \   0000004A   0xA903             ADD      R1,SP,#+12
   \   0000004C   0xB084             SUB      SP,SP,#+16
   \   0000004E   0x4668             MOV      R0,SP
   \   00000050   0x221C             MOVS     R2,#+28
   \   00000052   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000056   0xBC0F             POP      {R0-R3}
   \   00000058   0x.... 0x....      BL       LPLD_FTM_Init
    127            //使能AB相输入通道
    128            //PTA12引脚接A相输入、PTA13引脚接B相输入
    129            LPLD_FTM_QD_Enable(FTM1, PTA12, PTA13);
   \   0000005C   0x220D             MOVS     R2,#+13
   \   0000005E   0x210C             MOVS     R1,#+12
   \   00000060   0x....             LDR.N    R0,??DataTable9_10  ;; 0x40039000
   \   00000062   0x.... 0x....      BL       LPLD_FTM_QD_Enable
    130            
    131          }
   \   00000066   0xB00B             ADD      SP,SP,#+44
   \   00000068   0xBD00             POP      {PC}             ;; return
    132          
    133          

   \                                 In section .text, align 2, keep-with-next
    134          void init_electrail()
    135          {
   \                     init_electrail: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    136            
    137            init_pulse_counter(PTC18,DMA_CH1);
   \   00000002   0x2101             MOVS     R1,#+1
   \   00000004   0x2052             MOVS     R0,#+82
   \   00000006   0x.... 0x....      BL       init_pulse_counter
    138            init_pulse_counter(PTD1,DMA_CH2);  
   \   0000000A   0x2102             MOVS     R1,#+2
   \   0000000C   0x2061             MOVS     R0,#+97
   \   0000000E   0x.... 0x....      BL       init_pulse_counter
    139          //  init_pulse_counter(PTD1,DMA_CH3);
    140          //  init_pulse_counter(PTD2,DMA_CH4);
    141          
    142          }
   \   00000012   0xBD01             POP      {R0,PC}          ;; return
    143          

   \                                 In section .text, align 2, keep-with-next
    144          void init_pulse_counter(PortPinsEnum_Type counter_port,         //通用的
    145                                  uint8 dma_chx)
    146          {
   \                     init_pulse_counter: (+1)
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0xB093             SUB      SP,SP,#+76
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
    147            GPIO_InitTypeDef gpio_init_struct={0};
   \   00000008   0xA801             ADD      R0,SP,#+4
   \   0000000A   0x2114             MOVS     R1,#+20
   \   0000000C   0x.... 0x....      BL       __aeabi_memclr4
    148            uint32 PTx_BASE = PTA_BASE+(counter_port>>5)*0x40u; //*0100 0000
   \   00000010   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000012   0x0960             LSRS     R0,R4,#+5
   \   00000014   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000016   0x2140             MOVS     R1,#+64
   \   00000018   0x....             LDR.N    R2,??DataTable9_9  ;; 0x400ff000
   \   0000001A   0xFB01 0x2000      MLA      R0,R1,R0,R2
    149            gpio_init_struct.GPIO_PTx = (GPIO_Type *)PTx_BASE; //地址
   \   0000001E   0x9001             STR      R0,[SP, #+4]
    150            gpio_init_struct.GPIO_Pins = 1<<(uint8)(counter_port&0x1Fu); //00011111 unsigned
   \   00000020   0x2001             MOVS     R0,#+1
   \   00000022   0xF014 0x011F      ANDS     R1,R4,#0x1F
   \   00000026   0x4088             LSLS     R0,R0,R1
   \   00000028   0x9002             STR      R0,[SP, #+8]
    151            gpio_init_struct.GPIO_Dir = DIR_INPUT;
   \   0000002A   0x2000             MOVS     R0,#+0
   \   0000002C   0xF88D 0x0010      STRB     R0,[SP, #+16]
    152            gpio_init_struct.GPIO_PinControl = IRQC_DMARI|INPUT_PF_EN|INPUT_PULL_UP;
   \   00000030   0x....             LDR.N    R0,??DataTable9_11  ;; 0x10013
   \   00000032   0x9003             STR      R0,[SP, #+12]
    153            LPLD_GPIO_Init(gpio_init_struct);
   \   00000034   0xA901             ADD      R1,SP,#+4
   \   00000036   0xB084             SUB      SP,SP,#+16
   \   00000038   0x4668             MOV      R0,SP
   \   0000003A   0x2214             MOVS     R2,#+20
   \   0000003C   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000040   0xBC0F             POP      {R0-R3}
   \   00000042   0x.... 0x....      BL       LPLD_GPIO_Init
    154            
    155            DMA_InitTypeDef dma_init_struct={0};
   \   00000046   0xA807             ADD      R0,SP,#+28
   \   00000048   0x212C             MOVS     R1,#+44
   \   0000004A   0x.... 0x....      BL       __aeabi_memclr4
    156            //DMA参数配置
    157            dma_init_struct.DMA_CHx = dma_chx;    //通道号
   \   0000004E   0xF88D 0x501C      STRB     R5,[SP, #+28]
    158            dma_init_struct.DMA_Req = PORTA_DMAREQ+(counter_port>>5);       //DMA请求源
   \   00000052   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000054   0x0960             LSRS     R0,R4,#+5
   \   00000056   0x3031             ADDS     R0,R0,#+49
   \   00000058   0xF88D 0x001D      STRB     R0,[SP, #+29]
    159            dma_init_struct.DMA_MajorLoopCnt = 0x7FFF; //主循环计数值
   \   0000005C   0xF647 0x70FF      MOVW     R0,#+32767
   \   00000060   0xF8AD 0x0020      STRH     R0,[SP, #+32]
    160            dma_init_struct.DMA_MinorByteCnt = 1; //次循环字节计数
   \   00000064   0x2001             MOVS     R0,#+1
   \   00000066   0x9009             STR      R0,[SP, #+36]
    161            dma_init_struct.DMA_SourceAddr = 0x4004000C;        //源地址
   \   00000068   0x....             LDR.N    R0,??DataTable9_12  ;; 0x4004000c
   \   0000006A   0x900A             STR      R0,[SP, #+40]
    162            dma_init_struct.DMA_DestAddr = 0x4004000C;          //目的地址
   \   0000006C   0x....             LDR.N    R0,??DataTable9_12  ;; 0x4004000c
   \   0000006E   0x900D             STR      R0,[SP, #+52]
    163            
    164            //初始化DMA
    165            LPLD_DMA_Init(dma_init_struct);
   \   00000070   0xA907             ADD      R1,SP,#+28
   \   00000072   0xB084             SUB      SP,SP,#+16
   \   00000074   0x4668             MOV      R0,SP
   \   00000076   0x222C             MOVS     R2,#+44
   \   00000078   0x.... 0x....      BL       __aeabi_memcpy4
   \   0000007C   0xBC0F             POP      {R0-R3}
   \   0000007E   0x.... 0x....      BL       LPLD_DMA_Init
    166            //使能DMA请求
    167            LPLD_DMA_EnableReq(dma_chx);
   \   00000082   0x....             LDR.N    R0,??DataTable9_13  ;; 0x4000800c
   \   00000084   0x6800             LDR      R0,[R0, #+0]
   \   00000086   0x2101             MOVS     R1,#+1
   \   00000088   0x40A9             LSLS     R1,R1,R5
   \   0000008A   0x4308             ORRS     R0,R1,R0
   \   0000008C   0x....             LDR.N    R1,??DataTable9_13  ;; 0x4000800c
   \   0000008E   0x6008             STR      R0,[R1, #+0]
    168            
    169          //  GPIO(dir_port,DIR_INPUT);                     //简易初始化端口
    170          }
   \   00000090   0xB013             ADD      SP,SP,#+76
   \   00000092   0xBD30             POP      {R4,R5,PC}       ;; return

   \                                 In section .text, align 2, keep-with-next
    171          void init_motor()
    172          {
   \                     init_motor: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB08B             SUB      SP,SP,#+44
    173            FTM_InitTypeDef ftm_init_struct={0};
   \   00000004   0xA803             ADD      R0,SP,#+12
   \   00000006   0x211C             MOVS     R1,#+28
   \   00000008   0x.... 0x....      BL       __aeabi_memclr4
    174            
    175            ftm_init_struct.FTM_Ftmx = FTM0;	        //使能FTM0通道
   \   0000000C   0x....             LDR.N    R0,??DataTable9_14  ;; 0x40038000
   \   0000000E   0x9003             STR      R0,[SP, #+12]
    176            ftm_init_struct.FTM_Mode = FTM_MODE_PWM;	//使能PWM模式
   \   00000010   0x2001             MOVS     R0,#+1
   \   00000012   0xF88D 0x0010      STRB     R0,[SP, #+16]
    177            ftm_init_struct.FTM_PwmFreq = 15000;	        //PWM频率15000Hz
   \   00000016   0xF643 0x2098      MOVW     R0,#+15000
   \   0000001A   0x9005             STR      R0,[SP, #+20]
    178            
    179            LPLD_FTM_Init(ftm_init_struct);
   \   0000001C   0xA903             ADD      R1,SP,#+12
   \   0000001E   0xB084             SUB      SP,SP,#+16
   \   00000020   0x4668             MOV      R0,SP
   \   00000022   0x221C             MOVS     R2,#+28
   \   00000024   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000028   0xBC0F             POP      {R0-R3}
   \   0000002A   0x.... 0x....      BL       LPLD_FTM_Init
    180            
    181            /*****************************************************
    182            *------------------------------------PWM对齐方式
    183            *---------------------------------端口号  ↓
    184            *-------------------------初始占空比↓    ↓
    185            *-----------------------通道号  ↓  ↓    ↓
    186            *------------------模块号  ↓   ↓  ↓    ↓
    187            *                   ↓     ↓   ↓  ↓    ↓       */
    188            LPLD_FTM_PWM_Enable(FTM0,FTM_Ch4,0,PTD4,ALIGN_LEFT);
   \   0000002E   0x2028             MOVS     R0,#+40
   \   00000030   0x9000             STR      R0,[SP, #+0]
   \   00000032   0x2364             MOVS     R3,#+100
   \   00000034   0x2200             MOVS     R2,#+0
   \   00000036   0x2104             MOVS     R1,#+4
   \   00000038   0x....             LDR.N    R0,??DataTable9_14  ;; 0x40038000
   \   0000003A   0x.... 0x....      BL       LPLD_FTM_PWM_Enable
    189            LPLD_FTM_PWM_Enable(FTM0,FTM_Ch5,0,PTD5,ALIGN_LEFT);
   \   0000003E   0x2028             MOVS     R0,#+40
   \   00000040   0x9000             STR      R0,[SP, #+0]
   \   00000042   0x2365             MOVS     R3,#+101
   \   00000044   0x2200             MOVS     R2,#+0
   \   00000046   0x2105             MOVS     R1,#+5
   \   00000048   0x....             LDR.N    R0,??DataTable9_14  ;; 0x40038000
   \   0000004A   0x.... 0x....      BL       LPLD_FTM_PWM_Enable
    190            
    191          }
   \   0000004E   0xB00B             ADD      SP,SP,#+44
   \   00000050   0xBD00             POP      {PC}             ;; return
    192          

   \                                 In section .text, align 2, keep-with-next
    193          void init_servo()
    194          {
   \                     init_servo: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB08B             SUB      SP,SP,#+44
    195            FTM_InitTypeDef ftm_init_struct={0};
   \   00000004   0xA803             ADD      R0,SP,#+12
   \   00000006   0x211C             MOVS     R1,#+28
   \   00000008   0x.... 0x....      BL       __aeabi_memclr4
    196            
    197            ftm_init_struct.FTM_Ftmx = FTM2;	        //使能FTM2通道
   \   0000000C   0x....             LDR.N    R0,??DataTable9_15  ;; 0x400b8000
   \   0000000E   0x9003             STR      R0,[SP, #+12]
    198            ftm_init_struct.FTM_Mode = FTM_MODE_PWM;	//使能PWM模式
   \   00000010   0x2001             MOVS     R0,#+1
   \   00000012   0xF88D 0x0010      STRB     R0,[SP, #+16]
    199            ftm_init_struct.FTM_PwmFreq = 300;	        //PWM频率300Hz
   \   00000016   0xF44F 0x7096      MOV      R0,#+300
   \   0000001A   0x9005             STR      R0,[SP, #+20]
    200            
    201            LPLD_FTM_Init(ftm_init_struct);
   \   0000001C   0xA903             ADD      R1,SP,#+12
   \   0000001E   0xB084             SUB      SP,SP,#+16
   \   00000020   0x4668             MOV      R0,SP
   \   00000022   0x221C             MOVS     R2,#+28
   \   00000024   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000028   0xBC0F             POP      {R0-R3}
   \   0000002A   0x.... 0x....      BL       LPLD_FTM_Init
    202            
    203            LPLD_FTM_PWM_Enable(FTM2,FTM_Ch0,9000,PTB18,ALIGN_LEFT);
   \   0000002E   0x2028             MOVS     R0,#+40
   \   00000030   0x9000             STR      R0,[SP, #+0]
   \   00000032   0x2332             MOVS     R3,#+50
   \   00000034   0xF242 0x3228      MOVW     R2,#+9000
   \   00000038   0x2100             MOVS     R1,#+0
   \   0000003A   0x....             LDR.N    R0,??DataTable9_15  ;; 0x400b8000
   \   0000003C   0x.... 0x....      BL       LPLD_FTM_PWM_Enable
    204          }
   \   00000040   0xB00B             ADD      SP,SP,#+44
   \   00000042   0xBD00             POP      {PC}             ;; return
    205          
    206          

   \                                 In section .text, align 2, keep-with-next
    207          void init_pit()
    208          {
   \                     init_pit: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB087             SUB      SP,SP,#+28
    209            PIT_InitTypeDef pit0_init_struct={PIT0};
   \   00000004   0xA801             ADD      R0,SP,#+4
   \   00000006   0x2114             MOVS     R1,#+20
   \   00000008   0x.... 0x....      BL       __aeabi_memclr4
    210            //配置PIT0参数
    211            pit0_init_struct.PIT_Pitx = PIT0;
   \   0000000C   0x2000             MOVS     R0,#+0
   \   0000000E   0xF88D 0x0004      STRB     R0,[SP, #+4]
    212            pit0_init_struct.PIT_PeriodMs = PIT0_MS;      //定时周期
   \   00000012   0x2014             MOVS     R0,#+20
   \   00000014   0x9003             STR      R0,[SP, #+12]
    213            pit0_init_struct.PIT_Isr = pit0_isr;          //设置中断函数
   \   00000016   0x....             LDR.N    R0,??DataTable9_16
   \   00000018   0x9005             STR      R0,[SP, #+20]
    214            //初始化PIT0
    215            LPLD_PIT_Init(pit0_init_struct);  
   \   0000001A   0xA901             ADD      R1,SP,#+4
   \   0000001C   0xB084             SUB      SP,SP,#+16
   \   0000001E   0x4668             MOV      R0,SP
   \   00000020   0x2214             MOVS     R2,#+20
   \   00000022   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000026   0xBC0F             POP      {R0-R3}
   \   00000028   0x.... 0x....      BL       LPLD_PIT_Init
    216            
    217            //使能PIT0
    218            LPLD_PIT_EnableIrq(pit0_init_struct);
   \   0000002C   0xA901             ADD      R1,SP,#+4
   \   0000002E   0xB084             SUB      SP,SP,#+16
   \   00000030   0x4668             MOV      R0,SP
   \   00000032   0x2214             MOVS     R2,#+20
   \   00000034   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000038   0xBC0F             POP      {R0-R3}
   \   0000003A   0x.... 0x....      BL       LPLD_PIT_EnableIrq
    219          }
   \   0000003E   0xB007             ADD      SP,SP,#+28
   \   00000040   0xBD00             POP      {PC}             ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9:
   \   00000000   0x........         DC32     oled

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_1:
   \   00000000   0x........         DC32     paralist

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_2:
   \   00000000   0x........         DC32     setpara

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_3:
   \   00000000   0x........         DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_4:
   \   00000000   0x........         DC32     ?_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_5:
   \   00000000   0x4006A000         DC32     0x4006a000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_6:
   \   00000000   0x400FF080         DC32     0x400ff080

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_7:
   \   00000000   0x000A0010         DC32     0xa0010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_8:
   \   00000000   0x........         DC32     portc_isr

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_9:
   \   00000000   0x400FF000         DC32     0x400ff000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_10:
   \   00000000   0x40039000         DC32     0x40039000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_11:
   \   00000000   0x00010013         DC32     0x10013

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_12:
   \   00000000   0x4004000C         DC32     0x4004000c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_13:
   \   00000000   0x4000800C         DC32     0x4000800c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_14:
   \   00000000   0x40038000         DC32     0x40038000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_15:
   \   00000000   0x400B8000         DC32     0x400b8000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_16:
   \   00000000   0x........         DC32     pit0_isr

   \                                 In section .rodata, align 4
   \                     ?_0:
   \   00000000   0x53 0x44          DC8 "SD\277\250\263\365\312\274\273\257\263\311\271\246.\012"
   \              0xBF 0xA8    
   \              0xB3 0xF5    
   \              0xCA 0xBC    
   \              0xBB 0xAF    
   \              0xB3 0xC9    
   \              0xB9 0xA6    
   \              0x2E 0x0A    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_1:
   \   00000000   0x53 0x44          DC8 "SD\277\250\263\365\312\274\273\257\312\247\260\334.\012"
   \              0xBF 0xA8    
   \              0xB3 0xF5    
   \              0xCA 0xBC    
   \              0xBB 0xAF    
   \              0xCA 0xA7    
   \              0xB0 0xDC    
   \              0x2E 0x0A    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \   00000000   0x00000000         DC32 0H
   \   00000004   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x00000000         DC32 0H
   \   00000004   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x00000000         DC32 0H
   \   00000004   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000014   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x00000000         DC32 0H
   \   00000004   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000021   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         

   \                                 In section .rodata, align 4
   \   00000000   0x00000000         DC32 0H
   \   00000004   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000014   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x00000000         DC32 0H
   \   00000004   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000014   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
    220          
    221          #endif

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   init_all
         8   -> OLED_Init
         8   -> init_electrail
         8   -> init_key
         8   -> init_motor
         8   -> init_paranum
         8   -> init_pit
         8   -> init_servo
         8   -> init_speedFb
         8   -> init_uart
       8   init_electrail
         8   -> init_pulse_counter
      48   init_key
        32   -> LPLD_GPIO_EnableIrq
        32   -> LPLD_GPIO_Init
        32   -> __aeabi_memclr4
        48   -> __aeabi_memcpy4
      64   init_motor
        48   -> LPLD_FTM_Init
        48   -> LPLD_FTM_PWM_Enable
        48   -> __aeabi_memclr4
        64   -> __aeabi_memcpy4
       0   init_paranum
      48   init_pit
        32   -> LPLD_PIT_EnableIrq
        32   -> LPLD_PIT_Init
        32   -> __aeabi_memclr4
        48   -> __aeabi_memcpy4
     104   init_pulse_counter
        88   -> LPLD_DMA_Init
        88   -> LPLD_GPIO_Init
        88   -> __aeabi_memclr4
       104   -> __aeabi_memcpy4
       8   init_sdhc
         8   -> disk_initialize
         8   -> printf
      64   init_servo
        48   -> LPLD_FTM_Init
        48   -> LPLD_FTM_PWM_Enable
        48   -> __aeabi_memclr4
        64   -> __aeabi_memcpy4
       0   init_setpara
      64   init_speedFb
        48   -> LPLD_FTM_Init
        48   -> LPLD_FTM_QD_Enable
        48   -> LPLD_GPIO_Init
        48   -> __aeabi_memclr4
        64   -> __aeabi_memcpy4
      48   init_uart
        32   -> LPLD_UART_Init
        48   -> __aeabi_memcpy4


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable9
       4  ??DataTable9_1
       4  ??DataTable9_10
       4  ??DataTable9_11
       4  ??DataTable9_12
       4  ??DataTable9_13
       4  ??DataTable9_14
       4  ??DataTable9_15
       4  ??DataTable9_16
       4  ??DataTable9_2
       4  ??DataTable9_3
       4  ??DataTable9_4
       4  ??DataTable9_5
       4  ??DataTable9_6
       4  ??DataTable9_7
       4  ??DataTable9_8
       4  ??DataTable9_9
      20  ?_0
      20  ?_1
      20  ?_2
      20  ?_3
      28  ?_4
      20  ?_5
      44  ?_6
      28  ?_7
      28  ?_8
      20  ?_9
      44  init_all
      20  init_electrail
      76  init_key
      82  init_motor
      56  init_paranum
      66  init_pit
     148  init_pulse_counter
      28  init_sdhc
      68  init_servo
     414  init_setpara
     106  init_speedFb
      42  init_uart

 
   248 bytes in section .rodata
 1 218 bytes in section .text
 
 1 218 bytes of CODE  memory
   248 bytes of CONST memory

Errors: none
Warnings: none
