###############################################################################
#
# IAR ANSI C/C++ Compiler V7.20.2.7424/W32 for ARM        10/Apr/2016  21:40:58
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail\app\TJU_SC11_ElecTrail.c
#    Command line =  
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail\app\TJU_SC11_ElecTrail.c
#        -D LPLD_K60 -lCN
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail\iar\RAM\List\
#        -lB
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail\iar\RAM\List\
#        -o
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail\iar\RAM\Obj\
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=None --dlib_config "D:\IAR Systems\Embedded
#        Workbench 7.0\arm\INC\c\DLib_Config_Normal.h" -I
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail\iar\..\app\
#        -I
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail\iar\..\..\..\lib\CPU\
#        -I
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail\iar\..\..\..\lib\common\
#        -I
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail\iar\..\..\..\lib\LPLD\
#        -I
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail\iar\..\..\..\lib\LPLD\HW\
#        -I
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail\iar\..\..\..\lib\LPLD\DEV\
#        -I
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail\iar\..\..\..\lib\uCOS-II\Ports\
#        -I
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail\iar\..\..\..\lib\uCOS-II\Source\
#        -I
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail\iar\..\..\..\lib\FatFs\
#        -I
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail\iar\..\..\..\lib\FatFs\option\
#        -I
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail\iar\..\..\..\lib\USB\common\
#        -I
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail\iar\..\..\..\lib\USB\driver\
#        -I
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail\iar\..\..\..\lib\USB\descriptor\
#        -I
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail\iar\..\..\..\lib\USB\class\
#        -Ol -I "D:\IAR Systems\Embedded Workbench 7.0\arm\CMSIS\Include\" -D
#        ARM_MATH_CM4
#    List file    =  
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail\iar\RAM\List\TJU_SC11_ElecTrail.lst
#    Object file  =  
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail\iar\RAM\Obj\TJU_SC11_ElecTrail.o
#
###############################################################################

C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail\app\TJU_SC11_ElecTrail.c
      1          /****************************************
      2           说明：
      3                *杨炎龙的工程试验
      4                *DMA串口计数
      5           ****************************************/
      6          #include "common.h"
      7          #include "car_global.h"
      8          
      9          
     10          
     11          void init_all();
     12          void init_setpara();
     13          void init_sdhc();
     14          void init_uart(void);
     15          void init_key();
     16          void init_electrail();
     17          void init_speedFb();
     18          void init_pulse_counter(PortPinsEnum_Type counter_port,         //通用的
     19                                  uint8 dma_chx);
     20          void init_motor();
     21          void init_servo();
     22          void init_pit();
     23          void init_sdhc();
     24          void OLED_Init();       //通用
     25          void show_oled();
     26          void show_upperpage(int page);
     27          void show_changeable();
     28          void show_fullpage(int page);
     29          
     30          void pit0_isr();
     31          void portc_isr();
     32          void key_check();
     33          void data_input();
     34          int get_frequency(uint8 i);
     35          int Track_Cal(uint32* dma);
     36          int weight_cal(int xvalue,int* setarray);
     37          int Speed_Cal(int track_pos);
     38          int Steer_PWM_Cal(int track_pos);
     39          int Motor_PID_Cal(int input_speed,int setspeed);
     40          void data_process();
     41          
     42          void output_Ctrl(uint8 status);
     43          void save_flash();
     44          void read_flash();
     45          
     46          void write_sd();
     47          void save_RAM();
     48          void data_save();
     49          void save_sd(int value,char* label);
     50          void send_uart();
     51          
     52          void OutPut_Data(void);
     53          unsigned short CRC_CHECK(unsigned char *Buf, unsigned char CRC_CNT);
     54          
     55          
     56          
     57          
     58          /**************************全局变量********************************/
     59          
     60          

   \                                 In section .bss, align 4
     61          uint32 T;
   \                     T:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     62          indata_STRUCT indata;
   \                     indata:
   \   00000000                      DS8 12

   \                                 In section .bss, align 4
     63          outdata_STRUCT outdata;
   \                     outdata:
   \   00000000                      DS8 20

   \                                 In section .bss, align 4
     64          STATUS_CAR_STRUCT eleccar;
   \                     eleccar:
   \   00000000                      DS8 16

   \                                 In section .bss, align 1
     65          STATUS_BUTTON status_button;
   \                     status_button:
   \   00000000                      DS8 1

   \                                 In section .bss, align 4
     66          OLED_STRUCT oled;
   \                     oled:
   \   00000000                      DS8 12

   \                                 In section .bss, align 4
     67          setpara_STRUCT setpara;
   \                     setpara:
   \   00000000                      DS8 192

   \                                 In section .bss, align 4
     68          trackcal_STRUCT track;
   \                     track:
   \   00000000                      DS8 44

   \                                 In section .bss, align 4
     69          FLAG flag;
   \                     flag:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
     70          PARA_LIST_STRUCT paralist[100]=      //可调参数表
   \                     paralist:
   \   00000000   0x........         DC32 setpara
   \   00000004   0x53 0x70          DC8 "SpeedKp"
   \              0x65 0x65    
   \              0x64 0x4B    
   \              0x70 0x00    
   \   0000000C   0x00 0x00          DC8 0, 0, 0, 0, 0, 1, 0, 0
   \              0x00 0x00    
   \              0x00 0x01    
   \              0x00 0x00    
   \   00000014   0x........         DC32 setpara + 4H
   \   00000018   0x53 0x70          DC8 "SpeedKi"
   \              0x65 0x65    
   \              0x64 0x4B    
   \              0x69 0x00    
   \   00000020   0x00 0x00          DC8 0, 0, 0, 0, 0, 1, 0, 0
   \              0x00 0x00    
   \              0x00 0x01    
   \              0x00 0x00    
   \   00000028   0x........         DC32 setpara + 8H
   \   0000002C   0x53 0x70          DC8 "SpeedKd"
   \              0x65 0x65    
   \              0x64 0x4B    
   \              0x64 0x00    
   \   00000034   0x00 0x00          DC8 0, 0, 0, 0, 0, 1, 0, 0
   \              0x00 0x00    
   \              0x00 0x01    
   \              0x00 0x00    
   \   0000003C   0x........         DC32 setpara + 0CH
   \   00000040   0x42 0x41          DC8 "BANG"
   \              0x4E 0x47    
   \              0x00         
   \   00000045   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x01 0x00    
   \              0x00         
   \   00000050   0x........         DC32 setpara + 10H
   \   00000054   0x53 0x70          DC8 "SpeedMax"
   \              0x65 0x65    
   \              0x64 0x4D    
   \              0x61 0x78    
   \              0x00         
   \   0000005D   0x00 0x00          DC8 0, 0, 0, 0, 10, 0, 0
   \              0x00 0x00    
   \              0x0A 0x00    
   \              0x00         
   \   00000064   0x........         DC32 setpara + 14H
   \   00000068   0x53 0x70          DC8 "SpeedMin"
   \              0x65 0x65    
   \              0x64 0x4D    
   \              0x69 0x6E    
   \              0x00         
   \   00000071   0x00 0x00          DC8 0, 0, 0, 0, 10, 0, 0
   \              0x00 0x00    
   \              0x0A 0x00    
   \              0x00         
   \   00000078   0x........         DC32 setpara + 20H
   \   0000007C   0x53 0x74          DC8 "SteerKp"
   \              0x65 0x65    
   \              0x72 0x4B    
   \              0x70 0x00    
   \   00000084   0x00 0x00          DC8 0, 0, 0, 0, 0, 1, 0, 0
   \              0x00 0x00    
   \              0x00 0x01    
   \              0x00 0x00    
   \   0000008C   0x........         DC32 setpara + 24H
   \   00000090   0x53 0x74          DC8 "SteerKd"
   \              0x65 0x65    
   \              0x72 0x4B    
   \              0x64 0x00    
   \   00000098   0x00 0x00          DC8 0, 0, 0, 0, 0, 1, 0, 0
   \              0x00 0x00    
   \              0x00 0x01    
   \              0x00 0x00    
   \   000000A0   0x........         DC32 setpara + 18H
   \   000000A4   0x53 0x45          DC8 "SETTIME"
   \              0x54 0x54    
   \              0x49 0x4D    
   \              0x45 0x00    
   \   000000AC   0x00 0x00          DC8 0, 0, 0, 0, 0, 1, 0, 0
   \              0x00 0x00    
   \              0x00 0x01    
   \              0x00 0x00    
   \   000000B4   0x........         DC32 setpara + 28H
   \   000000B8   0x53 0x74          DC8 "SteerMID"
   \              0x65 0x65    
   \              0x72 0x4D    
   \              0x49 0x44    
   \              0x00         
   \   000000C1   0x00 0x00          DC8 0, 0, 0, 0, 1, 0, 0
   \              0x00 0x00    
   \              0x01 0x00    
   \              0x00         
   \   000000C8   0x........         DC32 setpara + 2CH
   \   000000CC   0x53 0x74          DC8 "SteerMAXTURN"
   \              0x65 0x65    
   \              0x72 0x4D    
   \              0x41 0x58    
   \              0x54 0x55    
   \              0x52 0x4E    
   \              0x00         
   \   000000D9   0x01 0x00          DC8 1, 0, 0
   \              0x00         
   \   000000DC   0x........         DC32 setpara + 1CH
   \   000000E0   0x54 0x52          DC8 "TRACK_AMP"
   \              0x41 0x43    
   \              0x4B 0x5F    
   \              0x41 0x4D    
   \              0x50 0x00    
   \   000000EA   0x00 0x00          DC8 0, 0, 0, 1, 0, 0
   \              0x00 0x01    
   \              0x00 0x00    
   \   000000F0   0x........         DC32 setpara + 30H
   \   000000F4   0x4C 0x6F          DC8 "LoseThresh"
   \              0x73 0x65    
   \              0x54 0x68    
   \              0x72 0x65    
   \              0x73 0x68    
   \              0x00         
   \   000000FF   0x00 0x00          DC8 0, 0, 1, 0, 0
   \              0x01 0x00    
   \              0x00         
   \   00000104   0x........         DC32 setpara + 38H
   \   00000108   0x4B 0x5F          DC8 "K_Far"
   \              0x46 0x61    
   \              0x72 0x00    
   \   0000010E   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 1, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x01    
   \              0x00 0x00    
   \   00000118   0x........         DC32 setpara + 34H
   \   0000011C   0x4B 0x5F          DC8 "K_Near"
   \              0x4E 0x65    
   \              0x61 0x72    
   \              0x00         
   \   00000123   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 1, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x01 0x00    
   \              0x00         
   \   0000012C   0x........         DC32 setpara + 94H
   \   00000130   0x43 0x41          DC8 "CAL_FAR[0]"
   \              0x4C 0x5F    
   \              0x46 0x41    
   \              0x52 0x5B    
   \              0x30 0x5D    
   \              0x00         
   \   0000013B   0x00 0x00          DC8 0, 0, 1, 0, 0
   \              0x01 0x00    
   \              0x00         
   \   00000140   0x........         DC32 setpara + 98H
   \   00000144   0x43 0x41          DC8 "CAL_FAR[1]"
   \              0x4C 0x5F    
   \              0x46 0x41    
   \              0x52 0x5B    
   \              0x31 0x5D    
   \              0x00         
   \   0000014F   0x00 0x00          DC8 0, 0, 1, 0, 0
   \              0x01 0x00    
   \              0x00         
   \   00000154   0x........         DC32 setpara + 9CH
   \   00000158   0x43 0x41          DC8 "CAL_FAR[2]"
   \              0x4C 0x5F    
   \              0x46 0x41    
   \              0x52 0x5B    
   \              0x32 0x5D    
   \              0x00         
   \   00000163   0x00 0x00          DC8 0, 0, 1, 0, 0
   \              0x01 0x00    
   \              0x00         
   \   00000168   0x........         DC32 setpara + 0A0H
   \   0000016C   0x43 0x41          DC8 "CAL_FAR[3]"
   \              0x4C 0x5F    
   \              0x46 0x41    
   \              0x52 0x5B    
   \              0x33 0x5D    
   \              0x00         
   \   00000177   0x00 0x00          DC8 0, 0, 1, 0, 0
   \              0x01 0x00    
   \              0x00         
   \   0000017C   0x........         DC32 setpara + 0A4H
   \   00000180   0x43 0x41          DC8 "CAL_FAR[4]"
   \              0x4C 0x5F    
   \              0x46 0x41    
   \              0x52 0x5B    
   \              0x34 0x5D    
   \              0x00         
   \   0000018B   0x00 0x00          DC8 0, 0, 1, 0, 0
   \              0x01 0x00    
   \              0x00         
   \   00000190   0x........         DC32 setpara + 0A8H
   \   00000194   0x43 0x41          DC8 "CAL_FAR[5]"
   \              0x4C 0x5F    
   \              0x46 0x41    
   \              0x52 0x5B    
   \              0x35 0x5D    
   \              0x00         
   \   0000019F   0x00 0x00          DC8 0, 0, 1, 0, 0
   \              0x01 0x00    
   \              0x00         
   \   000001A4   0x........         DC32 setpara + 0ACH
   \   000001A8   0x43 0x41          DC8 "CAL_FAR[6]"
   \              0x4C 0x5F    
   \              0x46 0x41    
   \              0x52 0x5B    
   \              0x36 0x5D    
   \              0x00         
   \   000001B3   0x00 0x00          DC8 0, 0, 1, 0, 0
   \              0x01 0x00    
   \              0x00         
   \   000001B8   0x........         DC32 setpara + 0B0H
   \   000001BC   0x43 0x41          DC8 "CAL_FAR[7]"
   \              0x4C 0x5F    
   \              0x46 0x41    
   \              0x52 0x5B    
   \              0x37 0x5D    
   \              0x00         
   \   000001C7   0x00 0x00          DC8 0, 0, 1, 0, 0
   \              0x01 0x00    
   \              0x00         
   \   000001CC   0x........         DC32 setpara + 0B4H
   \   000001D0   0x43 0x41          DC8 "CAL_FAR[8]"
   \              0x4C 0x5F    
   \              0x46 0x41    
   \              0x52 0x5B    
   \              0x38 0x5D    
   \              0x00         
   \   000001DB   0x00 0x00          DC8 0, 0, 1, 0, 0
   \              0x01 0x00    
   \              0x00         
   \   000001E0   0x........         DC32 setpara + 0B8H
   \   000001E4   0x43 0x41          DC8 "CAL_FAR[9]"
   \              0x4C 0x5F    
   \              0x46 0x41    
   \              0x52 0x5B    
   \              0x39 0x5D    
   \              0x00         
   \   000001EF   0x00 0x00          DC8 0, 0, 1, 0, 0
   \              0x01 0x00    
   \              0x00         
   \   000001F4   0x........         DC32 setpara + 0BCH
   \   000001F8   0x43 0x41          DC8 "CAL_FAR[10]"
   \              0x4C 0x5F    
   \              0x46 0x41    
   \              0x52 0x5B    
   \              0x31 0x30    
   \              0x5D 0x00    
   \   00000204   0x00 0x01          DC8 0, 1, 0, 0
   \              0x00 0x00    
   \   00000208   0x........         DC32 setpara + 3CH
   \   0000020C   0x57 0x45          DC8 "WEI_NEAR[0]"
   \              0x49 0x5F    
   \              0x4E 0x45    
   \              0x41 0x52    
   \              0x5B 0x30    
   \              0x5D 0x00    
   \   00000218   0x00 0x01          DC8 0, 1, 0, 0
   \              0x00 0x00    
   \   0000021C   0x........         DC32 setpara + 40H
   \   00000220   0x57 0x45          DC8 "WEI_NEAR[1]"
   \              0x49 0x5F    
   \              0x4E 0x45    
   \              0x41 0x52    
   \              0x5B 0x31    
   \              0x5D 0x00    
   \   0000022C   0x00 0x01          DC8 0, 1, 0, 0
   \              0x00 0x00    
   \   00000230   0x........         DC32 setpara + 44H
   \   00000234   0x57 0x45          DC8 "WEI_NEAR[2]"
   \              0x49 0x5F    
   \              0x4E 0x45    
   \              0x41 0x52    
   \              0x5B 0x32    
   \              0x5D 0x00    
   \   00000240   0x00 0x01          DC8 0, 1, 0, 0
   \              0x00 0x00    
   \   00000244   0x........         DC32 setpara + 48H
   \   00000248   0x57 0x45          DC8 "WEI_NEAR[3]"
   \              0x49 0x5F    
   \              0x4E 0x45    
   \              0x41 0x52    
   \              0x5B 0x33    
   \              0x5D 0x00    
   \   00000254   0x00 0x01          DC8 0, 1, 0, 0
   \              0x00 0x00    
   \   00000258   0x........         DC32 setpara + 4CH
   \   0000025C   0x57 0x45          DC8 "WEI_NEAR[4]"
   \              0x49 0x5F    
   \              0x4E 0x45    
   \              0x41 0x52    
   \              0x5B 0x34    
   \              0x5D 0x00    
   \   00000268   0x00 0x01          DC8 0, 1, 0, 0
   \              0x00 0x00    
   \   0000026C   0x........         DC32 setpara + 50H
   \   00000270   0x57 0x45          DC8 "WEI_NEAR[5]"
   \              0x49 0x5F    
   \              0x4E 0x45    
   \              0x41 0x52    
   \              0x5B 0x35    
   \              0x5D 0x00    
   \   0000027C   0x00 0x01          DC8 0, 1, 0, 0
   \              0x00 0x00    
   \   00000280   0x........         DC32 setpara + 54H
   \   00000284   0x57 0x45          DC8 "WEI_NEAR[6]"
   \              0x49 0x5F    
   \              0x4E 0x45    
   \              0x41 0x52    
   \              0x5B 0x36    
   \              0x5D 0x00    
   \   00000290   0x00 0x01          DC8 0, 1, 0, 0
   \              0x00 0x00    
   \   00000294   0x........         DC32 setpara + 58H
   \   00000298   0x57 0x45          DC8 "WEI_NEAR[7]"
   \              0x49 0x5F    
   \              0x4E 0x45    
   \              0x41 0x52    
   \              0x5B 0x37    
   \              0x5D 0x00    
   \   000002A4   0x00 0x01          DC8 0, 1, 0, 0
   \              0x00 0x00    
   \   000002A8   0x........         DC32 setpara + 5CH
   \   000002AC   0x57 0x45          DC8 "WEI_NEAR[8]"
   \              0x49 0x5F    
   \              0x4E 0x45    
   \              0x41 0x52    
   \              0x5B 0x38    
   \              0x5D 0x00    
   \   000002B8   0x00 0x01          DC8 0, 1, 0, 0
   \              0x00 0x00    
   \   000002BC   0x........         DC32 setpara + 60H
   \   000002C0   0x57 0x45          DC8 "WEI_NEAR[9]"
   \              0x49 0x5F    
   \              0x4E 0x45    
   \              0x41 0x52    
   \              0x5B 0x39    
   \              0x5D 0x00    
   \   000002CC   0x00 0x01          DC8 0, 1, 0, 0
   \              0x00 0x00    
   \   000002D0   0x........         DC32 setpara + 64H
   \   000002D4   0x57 0x45          DC8 "WEI_NEAR[10]"
   \              0x49 0x5F    
   \              0x4E 0x45    
   \              0x41 0x52    
   \              0x5B 0x31    
   \              0x30 0x5D    
   \              0x00         
   \   000002E1   0x01 0x00          DC8 1, 0, 0
   \              0x00         
   \   000002E4   0x........         DC32 setpara + 68H
   \   000002E8   0x57 0x45          DC8 "WEI_FAR[0]"
   \              0x49 0x5F    
   \              0x46 0x41    
   \              0x52 0x5B    
   \              0x30 0x5D    
   \              0x00         
   \   000002F3   0x00 0x00          DC8 0, 0, 1, 0, 0
   \              0x01 0x00    
   \              0x00         
   \   000002F8   0x........         DC32 setpara + 6CH
   \   000002FC   0x57 0x45          DC8 "WEI_FAR[1]"
   \              0x49 0x5F    
   \              0x46 0x41    
   \              0x52 0x5B    
   \              0x31 0x5D    
   \              0x00         
   \   00000307   0x00 0x00          DC8 0, 0, 1, 0, 0
   \              0x01 0x00    
   \              0x00         
   \   0000030C   0x........         DC32 setpara + 70H
   \   00000310   0x57 0x45          DC8 "WEI_FAR[2]"
   \              0x49 0x5F    
   \              0x46 0x41    
   \              0x52 0x5B    
   \              0x32 0x5D    
   \              0x00         
   \   0000031B   0x00 0x00          DC8 0, 0, 1, 0, 0
   \              0x01 0x00    
   \              0x00         
   \   00000320   0x........         DC32 setpara + 74H
   \   00000324   0x57 0x45          DC8 "WEI_FAR[3]"
   \              0x49 0x5F    
   \              0x46 0x41    
   \              0x52 0x5B    
   \              0x33 0x5D    
   \              0x00         
   \   0000032F   0x00 0x00          DC8 0, 0, 1, 0, 0
   \              0x01 0x00    
   \              0x00         
   \   00000334   0x........         DC32 setpara + 78H
   \   00000338   0x57 0x45          DC8 "WEI_FAR[4]"
   \              0x49 0x5F    
   \              0x46 0x41    
   \              0x52 0x5B    
   \              0x34 0x5D    
   \              0x00         
   \   00000343   0x00 0x00          DC8 0, 0, 1, 0, 0
   \              0x01 0x00    
   \              0x00         
   \   00000348   0x........         DC32 setpara + 7CH
   \   0000034C   0x57 0x45          DC8 "WEI_FAR[5]"
   \              0x49 0x5F    
   \              0x46 0x41    
   \              0x52 0x5B    
   \              0x35 0x5D    
   \              0x00         
   \   00000357   0x00 0x00          DC8 0, 0, 1, 0, 0
   \              0x01 0x00    
   \              0x00         
   \   0000035C   0x........         DC32 setpara + 80H
   \   00000360   0x57 0x45          DC8 "WEI_FAR[6]"
   \              0x49 0x5F    
   \              0x46 0x41    
   \              0x52 0x5B    
   \              0x36 0x5D    
   \              0x00         
   \   0000036B   0x00 0x00          DC8 0, 0, 1, 0, 0
   \              0x01 0x00    
   \              0x00         
   \   00000370   0x........         DC32 setpara + 84H
   \   00000374   0x57 0x45          DC8 "WEI_FAR[7]"
   \              0x49 0x5F    
   \              0x46 0x41    
   \              0x52 0x5B    
   \              0x37 0x5D    
   \              0x00         
   \   0000037F   0x00 0x00          DC8 0, 0, 1, 0, 0
   \              0x01 0x00    
   \              0x00         
   \   00000384   0x........         DC32 setpara + 88H
   \   00000388   0x57 0x45          DC8 "WEI_FAR[8]"
   \              0x49 0x5F    
   \              0x46 0x41    
   \              0x52 0x5B    
   \              0x38 0x5D    
   \              0x00         
   \   00000393   0x00 0x00          DC8 0, 0, 1, 0, 0
   \              0x01 0x00    
   \              0x00         
   \   00000398   0x........         DC32 setpara + 8CH
   \   0000039C   0x57 0x45          DC8 "WEI_FAR[9]"
   \              0x49 0x5F    
   \              0x46 0x41    
   \              0x52 0x5B    
   \              0x39 0x5D    
   \              0x00         
   \   000003A7   0x00 0x00          DC8 0, 0, 1, 0, 0
   \              0x01 0x00    
   \              0x00         
   \   000003AC   0x........         DC32 setpara + 90H
   \   000003B0   0x57 0x45          DC8 "WEI_FAR[10]"
   \              0x49 0x5F    
   \              0x46 0x41    
   \              0x52 0x5B    
   \              0x31 0x30    
   \              0x5D 0x00    
   \   000003BC   0x00 0x01          DC8 0, 1, 0, 0
   \              0x00 0x00    
   \   000003C0   0x00000000         DC32 0H
   \   000003C4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000003D4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000003E4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000003F4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000404   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000414   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000424   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000434   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000444   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000454   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000464   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000474   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000484   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000494   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000004A4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000004B4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000004C4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000004D4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000004E4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000004F4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000504   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000514   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000524   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000534   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000544   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000554   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000564   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000574   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000584   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000594   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000005A4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000005B4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000005C4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000005D4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000005E4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000005F4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000604   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000614   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000624   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000634   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000644   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000654   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000664   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000674   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000684   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000694   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000006A4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000006B4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000006C4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000006D4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000006E4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000006F4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000704   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000714   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000724   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000734   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000744   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000754   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000764   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000774   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000784   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000794   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000007A4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000007B4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000007C4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
     71          {
     72            {&setpara.SpeedPID.Kp,"SpeedKp",1}, //结构体内子结构体
     73            {&setpara.SpeedPID.Ki,"SpeedKi",1},
     74            {&setpara.SpeedPID.Kd,"SpeedKd",1},
     75            {&setpara.SpeedBANGBANG,"BANG",1},
     76            {&setpara.SetSpeedMax,"SpeedMax",10},
     77            {&setpara.SetSpeedMin,"SpeedMin",10},
     78            {&setpara.SteerPD.Kp,"SteerKp",1},
     79            {&setpara.SteerPD.Kd,"SteerKd",1},
     80            {&setpara.settime,"SETTIME",1},
     81            {&setpara.Steer.mid,"SteerMID",1},
     82            {&setpara.Steer.maxturn,"SteerMAXTURN",1},
     83            {&setpara.track_amp,"TRACK_AMP",1},
     84            {&setpara.lose_threshold,"LoseThresh",1},
     85            {&setpara.K_far,"K_Far",1},
     86            {&setpara.K_near,"K_Near",1},
     87            {&setpara.cal_far[0],"CAL_FAR[0]",1},
     88            {&setpara.cal_far[1],"CAL_FAR[1]",1},
     89            {&setpara.cal_far[2],"CAL_FAR[2]",1},
     90            {&setpara.cal_far[3],"CAL_FAR[3]",1},
     91            {&setpara.cal_far[4],"CAL_FAR[4]",1},
     92            {&setpara.cal_far[5],"CAL_FAR[5]",1},
     93            {&setpara.cal_far[6],"CAL_FAR[6]",1},
     94            {&setpara.cal_far[7],"CAL_FAR[7]",1},
     95            {&setpara.cal_far[8],"CAL_FAR[8]",1},
     96            {&setpara.cal_far[9],"CAL_FAR[9]",1},
     97            {&setpara.cal_far[10],"CAL_FAR[10]",1},
     98            {&setpara.weight_near[0],"WEI_NEAR[0]",1},
     99            {&setpara.weight_near[1],"WEI_NEAR[1]",1},
    100            {&setpara.weight_near[2],"WEI_NEAR[2]",1},
    101            {&setpara.weight_near[3],"WEI_NEAR[3]",1},
    102            {&setpara.weight_near[4],"WEI_NEAR[4]",1},
    103            {&setpara.weight_near[5],"WEI_NEAR[5]",1},
    104            {&setpara.weight_near[6],"WEI_NEAR[6]",1},
    105            {&setpara.weight_near[7],"WEI_NEAR[7]",1},
    106            {&setpara.weight_near[8],"WEI_NEAR[8]",1},
    107            {&setpara.weight_near[9],"WEI_NEAR[9]",1},
    108            {&setpara.weight_near[10],"WEI_NEAR[10]",1},
    109            {&setpara.weight_far[0],"WEI_FAR[0]",1},
    110            {&setpara.weight_far[1],"WEI_FAR[1]",1},
    111            {&setpara.weight_far[2],"WEI_FAR[2]",1},
    112            {&setpara.weight_far[3],"WEI_FAR[3]",1},
    113            {&setpara.weight_far[4],"WEI_FAR[4]",1},
    114            {&setpara.weight_far[5],"WEI_FAR[5]",1},
    115            {&setpara.weight_far[6],"WEI_FAR[6]",1},
    116            {&setpara.weight_far[7],"WEI_FAR[7]",1},
    117            {&setpara.weight_far[8],"WEI_FAR[8]",1},
    118            {&setpara.weight_far[9],"WEI_FAR[9]",1},
    119            {&setpara.weight_far[10],"WEI_FAR[10]",1},          //权重
    120            
    121            {0}
    122          };
    123          
    124          // 以下变量定义均采用FatFs文件系统变量类型

   \                                 In section .bss, align 1
    125          FRESULT rc;			//结果代码 
   \                     rc:
   \   00000000                      DS8 1

   \                                 In section .bss, align 4
    126          FATFS fatfs;			// 文件系统对象 
   \                     fatfs:
   \   00000000                      DS8 568

   \                                 In section .bss, align 4
    127          FIL fil;			// 文件对象 
   \                     fil:
   \   00000000                      DS8 556

   \                                 In section .bss, align 4
    128          UINT bw, br;
   \                     bw:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     br:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    129          int16 OutData[4]; 
   \                     OutData:
   \   00000000                      DS8 8

   \                                 In section .bss, align 4
    130          uint32 save_ram_no = 0;
   \                     save_ram_no:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    131          uint32 save_uart_no = 0;
   \                     save_uart_no:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    132          uint8 RAM_BUFF[60][512] = {0};
   \                     RAM_BUFF:
   \   00000000                      DS8 30720

   \                                 In section .bss, align 4
    133          uint8 SEND_BUFF[512] = {0};
   \                     SEND_BUFF:
   \   00000000                      DS8 512
    134          
    135          
    136          #if 1/************************主函数*******************************/
    137          

   \                                 In section .text, align 2, keep-with-next
    138          void main (void)
    139          {
   \                     main: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    140            DisableInterrupts;
   \   00000002   0xB672             CPSID    I
    141            init_all();
   \   00000004   0x.... 0x....      BL       init_all
    142            EnableInterrupts;
   \   00000008   0xB662             CPSIE    I
    143            
    144            while(1)
    145            {
    146              key_check();
   \                     ??main_0: (+1)
   \   0000000A   0x.... 0x....      BL       key_check
    147              show_oled();
   \   0000000E   0x.... 0x....      BL       show_oled
    148              send_uart();
   \   00000012   0x.... 0x....      BL       send_uart
   \   00000016   0xE7F8             B.N      ??main_0
    149          //    write_sd();
    150            } 
    151            
    152          }
    153          
    154          #endif
    155          
    156          
    157          
    158          
    159          
    160          #if 1/*************************子程序组**************************/

   \                                 In section .text, align 2, keep-with-next
    161           void key_check()                //查询
    162          {
   \                     key_check: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    163            //记录按键时间
    164            uint32 pushtime=T;
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable11_6
   \   00000006   0x6804             LDR      R4,[R0, #+0]
    165            
    166            //旋钮或拨轮按下操作后屏幕初始化，以修复花屏
    167            if(status_button==PRESS||status_button==PUSH)
   \   00000008   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   0000000C   0x7800             LDRB     R0,[R0, #+0]
   \   0000000E   0x2801             CMP      R0,#+1
   \   00000010   0xD004             BEQ.N    ??key_check_0
   \   00000012   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   00000016   0x7800             LDRB     R0,[R0, #+0]
   \   00000018   0x2806             CMP      R0,#+6
   \   0000001A   0xD101             BNE.N    ??key_check_1
    168              OLED_Init();        
   \                     ??key_check_0: (+1)
   \   0000001C   0x.... 0x....      BL       OLED_Init
    169            
    170            switch(status_button)
   \                     ??key_check_1: (+1)
   \   00000020   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   00000024   0x7800             LDRB     R0,[R0, #+0]
   \   00000026   0x2801             CMP      R0,#+1
   \   00000028   0xD006             BEQ.N    ??key_check_2
   \   0000002A   0x2804             CMP      R0,#+4
   \   0000002C   0xD02F             BEQ.N    ??key_check_3
   \   0000002E   0x2805             CMP      R0,#+5
   \   00000030   0xD06C             BEQ.N    ??key_check_4
   \   00000032   0x2806             CMP      R0,#+6
   \   00000034   0xD01C             BEQ.N    ??key_check_5
   \   00000036   0xE0A9             B.N      ??key_check_6
    171            {
    172            case PRESS:           //旋钮按下
    173              while(!PTC3_I);
   \                     ??key_check_2: (+1)
   \   00000038   0x.... 0x....      LDR.W    R0,??DataTable11_8  ;; 0x43fe120c
   \   0000003C   0x6800             LDR      R0,[R0, #+0]
   \   0000003E   0x2800             CMP      R0,#+0
   \   00000040   0xD0FA             BEQ.N    ??key_check_2
    174              if(T-pushtime<500)
   \   00000042   0x.... 0x....      LDR.W    R0,??DataTable11_6
   \   00000046   0x6800             LDR      R0,[R0, #+0]
   \   00000048   0x1B00             SUBS     R0,R0,R4
   \   0000004A   0xF5B0 0x7FFA      CMP      R0,#+500
   \   0000004E   0xD208             BCS.N    ??key_check_7
    175              {
    176                oled.changepara ^= 1;    //状态取反
   \   00000050   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   00000054   0x7800             LDRB     R0,[R0, #+0]
   \   00000056   0xF090 0x0001      EORS     R0,R0,#0x1
   \   0000005A   0x.... 0x....      LDR.W    R1,??DataTable11_9
   \   0000005E   0x7008             STRB     R0,[R1, #+0]
   \   00000060   0xE005             B.N      ??key_check_8
    177              }
    178              else
    179              {
    180                save_flash();
   \                     ??key_check_7: (+1)
   \   00000062   0x.... 0x....      BL       save_flash
    181                eleccar.status = 1;
   \   00000066   0x2001             MOVS     R0,#+1
   \   00000068   0x.... 0x....      LDR.W    R1,??DataTable11_10
   \   0000006C   0x7008             STRB     R0,[R1, #+0]
    182              }
    183              break;
   \                     ??key_check_8: (+1)
   \   0000006E   0xE08D             B.N      ??key_check_9
    184            case PUSH:            //拨轮按下
    185              while(!PTC6_I);
   \                     ??key_check_5: (+1)
   \   00000070   0x.... 0x....      LDR.W    R0,??DataTable11_11  ;; 0x43fe1218
   \   00000074   0x6800             LDR      R0,[R0, #+0]
   \   00000076   0x2800             CMP      R0,#+0
   \   00000078   0xD0FA             BEQ.N    ??key_check_5
    186              if(T-pushtime<500)
   \   0000007A   0x.... 0x....      LDR.W    R0,??DataTable11_6
   \   0000007E   0x6800             LDR      R0,[R0, #+0]
   \   00000080   0x1B00             SUBS     R0,R0,R4
   \   00000082   0xF5B0 0x7FFA      CMP      R0,#+500
   \   00000086   0xD301             BCC.N    ??key_check_10
    187              {
    188              }
    189              else
    190              {
    191                init_setpara();       //初始化所有参数
   \   00000088   0x.... 0x....      BL       init_setpara
    192              }
    193              break;
   \                     ??key_check_10: (+1)
   \   0000008C   0xE07E             B.N      ??key_check_9
    194            case UP:              //拨轮向上
    195              while(!PTC4_I);
   \                     ??key_check_3: (+1)
   \   0000008E   0x.... 0x....      LDR.W    R0,??DataTable11_12  ;; 0x43fe1210
   \   00000092   0x6800             LDR      R0,[R0, #+0]
   \   00000094   0x2800             CMP      R0,#+0
   \   00000096   0xD0FA             BEQ.N    ??key_check_3
    196              if(T-pushtime<500)
   \   00000098   0x.... 0x....      LDR.W    R0,??DataTable11_6
   \   0000009C   0x6800             LDR      R0,[R0, #+0]
   \   0000009E   0x1B00             SUBS     R0,R0,R4
   \   000000A0   0xF5B0 0x7FFA      CMP      R0,#+500
   \   000000A4   0xD231             BCS.N    ??key_check_11
    197              {
    198                if(oled.changepara)   //参数改变状态
   \   000000A6   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   000000AA   0x7800             LDRB     R0,[R0, #+0]
   \   000000AC   0x2800             CMP      R0,#+0
   \   000000AE   0xD014             BEQ.N    ??key_check_12
    199                {
    200                  if(oled.para_select >0)
   \   000000B0   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   000000B4   0x8840             LDRH     R0,[R0, #+2]
   \   000000B6   0x2800             CMP      R0,#+0
   \   000000B8   0xD007             BEQ.N    ??key_check_13
    201                    oled.para_select --;
   \   000000BA   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   000000BE   0x8840             LDRH     R0,[R0, #+2]
   \   000000C0   0x1E40             SUBS     R0,R0,#+1
   \   000000C2   0x.... 0x....      LDR.W    R1,??DataTable11_9
   \   000000C6   0x8048             STRH     R0,[R1, #+2]
   \   000000C8   0xE01F             B.N      ??key_check_11
    202                  else
    203                    oled.para_select = oled.para_num-1;
   \                     ??key_check_13: (+1)
   \   000000CA   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   000000CE   0x8880             LDRH     R0,[R0, #+4]
   \   000000D0   0x1E40             SUBS     R0,R0,#+1
   \   000000D2   0x.... 0x....      LDR.W    R1,??DataTable11_9
   \   000000D6   0x8048             STRH     R0,[R1, #+2]
   \   000000D8   0xE017             B.N      ??key_check_11
    204                }
    205                else              //参数选择状态
    206                {
    207                  if(oled.showpage > oled.showpage_min)
   \                     ??key_check_12: (+1)
   \   000000DA   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   000000DE   0xF990 0x0008      LDRSB    R0,[R0, #+8]
   \   000000E2   0x.... 0x....      LDR.W    R1,??DataTable11_9
   \   000000E6   0xF991 0x1006      LDRSB    R1,[R1, #+6]
   \   000000EA   0x4288             CMP      R0,R1
   \   000000EC   0xDA07             BGE.N    ??key_check_14
    208                    oled.showpage --;//减减
   \   000000EE   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   000000F2   0x7980             LDRB     R0,[R0, #+6]
   \   000000F4   0x1E40             SUBS     R0,R0,#+1
   \   000000F6   0x.... 0x....      LDR.W    R1,??DataTable11_9
   \   000000FA   0x7188             STRB     R0,[R1, #+6]
   \   000000FC   0xE005             B.N      ??key_check_11
    209                  else
    210                    oled.showpage = oled.showpage_max;
   \                     ??key_check_14: (+1)
   \   000000FE   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   00000102   0x79C0             LDRB     R0,[R0, #+7]
   \   00000104   0x.... 0x....      LDR.W    R1,??DataTable11_9
   \   00000108   0x7188             STRB     R0,[R1, #+6]
    211                }
    212              }
    213              else
    214              {
    215              }
    216              break;  
   \                     ??key_check_11: (+1)
   \   0000010A   0xE03F             B.N      ??key_check_9
    217            case DOWN:
    218              while(!PTC8_I);
   \                     ??key_check_4: (+1)
   \   0000010C   0x.... 0x....      LDR.W    R0,??DataTable11_13  ;; 0x43fe1220
   \   00000110   0x6800             LDR      R0,[R0, #+0]
   \   00000112   0x2800             CMP      R0,#+0
   \   00000114   0xD0FA             BEQ.N    ??key_check_4
    219              if(T-pushtime<500)
   \   00000116   0x.... 0x....      LDR.W    R0,??DataTable11_6
   \   0000011A   0x6800             LDR      R0,[R0, #+0]
   \   0000011C   0x1B00             SUBS     R0,R0,R4
   \   0000011E   0xF5B0 0x7FFA      CMP      R0,#+500
   \   00000122   0xD232             BCS.N    ??key_check_15
    220              {
    221                if(oled.changepara)   //参数改变状态
   \   00000124   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   00000128   0x7800             LDRB     R0,[R0, #+0]
   \   0000012A   0x2800             CMP      R0,#+0
   \   0000012C   0xD015             BEQ.N    ??key_check_16
    222                {
    223                  if(oled.para_select <oled.para_num-1)
   \   0000012E   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   00000132   0x8840             LDRH     R0,[R0, #+2]
   \   00000134   0x.... 0x....      LDR.W    R1,??DataTable11_9
   \   00000138   0x8889             LDRH     R1,[R1, #+4]
   \   0000013A   0x1E49             SUBS     R1,R1,#+1
   \   0000013C   0x4288             CMP      R0,R1
   \   0000013E   0xDA07             BGE.N    ??key_check_17
    224                    oled.para_select ++;
   \   00000140   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   00000144   0x8840             LDRH     R0,[R0, #+2]
   \   00000146   0x1C40             ADDS     R0,R0,#+1
   \   00000148   0x.... 0x....      LDR.W    R1,??DataTable11_9
   \   0000014C   0x8048             STRH     R0,[R1, #+2]
   \   0000014E   0xE01C             B.N      ??key_check_15
    225                  else
    226                    oled.para_select = 0;
   \                     ??key_check_17: (+1)
   \   00000150   0x2000             MOVS     R0,#+0
   \   00000152   0x.... 0x....      LDR.W    R1,??DataTable11_9
   \   00000156   0x8048             STRH     R0,[R1, #+2]
   \   00000158   0xE017             B.N      ??key_check_15
    227                }
    228                else              //参数选择状态
    229                {
    230                  if(oled.showpage < oled.showpage_max)
   \                     ??key_check_16: (+1)
   \   0000015A   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   0000015E   0xF990 0x0006      LDRSB    R0,[R0, #+6]
   \   00000162   0x.... 0x....      LDR.W    R1,??DataTable11_9
   \   00000166   0xF991 0x1007      LDRSB    R1,[R1, #+7]
   \   0000016A   0x4288             CMP      R0,R1
   \   0000016C   0xDA07             BGE.N    ??key_check_18
    231                    oled.showpage ++;
   \   0000016E   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   00000172   0x7980             LDRB     R0,[R0, #+6]
   \   00000174   0x1C40             ADDS     R0,R0,#+1
   \   00000176   0x.... 0x....      LDR.W    R1,??DataTable11_9
   \   0000017A   0x7188             STRB     R0,[R1, #+6]
   \   0000017C   0xE005             B.N      ??key_check_15
    232                  else
    233                    oled.showpage = oled.showpage_min;
   \                     ??key_check_18: (+1)
   \   0000017E   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   00000182   0x7A00             LDRB     R0,[R0, #+8]
   \   00000184   0x.... 0x....      LDR.W    R1,??DataTable11_9
   \   00000188   0x7188             STRB     R0,[R1, #+6]
    234                }
    235              }
    236              else
    237              {
    238              }
    239              break;
   \                     ??key_check_15: (+1)
   \   0000018A   0xE7FF             B.N      ??key_check_9
    240            default:
    241              break;
    242            }
    243            //清除按键状态
    244            status_button = NONE;
   \                     ??key_check_6: (+1)
   \                     ??key_check_9: (+1)
   \   0000018C   0x2000             MOVS     R0,#+0
   \   0000018E   0x.... 0x....      LDR.W    R1,??DataTable11_7
   \   00000192   0x7008             STRB     R0,[R1, #+0]
    245            
    246          }
   \   00000194   0xBD10             POP      {R4,PC}          ;; return
    247          

   \                                 In section .text, align 2, keep-with-next
    248          void save_flash()
    249          {
   \                     save_flash: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xF5AD 0x7D01      SUB      SP,SP,#+516
    250            int res;
    251            uint32 data_to_write[128];
    252            for(int i=0;i<oled.para_num;i++)
   \   00000006   0x2000             MOVS     R0,#+0
   \   00000008   0xE00A             B.N      ??save_flash_0
    253              data_to_write[i] = *paralist[i].para;
   \                     ??save_flash_1: (+1)
   \   0000000A   0x.... 0x....      LDR.W    R1,??DataTable11_14
   \   0000000E   0x2214             MOVS     R2,#+20
   \   00000010   0xFB02 0x1100      MLA      R1,R2,R0,R1
   \   00000014   0x6809             LDR      R1,[R1, #+0]
   \   00000016   0x6809             LDR      R1,[R1, #+0]
   \   00000018   0xAA00             ADD      R2,SP,#+0
   \   0000001A   0xF842 0x1020      STR      R1,[R2, R0, LSL #+2]
   \   0000001E   0x1C40             ADDS     R0,R0,#+1
   \                     ??save_flash_0: (+1)
   \   00000020   0x.... 0x....      LDR.W    R1,??DataTable11_9
   \   00000024   0x8889             LDRH     R1,[R1, #+4]
   \   00000026   0x4288             CMP      R0,R1
   \   00000028   0xDBEF             BLT.N    ??save_flash_1
    254            res = disk_write(0,(uint8*)data_to_write,0,1);
   \   0000002A   0x2301             MOVS     R3,#+1
   \   0000002C   0x2200             MOVS     R2,#+0
   \   0000002E   0xA900             ADD      R1,SP,#+0
   \   00000030   0x2000             MOVS     R0,#+0
   \   00000032   0x.... 0x....      BL       disk_write
   \   00000036   0x0001             MOVS     R1,R0
    255            printf("SD WRITE = %3d \n",res);
   \   00000038   0x.... 0x....      LDR.W    R0,??DataTable11_15
   \   0000003C   0x.... 0x....      BL       printf
    256          }
   \   00000040   0xF50D 0x7D01      ADD      SP,SP,#+516
   \   00000044   0xBD00             POP      {PC}             ;; return
    257          

   \                                 In section .text, align 2, keep-with-next
    258          void read_flash()
    259          {
   \                     read_flash: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xF5AD 0x7D01      SUB      SP,SP,#+516
    260            int res;
    261            uint32 data_read[128];
    262            res = disk_read(0,(uint8*)data_read,0,1);
   \   00000006   0x2301             MOVS     R3,#+1
   \   00000008   0x2200             MOVS     R2,#+0
   \   0000000A   0xA900             ADD      R1,SP,#+0
   \   0000000C   0x2000             MOVS     R0,#+0
   \   0000000E   0x.... 0x....      BL       disk_read
   \   00000012   0x0001             MOVS     R1,R0
    263            printf("SD READ = %3d \n",res);
   \   00000014   0x.... 0x....      LDR.W    R0,??DataTable11_16
   \   00000018   0x.... 0x....      BL       printf
    264            //参数读取
    265            for(int i=0;i<oled.para_num;i++)
   \   0000001C   0x2000             MOVS     R0,#+0
   \   0000001E   0xE00A             B.N      ??read_flash_0
    266            {
    267              *paralist[i].para = data_read[i];
   \                     ??read_flash_1: (+1)
   \   00000020   0xA900             ADD      R1,SP,#+0
   \   00000022   0xF851 0x1020      LDR      R1,[R1, R0, LSL #+2]
   \   00000026   0x.... 0x....      LDR.W    R2,??DataTable11_14
   \   0000002A   0x2314             MOVS     R3,#+20
   \   0000002C   0xFB03 0x2200      MLA      R2,R3,R0,R2
   \   00000030   0x6812             LDR      R2,[R2, #+0]
   \   00000032   0x6011             STR      R1,[R2, #+0]
    268            }
   \   00000034   0x1C40             ADDS     R0,R0,#+1
   \                     ??read_flash_0: (+1)
   \   00000036   0x.... 0x....      LDR.W    R1,??DataTable11_9
   \   0000003A   0x8889             LDRH     R1,[R1, #+4]
   \   0000003C   0x4288             CMP      R0,R1
   \   0000003E   0xDBEF             BLT.N    ??read_flash_1
    269          }
   \   00000040   0xF50D 0x7D01      ADD      SP,SP,#+516
   \   00000044   0xBD00             POP      {PC}             ;; return

   \                                 In section .text, align 2, keep-with-next
    270          void show_oled()
    271          {
   \                     show_oled: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    272            if(oled.showpage>=0)
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   00000006   0xF990 0x0006      LDRSB    R0,[R0, #+6]
   \   0000000A   0x2800             CMP      R0,#+0
   \   0000000C   0xD408             BMI.N    ??show_oled_0
    273            {
    274              show_upperpage(oled.showpage);
   \   0000000E   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   00000012   0xF990 0x0006      LDRSB    R0,[R0, #+6]
   \   00000016   0x.... 0x....      BL       show_upperpage
    275              show_changeable();
   \   0000001A   0x.... 0x....      BL       show_changeable
   \   0000001E   0xE005             B.N      ??show_oled_1
    276            }
    277            else
    278            {
    279              show_fullpage(oled.showpage);             //潜在不确定
   \                     ??show_oled_0: (+1)
   \   00000020   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   00000024   0xF990 0x0006      LDRSB    R0,[R0, #+6]
   \   00000028   0x.... 0x....      BL       show_fullpage
    280            }
    281            
    282          }
   \                     ??show_oled_1: (+1)
   \   0000002C   0xBD01             POP      {R0,PC}          ;; return
    283          #endif
    284          

   \                                 In section .text, align 2, keep-with-next
    285          void show_upperpage(int page)
    286          {
   \                     show_upperpage: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
    287          //  switch(0)
    288          //  {
    289          //  case 0:
    290          //    oledprintf(0,0,"leftF1 %6d",indata.leftF1);
    291          //    oledprintf(1,0,"rightF1 %6d",indata.rightF1);
    292          //
    293          //    break;
    294          //  default:
    295          //    break;
    296          //  }
    297            static int lastpage;
    298            if(lastpage!=page)
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable11_17
   \   00000008   0x6800             LDR      R0,[R0, #+0]
   \   0000000A   0x42A0             CMP      R0,R4
   \   0000000C   0xD00B             BEQ.N    ??show_upperpage_0
    299            {
    300              for(int i=0;i<5;LCD_ClearLine(i++));        //换页前清行
   \   0000000E   0x2500             MOVS     R5,#+0
   \   00000010   0xE004             B.N      ??show_upperpage_1
   \                     ??show_upperpage_2: (+1)
   \   00000012   0x0028             MOVS     R0,R5
   \   00000014   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000016   0x.... 0x....      BL       LCD_ClearLine
   \   0000001A   0x1C6D             ADDS     R5,R5,#+1
   \                     ??show_upperpage_1: (+1)
   \   0000001C   0x2D05             CMP      R5,#+5
   \   0000001E   0xDBF8             BLT.N    ??show_upperpage_2
    301              lastpage=page;
   \   00000020   0x.... 0x....      LDR.W    R0,??DataTable11_17
   \   00000024   0x6004             STR      R4,[R0, #+0]
    302            }
    303            
    304            switch(page)
   \                     ??show_upperpage_0: (+1)
   \   00000026   0x2C00             CMP      R4,#+0
   \   00000028   0xD005             BEQ.N    ??show_upperpage_3
   \   0000002A   0x2C02             CMP      R4,#+2
   \   0000002C   0xD03B             BEQ.N    ??show_upperpage_4
   \   0000002E   0xD315             BCC.N    ??show_upperpage_5
   \   00000030   0x2C03             CMP      R4,#+3
   \   00000032   0xD039             BEQ.N    ??show_upperpage_6
   \   00000034   0xE039             B.N      ??show_upperpage_7
    305            {
    306            case 0:
    307              oledprintf(0,0,"leftF %6d",LF);
   \                     ??show_upperpage_3: (+1)
   \   00000036   0x.... 0x....      LDR.W    R0,??DataTable11_18
   \   0000003A   0x6803             LDR      R3,[R0, #+0]
   \   0000003C   0x.... 0x....      LDR.W    R2,??DataTable11_19
   \   00000040   0x2100             MOVS     R1,#+0
   \   00000042   0x2000             MOVS     R0,#+0
   \   00000044   0x.... 0x....      BL       oledprintf
    308              oledprintf(1,0,"rightF %6d",RF);
   \   00000048   0x.... 0x....      LDR.W    R0,??DataTable11_18
   \   0000004C   0x6843             LDR      R3,[R0, #+4]
   \   0000004E   0x.... 0x....      LDR.W    R2,??DataTable11_20
   \   00000052   0x2100             MOVS     R1,#+0
   \   00000054   0x2001             MOVS     R0,#+1
   \   00000056   0x.... 0x....      BL       oledprintf
    309          //    oledprintf(2,0,"NearOUT: %6d",track.near_out);
    310          //    oledprintf(3,0,"FarOUT: %6d",track.far_out);
    311              
    312              break;
   \   0000005A   0xE026             B.N      ??show_upperpage_8
    313            case 1:
    314          //    oledprintf(0,0,"%4d %4d  %4d %4d",indata.ad[0],indata.ad[5],indata.ad[4],indata.ad[1]);
    315              oledprintf(0,0,"SpeedOUT: %6d",outdata.Motor_Speed);
   \                     ??show_upperpage_5: (+1)
   \   0000005C   0x.... 0x....      LDR.W    R0,??DataTable11_21
   \   00000060   0x6883             LDR      R3,[R0, #+8]
   \   00000062   0x.... 0x....      LDR.W    R2,??DataTable11_22
   \   00000066   0x2100             MOVS     R1,#+0
   \   00000068   0x2000             MOVS     R0,#+0
   \   0000006A   0x.... 0x....      BL       oledprintf
    316              oledprintf(1,0,"MotorPWM: %6d",outdata.Motor_Power);
   \   0000006E   0x.... 0x....      LDR.W    R0,??DataTable11_21
   \   00000072   0x68C3             LDR      R3,[R0, #+12]
   \   00000074   0x.... 0x....      LDR.W    R2,??DataTable11_23
   \   00000078   0x2100             MOVS     R1,#+0
   \   0000007A   0x2001             MOVS     R0,#+1
   \   0000007C   0x.... 0x....      BL       oledprintf
    317              oledprintf(2,0,"SpeedFB:%5d",indata.febspeed);
   \   00000080   0x.... 0x....      LDR.W    R0,??DataTable11_18
   \   00000084   0x6883             LDR      R3,[R0, #+8]
   \   00000086   0x.... 0x....      LDR.W    R2,??DataTable11_24
   \   0000008A   0x2100             MOVS     R1,#+0
   \   0000008C   0x2002             MOVS     R0,#+2
   \   0000008E   0x.... 0x....      BL       oledprintf
    318              oledprintf(3,0,"SteerPWM: %6d",outdata.Steer_PWM);
   \   00000092   0x.... 0x....      LDR.W    R0,??DataTable11_21
   \   00000096   0x6843             LDR      R3,[R0, #+4]
   \   00000098   0x.... 0x....      LDR.W    R2,??DataTable11_25
   \   0000009C   0x2100             MOVS     R1,#+0
   \   0000009E   0x2003             MOVS     R0,#+3
   \   000000A0   0x.... 0x....      BL       oledprintf
    319              break;
   \   000000A4   0xE001             B.N      ??show_upperpage_8
    320            case 2:
    321          //    oledprintf(0,0,"NearCal: %6d",track.near_cal);
    322          //    oledprintf(1,0,"FarCal: %6d",track.far_cal);
    323          //    oledprintf(2,0,"%4d %4d  %4d %4d",LH,RH,LF,RF);
    324          //    oledprintf(3,0,"FarOUT: %6d",track.far_out);
    325              
    326              break;
   \                     ??show_upperpage_4: (+1)
   \   000000A6   0xE000             B.N      ??show_upperpage_8
    327            case 3:
    328          //    oledprintf(1,0,"Battery: %1d.%02dV",eleccar.batt_volt/100,eleccar.batt_volt%100);
    329          //    oledprintf(2,0,"A%6d,%6d,%6d",indata.mpu6050.acc_x,indata.mpu6050.acc_y,indata.mpu6050.acc_z);
    330          //    oledprintf(3,0,"G%6d,%6d,%6d",indata.mpu6050.gyr_x,indata.mpu6050.gyr_y,indata.mpu6050.gyr_z);
    331              break;
   \                     ??show_upperpage_6: (+1)
   \   000000A8   0xE7FF             B.N      ??show_upperpage_8
    332            default:
    333              break;
    334            }
    335          }
   \                     ??show_upperpage_7: (+1)
   \                     ??show_upperpage_8: (+1)
   \   000000AA   0xBD31             POP      {R0,R4,R5,PC}    ;; return

   \                                 In section .bss, align 4
   \                     ??lastpage:
   \   00000000                      DS8 4

   \                                 In section .text, align 2, keep-with-next
    336          void show_changeable()
    337          {
   \                     show_changeable: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB082             SUB      SP,SP,#+8
    338            int temp_para_select = oled.para_select;      //由于潜在的中断干扰，必须先存储参数序号以避免危险
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   00000008   0x8844             LDRH     R4,[R0, #+2]
    339            if(temp_para_select>0)
   \   0000000A   0x2C01             CMP      R4,#+1
   \   0000000C   0xDB1B             BLT.N    ??show_changeable_0
    340            {
    341              oledprintf(5,0,"%02d.%-13s",temp_para_select-1,paralist[temp_para_select-1].label);
   \   0000000E   0x.... 0x....      LDR.W    R0,??DataTable11_14
   \   00000012   0x2114             MOVS     R1,#+20
   \   00000014   0xFB01 0x0004      MLA      R0,R1,R4,R0
   \   00000018   0x3810             SUBS     R0,R0,#+16
   \   0000001A   0x9000             STR      R0,[SP, #+0]
   \   0000001C   0x1E63             SUBS     R3,R4,#+1
   \   0000001E   0x.... 0x....      LDR.W    R2,??DataTable11_26
   \   00000022   0x2100             MOVS     R1,#+0
   \   00000024   0x2005             MOVS     R0,#+5
   \   00000026   0x.... 0x....      BL       oledprintf
    342              oledprintf(5,96,"%5d",*paralist[temp_para_select-1].para);
   \   0000002A   0x.... 0x....      LDR.W    R0,??DataTable11_14
   \   0000002E   0x2114             MOVS     R1,#+20
   \   00000030   0xFB01 0x0004      MLA      R0,R1,R4,R0
   \   00000034   0xF850 0x0C14      LDR      R0,[R0, #-20]
   \   00000038   0x6803             LDR      R3,[R0, #+0]
   \   0000003A   0x....             ADR.N    R2,??DataTable10  ;; "%5d"
   \   0000003C   0x2160             MOVS     R1,#+96
   \   0000003E   0x2005             MOVS     R0,#+5
   \   00000040   0x.... 0x....      BL       oledprintf
   \   00000044   0xE002             B.N      ??show_changeable_1
    343            }
    344            else
    345            {
    346              LCD_ClearLine(5);
   \                     ??show_changeable_0: (+1)
   \   00000046   0x2005             MOVS     R0,#+5
   \   00000048   0x.... 0x....      BL       LCD_ClearLine
    347            }
    348            if(oled.changepara)
   \                     ??show_changeable_1: (+1)
   \   0000004C   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   00000050   0x7800             LDRB     R0,[R0, #+0]
   \   00000052   0x2800             CMP      R0,#+0
   \   00000054   0xD01A             BEQ.N    ??show_changeable_2
    349            {
    350              oledprintf(6,0,"%02d.%-13s",temp_para_select,paralist[temp_para_select].label);
   \   00000056   0x.... 0x....      LDR.W    R0,??DataTable11_14
   \   0000005A   0x2114             MOVS     R1,#+20
   \   0000005C   0xFB01 0x0004      MLA      R0,R1,R4,R0
   \   00000060   0x1D00             ADDS     R0,R0,#+4
   \   00000062   0x9000             STR      R0,[SP, #+0]
   \   00000064   0x0023             MOVS     R3,R4
   \   00000066   0x.... 0x....      LDR.W    R2,??DataTable11_26
   \   0000006A   0x2100             MOVS     R1,#+0
   \   0000006C   0x2006             MOVS     R0,#+6
   \   0000006E   0x.... 0x....      BL       oledprintf
    351              oledprintfw(6,96,"%5d",*paralist[temp_para_select].para);
   \   00000072   0x.... 0x....      LDR.W    R0,??DataTable11_14
   \   00000076   0x2114             MOVS     R1,#+20
   \   00000078   0xFB01 0x0004      MLA      R0,R1,R4,R0
   \   0000007C   0x6800             LDR      R0,[R0, #+0]
   \   0000007E   0x6803             LDR      R3,[R0, #+0]
   \   00000080   0x....             ADR.N    R2,??DataTable10  ;; "%5d"
   \   00000082   0x2160             MOVS     R1,#+96
   \   00000084   0x2006             MOVS     R0,#+6
   \   00000086   0x.... 0x....      BL       oledprintfw
   \   0000008A   0xE019             B.N      ??show_changeable_3
    352            }
    353            else
    354            {  
    355              oledprintfw(6,0,"%02d.%-13s",temp_para_select,paralist[temp_para_select].label);
   \                     ??show_changeable_2: (+1)
   \   0000008C   0x.... 0x....      LDR.W    R0,??DataTable11_14
   \   00000090   0x2114             MOVS     R1,#+20
   \   00000092   0xFB01 0x0004      MLA      R0,R1,R4,R0
   \   00000096   0x1D00             ADDS     R0,R0,#+4
   \   00000098   0x9000             STR      R0,[SP, #+0]
   \   0000009A   0x0023             MOVS     R3,R4
   \   0000009C   0x.... 0x....      LDR.W    R2,??DataTable11_26
   \   000000A0   0x2100             MOVS     R1,#+0
   \   000000A2   0x2006             MOVS     R0,#+6
   \   000000A4   0x.... 0x....      BL       oledprintfw
    356              oledprintf(6,96,"%5d",*paralist[temp_para_select].para);
   \   000000A8   0x.... 0x....      LDR.W    R0,??DataTable11_14
   \   000000AC   0x2114             MOVS     R1,#+20
   \   000000AE   0xFB01 0x0004      MLA      R0,R1,R4,R0
   \   000000B2   0x6800             LDR      R0,[R0, #+0]
   \   000000B4   0x6803             LDR      R3,[R0, #+0]
   \   000000B6   0x....             ADR.N    R2,??DataTable10  ;; "%5d"
   \   000000B8   0x2160             MOVS     R1,#+96
   \   000000BA   0x2006             MOVS     R0,#+6
   \   000000BC   0x.... 0x....      BL       oledprintf
    357            }
    358            if(temp_para_select<oled.para_num-1)
   \                     ??show_changeable_3: (+1)
   \   000000C0   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   000000C4   0x8880             LDRH     R0,[R0, #+4]
   \   000000C6   0x1E40             SUBS     R0,R0,#+1
   \   000000C8   0x4284             CMP      R4,R0
   \   000000CA   0xDA1A             BGE.N    ??show_changeable_4
    359            {
    360              oledprintf(7,0,"%02d.%-13s",temp_para_select+1,paralist[temp_para_select+1].label);
   \   000000CC   0x.... 0x....      LDR.W    R0,??DataTable11_14
   \   000000D0   0x2114             MOVS     R1,#+20
   \   000000D2   0xFB01 0x0004      MLA      R0,R1,R4,R0
   \   000000D6   0x3018             ADDS     R0,R0,#+24
   \   000000D8   0x9000             STR      R0,[SP, #+0]
   \   000000DA   0x1C63             ADDS     R3,R4,#+1
   \   000000DC   0x.... 0x....      LDR.W    R2,??DataTable11_26
   \   000000E0   0x2100             MOVS     R1,#+0
   \   000000E2   0x2007             MOVS     R0,#+7
   \   000000E4   0x.... 0x....      BL       oledprintf
    361              oledprintf(7,96,"%5d",*paralist[temp_para_select+1].para);
   \   000000E8   0x.... 0x....      LDR.W    R0,??DataTable11_14
   \   000000EC   0x2114             MOVS     R1,#+20
   \   000000EE   0xFB01 0x0004      MLA      R0,R1,R4,R0
   \   000000F2   0x6940             LDR      R0,[R0, #+20]
   \   000000F4   0x6803             LDR      R3,[R0, #+0]
   \   000000F6   0x....             ADR.N    R2,??DataTable10  ;; "%5d"
   \   000000F8   0x2160             MOVS     R1,#+96
   \   000000FA   0x2007             MOVS     R0,#+7
   \   000000FC   0x.... 0x....      BL       oledprintf
   \   00000100   0xE002             B.N      ??show_changeable_5
    362            }  
    363            else
    364            {
    365              LCD_ClearLine(7);
   \                     ??show_changeable_4: (+1)
   \   00000102   0x2007             MOVS     R0,#+7
   \   00000104   0x.... 0x....      BL       LCD_ClearLine
    366            }
    367            
    368          }
   \                     ??show_changeable_5: (+1)
   \   00000108   0xBD13             POP      {R0,R1,R4,PC}    ;; return

   \                                 In section .text, align 2, keep-with-next
    369          void show_fullpage(int page)
    370          {
    371            switch(page)
   \                     show_fullpage: (+1)
   \   00000000   0xF07F 0x0102      MVNS     R1,#+2
   \   00000004   0x1A40             SUBS     R0,R0,R1
   \   00000006   0xD005             BEQ.N    ??show_fullpage_0
   \   00000008   0x1E40             SUBS     R0,R0,#+1
   \   0000000A   0xD002             BEQ.N    ??show_fullpage_1
   \   0000000C   0x1E40             SUBS     R0,R0,#+1
   \   0000000E   0xD102             BNE.N    ??show_fullpage_2
    372            {
    373            case -1:
    374              break;
   \                     ??show_fullpage_3: (+1)
   \   00000010   0xE001             B.N      ??show_fullpage_4
    375            case -2:
    376              break;
   \                     ??show_fullpage_1: (+1)
   \   00000012   0xE000             B.N      ??show_fullpage_4
    377            case -3:
    378              break;
   \                     ??show_fullpage_0: (+1)
   \   00000014   0xE7FF             B.N      ??show_fullpage_4
    379            default:
    380              break; 
    381            }
    382          }
   \                     ??show_fullpage_2: (+1)
   \                     ??show_fullpage_4: (+1)
   \   00000016   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
    383          unsigned short CRC_CHECK(unsigned char *Buf, unsigned char CRC_CNT)
    384          {
   \                     CRC_CHECK: (+1)
   \   00000000   0xB430             PUSH     {R4,R5}
    385            unsigned short CRC_Temp;
    386            unsigned char i,j;
    387            CRC_Temp = 0xffff;
   \   00000002   0xF64F 0x72FF      MOVW     R2,#+65535
    388            
    389            for (i=0;i<CRC_CNT; i++){      
   \   00000006   0x2300             MOVS     R3,#+0
   \   00000008   0xE000             B.N      ??CRC_CHECK_0
   \                     ??CRC_CHECK_1: (+1)
   \   0000000A   0x1C5B             ADDS     R3,R3,#+1
   \                     ??CRC_CHECK_0: (+1)
   \   0000000C   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   0000000E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000010   0x428B             CMP      R3,R1
   \   00000012   0xD213             BCS.N    ??CRC_CHECK_2
    390              CRC_Temp ^= Buf[i];                                 //异或等
   \   00000014   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000016   0x5C1C             LDRB     R4,[R3, R0]
   \   00000018   0x4062             EORS     R2,R4,R2
    391              for (j=0;j<8;j++) {
   \   0000001A   0x2400             MOVS     R4,#+0
   \   0000001C   0xE002             B.N      ??CRC_CHECK_3
    392                if (CRC_Temp & 0x01)
    393                  CRC_Temp = (CRC_Temp >>1 ) ^ 0xa001;            //异或
    394                else
    395                  CRC_Temp = CRC_Temp >> 1;
   \                     ??CRC_CHECK_4: (+1)
   \   0000001E   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   00000020   0x0852             LSRS     R2,R2,#+1
   \                     ??CRC_CHECK_5: (+1)
   \   00000022   0x1C64             ADDS     R4,R4,#+1
   \                     ??CRC_CHECK_3: (+1)
   \   00000024   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000026   0x2C08             CMP      R4,#+8
   \   00000028   0xDAEF             BGE.N    ??CRC_CHECK_1
   \   0000002A   0x07D5             LSLS     R5,R2,#+31
   \   0000002C   0xD5F7             BPL.N    ??CRC_CHECK_4
   \   0000002E   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   00000030   0x0852             LSRS     R2,R2,#+1
   \   00000032   0xF482 0x4220      EOR      R2,R2,#0xA000
   \   00000036   0xF092 0x0201      EORS     R2,R2,#0x1
   \   0000003A   0xE7F2             B.N      ??CRC_CHECK_5
    396              }
    397            }
    398            return(CRC_Temp);
   \                     ??CRC_CHECK_2: (+1)
   \   0000003C   0x0010             MOVS     R0,R2
   \   0000003E   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000040   0xBC30             POP      {R4,R5}
   \   00000042   0x4770             BX       LR               ;; return
    399          }
    400          

   \                                 In section .text, align 2, keep-with-next
    401          void OutPut_Data(void)
    402          {
   \                     OutPut_Data: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB08B             SUB      SP,SP,#+44
    403            int temp[4] = {0};
   \   00000004   0xA807             ADD      R0,SP,#+28
   \   00000006   0x2110             MOVS     R1,#+16
   \   00000008   0x.... 0x....      BL       __aeabi_memclr4
    404            unsigned int temp1[4] = {0};
   \   0000000C   0xA803             ADD      R0,SP,#+12
   \   0000000E   0x2110             MOVS     R1,#+16
   \   00000010   0x.... 0x....      BL       __aeabi_memclr4
    405            unsigned char databuf[10] = {0};
   \   00000014   0xA800             ADD      R0,SP,#+0
   \   00000016   0x2100             MOVS     R1,#+0
   \   00000018   0x2200             MOVS     R2,#+0
   \   0000001A   0x2300             MOVS     R3,#+0
   \   0000001C   0xC00E             STM      R0!,{R1-R3}
   \   0000001E   0x380C             SUBS     R0,R0,#+12
    406            unsigned char i;
    407            unsigned short CRC16 = 0;
   \   00000020   0x2000             MOVS     R0,#+0
    408            for(i=0;i<4;i++)
   \   00000022   0x2100             MOVS     R1,#+0
   \   00000024   0xE010             B.N      ??OutPut_Data_0
    409            {    
    410              temp[i]  = (int)OutData[i];
   \                     ??OutPut_Data_1: (+1)
   \   00000026   0x....             LDR.N    R0,??DataTable11_27
   \   00000028   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000002A   0xF930 0x0011      LDRSH    R0,[R0, R1, LSL #+1]
   \   0000002E   0xAA07             ADD      R2,SP,#+28
   \   00000030   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000032   0xF842 0x0021      STR      R0,[R2, R1, LSL #+2]
    411              temp1[i] = (unsigned int)temp[i];   
   \   00000036   0xA807             ADD      R0,SP,#+28
   \   00000038   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000003A   0xF850 0x0021      LDR      R0,[R0, R1, LSL #+2]
   \   0000003E   0xAA03             ADD      R2,SP,#+12
   \   00000040   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000042   0xF842 0x0021      STR      R0,[R2, R1, LSL #+2]
    412            }
   \   00000046   0x1C49             ADDS     R1,R1,#+1
   \                     ??OutPut_Data_0: (+1)
   \   00000048   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000004A   0x2904             CMP      R1,#+4
   \   0000004C   0xDBEB             BLT.N    ??OutPut_Data_1
    413            
    414            for(i=0;i<4;i++) 
   \   0000004E   0x2100             MOVS     R1,#+0
   \   00000050   0xE018             B.N      ??OutPut_Data_2
    415            {
    416              databuf[i*2]   = (unsigned char)(temp1[i]%256);//低八位
   \                     ??OutPut_Data_3: (+1)
   \   00000052   0xA803             ADD      R0,SP,#+12
   \   00000054   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000056   0xF850 0x0021      LDR      R0,[R0, R1, LSL #+2]
   \   0000005A   0xF44F 0x7280      MOV      R2,#+256
   \   0000005E   0xFBB0 0xF3F2      UDIV     R3,R0,R2
   \   00000062   0xFB03 0x0312      MLS      R3,R3,R2,R0
   \   00000066   0xA800             ADD      R0,SP,#+0
   \   00000068   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000006A   0xF800 0x3011      STRB     R3,[R0, R1, LSL #+1]
    417              databuf[i*2+1] = (unsigned char)(temp1[i]/256);//高八位
   \   0000006E   0xA803             ADD      R0,SP,#+12
   \   00000070   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000072   0xF850 0x0021      LDR      R0,[R0, R1, LSL #+2]
   \   00000076   0x0A00             LSRS     R0,R0,#+8
   \   00000078   0xAA00             ADD      R2,SP,#+0
   \   0000007A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000007C   0xEB12 0x0241      ADDS     R2,R2,R1, LSL #+1
   \   00000080   0x7050             STRB     R0,[R2, #+1]
    418            }
   \   00000082   0x1C49             ADDS     R1,R1,#+1
   \                     ??OutPut_Data_2: (+1)
   \   00000084   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000086   0x2904             CMP      R1,#+4
   \   00000088   0xDBE3             BLT.N    ??OutPut_Data_3
    419            
    420            CRC16 = CRC_CHECK(databuf,8);
   \   0000008A   0x2108             MOVS     R1,#+8
   \   0000008C   0xA800             ADD      R0,SP,#+0
   \   0000008E   0x.... 0x....      BL       CRC_CHECK
    421            databuf[8] = CRC16%256;               
   \   00000092   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000094   0xF44F 0x7180      MOV      R1,#+256
   \   00000098   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \   0000009C   0xFB02 0x0211      MLS      R2,R2,R1,R0
   \   000000A0   0xF88D 0x2008      STRB     R2,[SP, #+8]
    422            databuf[9] = CRC16/256;               
   \   000000A4   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000000A6   0xF44F 0x7180      MOV      R1,#+256
   \   000000AA   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000000AE   0xF88D 0x0009      STRB     R0,[SP, #+9]
    423            LPLD_UART_PutCharAr(UART0,databuf,10);
   \   000000B2   0x220A             MOVS     R2,#+10
   \   000000B4   0xA900             ADD      R1,SP,#+0
   \   000000B6   0x....             LDR.N    R0,??DataTable11_28  ;; 0x4006a000
   \   000000B8   0x.... 0x....      BL       LPLD_UART_PutCharAr
    424          }
   \   000000BC   0xB00B             ADD      SP,SP,#+44
   \   000000BE   0xBD00             POP      {PC}             ;; return
    425          

   \                                 In section .text, align 2, keep-with-next
    426          void send_uart()
    427          {
   \                     send_uart: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    428            if(flag.TO_SCOPE)//每次四个变量
   \   00000002   0x....             LDR.N    R0,??DataTable11_29
   \   00000004   0x78C0             LDRB     R0,[R0, #+3]
   \   00000006   0x2800             CMP      R0,#+0
   \   00000008   0xD011             BEQ.N    ??send_uart_0
    429            {
    430              OutData[0]=(int)LF;
   \   0000000A   0x....             LDR.N    R0,??DataTable11_18
   \   0000000C   0x6800             LDR      R0,[R0, #+0]
   \   0000000E   0x....             LDR.N    R1,??DataTable11_27
   \   00000010   0x8008             STRH     R0,[R1, #+0]
    431              OutData[1]=(int)RF;
   \   00000012   0x....             LDR.N    R0,??DataTable11_18
   \   00000014   0x6840             LDR      R0,[R0, #+4]
   \   00000016   0x....             LDR.N    R1,??DataTable11_27
   \   00000018   0x8048             STRH     R0,[R1, #+2]
    432              OutData[2]=(int)outdata.div;
   \   0000001A   0x....             LDR.N    R0,??DataTable11_21
   \   0000001C   0x6900             LDR      R0,[R0, #+16]
   \   0000001E   0x....             LDR.N    R1,??DataTable11_27
   \   00000020   0x8088             STRH     R0,[R1, #+4]
    433              OutData[3]=(int)RF;
   \   00000022   0x....             LDR.N    R0,??DataTable11_18
   \   00000024   0x6840             LDR      R0,[R0, #+4]
   \   00000026   0x....             LDR.N    R1,??DataTable11_27
   \   00000028   0x80C8             STRH     R0,[R1, #+6]
    434              OutPut_Data();
   \   0000002A   0x.... 0x....      BL       OutPut_Data
    435            }
    436          
    437            OutPut_Data();
   \                     ??send_uart_0: (+1)
   \   0000002E   0x.... 0x....      BL       OutPut_Data
    438          }
   \   00000032   0xBD01             POP      {R0,PC}          ;; return
    439          
    440          /**************************数据存储*********************************/

   \                                 In section .text, align 2, keep-with-next
    441          void data_save()
    442          {
   \                     data_save: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    443            if(eleccar.status==1)
   \   00000002   0x....             LDR.N    R0,??DataTable11_10
   \   00000004   0x7800             LDRB     R0,[R0, #+0]
   \   00000006   0x2801             CMP      R0,#+1
   \   00000008   0xD101             BNE.N    ??data_save_0
    444              save_RAM();
   \   0000000A   0x.... 0x....      BL       save_RAM
    445          }
   \                     ??data_save_0: (+1)
   \   0000000E   0xBD01             POP      {R0,PC}          ;; return
    446          

   \                                 In section .text, align 2, keep-with-next
    447          void write_sd()
    448          {
   \                     write_sd: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    449            uint16 temp_flash_read;
    450            
    451            
    452            if(flag.TO_SEND_ARRAY)
   \   00000002   0x....             LDR.N    R0,??DataTable11_29
   \   00000004   0x7800             LDRB     R0,[R0, #+0]
   \   00000006   0x2800             CMP      R0,#+0
   \   00000008   0xD002             BEQ.N    ??write_sd_0
    453            {
    454              flag.TO_SEND_ARRAY=0;
   \   0000000A   0x2000             MOVS     R0,#+0
   \   0000000C   0x....             LDR.N    R1,??DataTable11_29
   \   0000000E   0x7008             STRB     R0,[R1, #+0]
    455              
    456          //    SEND_TAB_ALL();  
    457            }
    458            if(eleccar.status)
   \                     ??write_sd_0: (+1)
   \   00000010   0x....             LDR.N    R0,??DataTable11_10
   \   00000012   0x7800             LDRB     R0,[R0, #+0]
   \   00000014   0x2800             CMP      R0,#+0
   \   00000016   0xD026             BEQ.N    ??write_sd_1
    459            {
    460              if(flag.TO_SAVE_FLASH_NO<(2*save_ram_no)/512)
   \   00000018   0x....             LDR.N    R0,??DataTable11_29
   \   0000001A   0x7840             LDRB     R0,[R0, #+1]
   \   0000001C   0x....             LDR.N    R1,??DataTable11_30
   \   0000001E   0x6809             LDR      R1,[R1, #+0]
   \   00000020   0x0049             LSLS     R1,R1,#+1
   \   00000022   0xEBB0 0x2F51      CMP      R0,R1, LSR #+9
   \   00000026   0xD21E             BCS.N    ??write_sd_1
    461              {
    462                int i=disk_write(0,RAM_BUFF[flag.TO_SAVE_FLASH_NO%50],flag.TO_SAVE_FLASH_NO,1);
   \   00000028   0x....             LDR.N    R0,??DataTable11_29
   \   0000002A   0x7840             LDRB     R0,[R0, #+1]
   \   0000002C   0x2132             MOVS     R1,#+50
   \   0000002E   0x2301             MOVS     R3,#+1
   \   00000030   0x....             LDR.N    R2,??DataTable11_29
   \   00000032   0x7852             LDRB     R2,[R2, #+1]
   \   00000034   0xFB90 0xF4F1      SDIV     R4,R0,R1
   \   00000038   0xFB01 0x0014      MLS      R0,R1,R4,R0
   \   0000003C   0xF44F 0x7100      MOV      R1,#+512
   \   00000040   0x....             LDR.N    R4,??DataTable11_31
   \   00000042   0xFB01 0x4100      MLA      R1,R1,R0,R4
   \   00000046   0x2000             MOVS     R0,#+0
   \   00000048   0x.... 0x....      BL       disk_write
    463                if(i==0)
   \   0000004C   0x2800             CMP      R0,#+0
   \   0000004E   0xD105             BNE.N    ??write_sd_2
    464                {
    465                  flag.TO_SAVE_FLASH_NO++;
   \   00000050   0x....             LDR.N    R0,??DataTable11_29
   \   00000052   0x7840             LDRB     R0,[R0, #+1]
   \   00000054   0x1C40             ADDS     R0,R0,#+1
   \   00000056   0x....             LDR.N    R1,??DataTable11_29
   \   00000058   0x7048             STRB     R0,[R1, #+1]
   \   0000005A   0xE004             B.N      ??write_sd_1
    466                }
    467                else
    468                {
    469                  for(int i=100;i--;);
   \                     ??write_sd_2: (+1)
   \   0000005C   0x2064             MOVS     R0,#+100
   \                     ??write_sd_3: (+1)
   \   0000005E   0x0001             MOVS     R1,R0
   \   00000060   0x1E48             SUBS     R0,R1,#+1
   \   00000062   0x2900             CMP      R1,#+0
   \   00000064   0xD1FB             BNE.N    ??write_sd_3
    470                }
    471              }
    472            }
    473            if(flag.TO_SEND_SD)
   \                     ??write_sd_1: (+1)
   \   00000066   0x....             LDR.N    R0,??DataTable11_29
   \   00000068   0x7880             LDRB     R0,[R0, #+2]
   \   0000006A   0x2800             CMP      R0,#+0
   \   0000006C   0xD031             BEQ.N    ??write_sd_4
    474            {
    475              DisableInterrupts;
   \   0000006E   0xB672             CPSID    I
    476              //printf("TO_SAVE_FLASH_NO = %3d.\n",flag.TO_SAVE_FLASH_NO);
    477              save_RAM();       //调用save_RAM()函数的打印标签功能
   \   00000070   0x.... 0x....      BL       save_RAM
    478              flag.TO_SEND_SD = 0;
   \   00000074   0x2000             MOVS     R0,#+0
   \   00000076   0x....             LDR.N    R1,??DataTable11_29
   \   00000078   0x7088             STRB     R0,[R1, #+2]
    479              for(int i=0;i<flag.TO_SAVE_FLASH_NO;i++)
   \   0000007A   0x2400             MOVS     R4,#+0
   \   0000007C   0xE000             B.N      ??write_sd_5
   \                     ??write_sd_6: (+1)
   \   0000007E   0x1C64             ADDS     R4,R4,#+1
   \                     ??write_sd_5: (+1)
   \   00000080   0x....             LDR.N    R0,??DataTable11_29
   \   00000082   0x7840             LDRB     R0,[R0, #+1]
   \   00000084   0x4284             CMP      R4,R0
   \   00000086   0xDA23             BGE.N    ??write_sd_7
    480              {  
    481                int j;
    482                while(disk_read(0,SEND_BUFF,i,1)); 
   \                     ??write_sd_8: (+1)
   \   00000088   0x2301             MOVS     R3,#+1
   \   0000008A   0x0022             MOVS     R2,R4
   \   0000008C   0x....             LDR.N    R1,??DataTable11_32
   \   0000008E   0x2000             MOVS     R0,#+0
   \   00000090   0x.... 0x....      BL       disk_read
   \   00000094   0x2800             CMP      R0,#+0
   \   00000096   0xD1F7             BNE.N    ??write_sd_8
    483                for(j=0;j<511;j+=2)
   \   00000098   0x2500             MOVS     R5,#+0
   \   0000009A   0xE004             B.N      ??write_sd_9
    484                {       
    485                  temp_flash_read=SEND_BUFF[j]*256+SEND_BUFF[j+1];
    486                  if(temp_flash_read==0xAAAA)
    487                    printf("\n");
    488                  else 
    489                    printf("%d\t",(int16)temp_flash_read);   
   \                     ??write_sd_10: (+1)
   \   0000009C   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   0000009E   0x....             ADR.N    R0,??DataTable11  ;; "%d\t"
   \   000000A0   0x.... 0x....      BL       printf
   \                     ??write_sd_11: (+1)
   \   000000A4   0x1CAD             ADDS     R5,R5,#+2
   \                     ??write_sd_9: (+1)
   \   000000A6   0xF5B5 0x7FFF      CMP      R5,#+510
   \   000000AA   0xDCE8             BGT.N    ??write_sd_6
   \   000000AC   0x....             LDR.N    R0,??DataTable11_32
   \   000000AE   0x5C28             LDRB     R0,[R5, R0]
   \   000000B0   0xF44F 0x7180      MOV      R1,#+256
   \   000000B4   0x....             LDR.N    R2,??DataTable11_32
   \   000000B6   0x18AA             ADDS     R2,R5,R2
   \   000000B8   0x7852             LDRB     R2,[R2, #+1]
   \   000000BA   0xFB01 0x2100      MLA      R1,R1,R0,R2
   \   000000BE   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   000000C0   0xF64A 0x20AA      MOVW     R0,#+43690
   \   000000C4   0x4281             CMP      R1,R0
   \   000000C6   0xD1E9             BNE.N    ??write_sd_10
   \   000000C8   0x....             ADR.N    R0,??DataTable11_1  ;; "\n"
   \   000000CA   0x.... 0x....      BL       printf
   \   000000CE   0xE7E9             B.N      ??write_sd_11
    490                } 
    491              }
    492              EnableInterrupts;
   \                     ??write_sd_7: (+1)
   \   000000D0   0xB662             CPSIE    I
    493            } 
    494          }    
   \                     ??write_sd_4: (+1)
   \   000000D2   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    495          

   \                                 In section .text, align 2, keep-with-next
    496          void save_RAM()
    497          {
   \                     save_RAM: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    498            save_sd(indata.dma1,"LF");
   \   00000002   0x....             ADR.N    R1,??DataTable11_2  ;; 0x4C, 0x46, 0x00, 0x00
   \   00000004   0x....             LDR.N    R0,??DataTable11_18
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0x.... 0x....      BL       save_sd
    499            save_sd(indata.dma2,"RF");
   \   0000000C   0x....             ADR.N    R1,??DataTable11_3  ;; 0x52, 0x46, 0x00, 0x00
   \   0000000E   0x....             LDR.N    R0,??DataTable11_18
   \   00000010   0x6840             LDR      R0,[R0, #+4]
   \   00000012   0x.... 0x....      BL       save_sd
    500            save_sd((int)0xAAAA,"");
   \   00000016   0x....             ADR.N    R1,??DataTable11_4  ;; ""
   \   00000018   0xF64A 0x20AA      MOVW     R0,#+43690
   \   0000001C   0x.... 0x....      BL       save_sd
    501          }
   \   00000020   0xBD01             POP      {R0,PC}          ;; return
    502          
    503          

   \                                 In section .text, align 2, keep-with-next
    504          void save_sd(int value,char* label)
    505          {
   \                     save_sd: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    506            if(flag.TO_SEND_SD)
   \   00000002   0x....             LDR.N    R2,??DataTable11_29
   \   00000004   0x7892             LDRB     R2,[R2, #+2]
   \   00000006   0x2A00             CMP      R2,#+0
   \   00000008   0xD00C             BEQ.N    ??save_sd_0
    507            {
    508              if((uint16)value==0xAAAA)printf("\n");
   \   0000000A   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000000C   0xF64A 0x22AA      MOVW     R2,#+43690
   \   00000010   0x4290             CMP      R0,R2
   \   00000012   0xD103             BNE.N    ??save_sd_1
   \   00000014   0x....             ADR.N    R0,??DataTable11_1  ;; "\n"
   \   00000016   0x.... 0x....      BL       printf
   \   0000001A   0xE040             B.N      ??save_sd_2
    509              else printf("%s\t",label);
   \                     ??save_sd_1: (+1)
   \   0000001C   0x....             ADR.N    R0,??DataTable11_5  ;; "%s\t"
   \   0000001E   0x.... 0x....      BL       printf
   \   00000022   0xE03C             B.N      ??save_sd_2
    510            }
    511            else if(eleccar.RUNTIME>0)
   \                     ??save_sd_0: (+1)
   \   00000024   0x....             LDR.N    R1,??DataTable11_10
   \   00000026   0x68C9             LDR      R1,[R1, #+12]
   \   00000028   0x2900             CMP      R1,#+0
   \   0000002A   0xD038             BEQ.N    ??save_sd_2
    512            {
    513              RAM_BUFF[(2*save_ram_no)/512%50][(2*save_ram_no)%512] = (uint8)(((uint16)value)>>8);
   \   0000002C   0x....             LDR.N    R1,??DataTable11_30
   \   0000002E   0x6809             LDR      R1,[R1, #+0]
   \   00000030   0x0049             LSLS     R1,R1,#+1
   \   00000032   0x0A49             LSRS     R1,R1,#+9
   \   00000034   0x2232             MOVS     R2,#+50
   \   00000036   0xFBB1 0xF3F2      UDIV     R3,R1,R2
   \   0000003A   0xFB02 0x1113      MLS      R1,R2,R3,R1
   \   0000003E   0xF44F 0x7200      MOV      R2,#+512
   \   00000042   0x....             LDR.N    R3,??DataTable11_31
   \   00000044   0xFB02 0x3101      MLA      R1,R2,R1,R3
   \   00000048   0x....             LDR.N    R2,??DataTable11_30
   \   0000004A   0x6812             LDR      R2,[R2, #+0]
   \   0000004C   0x0052             LSLS     R2,R2,#+1
   \   0000004E   0xF44F 0x7300      MOV      R3,#+512
   \   00000052   0xFBB2 0xF4F3      UDIV     R4,R2,R3
   \   00000056   0xFB04 0x2413      MLS      R4,R4,R3,R2
   \   0000005A   0x0002             MOVS     R2,R0
   \   0000005C   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   0000005E   0x0A12             LSRS     R2,R2,#+8
   \   00000060   0x5462             STRB     R2,[R4, R1]
    514              RAM_BUFF[(2*save_ram_no)/512%50][(2*save_ram_no)%512+1] = (uint8)((uint16)value);
   \   00000062   0x....             LDR.N    R1,??DataTable11_30
   \   00000064   0x6809             LDR      R1,[R1, #+0]
   \   00000066   0x0049             LSLS     R1,R1,#+1
   \   00000068   0x0A49             LSRS     R1,R1,#+9
   \   0000006A   0x2232             MOVS     R2,#+50
   \   0000006C   0xFBB1 0xF3F2      UDIV     R3,R1,R2
   \   00000070   0xFB02 0x1113      MLS      R1,R2,R3,R1
   \   00000074   0xF44F 0x7200      MOV      R2,#+512
   \   00000078   0x....             LDR.N    R3,??DataTable11_31
   \   0000007A   0xFB02 0x3101      MLA      R1,R2,R1,R3
   \   0000007E   0x....             LDR.N    R2,??DataTable11_30
   \   00000080   0x6812             LDR      R2,[R2, #+0]
   \   00000082   0x0052             LSLS     R2,R2,#+1
   \   00000084   0xF44F 0x7300      MOV      R3,#+512
   \   00000088   0xFBB2 0xF4F3      UDIV     R4,R2,R3
   \   0000008C   0xFB04 0x2413      MLS      R4,R4,R3,R2
   \   00000090   0x1861             ADDS     R1,R4,R1
   \   00000092   0x7048             STRB     R0,[R1, #+1]
    515              save_ram_no++;
   \   00000094   0x....             LDR.N    R0,??DataTable11_30
   \   00000096   0x6800             LDR      R0,[R0, #+0]
   \   00000098   0x1C40             ADDS     R0,R0,#+1
   \   0000009A   0x....             LDR.N    R1,??DataTable11_30
   \   0000009C   0x6008             STR      R0,[R1, #+0]
    516            }
    517          }
   \                     ??save_sd_2: (+1)
   \   0000009E   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10:
   \   00000000   0x25 0x35          DC8      "%5d"
   \              0x64 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11:
   \   00000000   0x25 0x64          DC8      "%d\t"
   \              0x09 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_1:
   \   00000000   0x0A 0x00          DC8      "\n",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_2:
   \   00000000   0x4C 0x46          DC8      0x4C, 0x46, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_3:
   \   00000000   0x52 0x46          DC8      0x52, 0x46, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_4:
   \   00000000   0x00 0x00          DC8      "",0x0,0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_5:
   \   00000000   0x25 0x73          DC8      "%s\t"
   \              0x09 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_6:
   \   00000000   0x........         DC32     T

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_7:
   \   00000000   0x........         DC32     status_button

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_8:
   \   00000000   0x43FE120C         DC32     0x43fe120c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_9:
   \   00000000   0x........         DC32     oled

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_10:
   \   00000000   0x........         DC32     eleccar

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_11:
   \   00000000   0x43FE1218         DC32     0x43fe1218

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_12:
   \   00000000   0x43FE1210         DC32     0x43fe1210

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_13:
   \   00000000   0x43FE1220         DC32     0x43fe1220

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_14:
   \   00000000   0x........         DC32     paralist

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_15:
   \   00000000   0x........         DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_16:
   \   00000000   0x........         DC32     ?_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_17:
   \   00000000   0x........         DC32     ??lastpage

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_18:
   \   00000000   0x........         DC32     indata

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_19:
   \   00000000   0x........         DC32     ?_2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_20:
   \   00000000   0x........         DC32     ?_3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_21:
   \   00000000   0x........         DC32     outdata

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_22:
   \   00000000   0x........         DC32     ?_4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_23:
   \   00000000   0x........         DC32     ?_5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_24:
   \   00000000   0x........         DC32     ?_6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_25:
   \   00000000   0x........         DC32     ?_7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_26:
   \   00000000   0x........         DC32     ?_8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_27:
   \   00000000   0x........         DC32     OutData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_28:
   \   00000000   0x4006A000         DC32     0x4006a000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_29:
   \   00000000   0x........         DC32     flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_30:
   \   00000000   0x........         DC32     save_ram_no

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_31:
   \   00000000   0x........         DC32     RAM_BUFF

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_32:
   \   00000000   0x........         DC32     SEND_BUFF

   \                                 In section .rodata, align 4
   \                     ?_0:
   \   00000000   0x53 0x44          DC8 "SD WRITE = %3d \012"
   \              0x20 0x57    
   \              0x52 0x49    
   \              0x54 0x45    
   \              0x20 0x3D    
   \              0x20 0x25    
   \              0x33 0x64    
   \              0x20 0x0A    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_1:
   \   00000000   0x53 0x44          DC8 "SD READ = %3d \012"
   \              0x20 0x52    
   \              0x45 0x41    
   \              0x44 0x20    
   \              0x3D 0x20    
   \              0x25 0x33    
   \              0x64 0x20    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \                     ?_2:
   \   00000000   0x6C 0x65          DC8 "leftF %6d"
   \              0x66 0x74    
   \              0x46 0x20    
   \              0x25 0x36    
   \              0x64 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_3:
   \   00000000   0x72 0x69          DC8 "rightF %6d"
   \              0x67 0x68    
   \              0x74 0x46    
   \              0x20 0x25    
   \              0x36 0x64    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_4:
   \   00000000   0x53 0x70          DC8 "SpeedOUT: %6d"
   \              0x65 0x65    
   \              0x64 0x4F    
   \              0x55 0x54    
   \              0x3A 0x20    
   \              0x25 0x36    
   \              0x64 0x00    
   \   0000000E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_5:
   \   00000000   0x4D 0x6F          DC8 "MotorPWM: %6d"
   \              0x74 0x6F    
   \              0x72 0x50    
   \              0x57 0x4D    
   \              0x3A 0x20    
   \              0x25 0x36    
   \              0x64 0x00    
   \   0000000E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_6:
   \   00000000   0x53 0x70          DC8 "SpeedFB:%5d"
   \              0x65 0x65    
   \              0x64 0x46    
   \              0x42 0x3A    
   \              0x25 0x35    
   \              0x64 0x00    

   \                                 In section .rodata, align 4
   \                     ?_7:
   \   00000000   0x53 0x74          DC8 "SteerPWM: %6d"
   \              0x65 0x65    
   \              0x72 0x50    
   \              0x57 0x4D    
   \              0x3A 0x20    
   \              0x25 0x36    
   \              0x64 0x00    
   \   0000000E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_8:
   \   00000000   0x25 0x30          DC8 "%02d.%-13s"
   \              0x32 0x64    
   \              0x2E 0x25    
   \              0x2D 0x31    
   \              0x33 0x73    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \   00000000   0x25 0x35          DC8 "%5d"
   \              0x64 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x00000000         DC32 0
   \   00000004   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x00000000         DC32 0
   \   00000004   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 2
   \   00000000   0x0A 0x00          DC8 "\012"

   \                                 In section .rodata, align 4
   \   00000000   0x25 0x64          DC8 "%d\t"
   \              0x09 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x4C 0x46          DC8 "LF"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \   00000000   0x52 0x46          DC8 "RF"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 1
   \   00000000   0x00               DC8 ""

   \                                 In section .rodata, align 4
   \   00000000   0x25 0x73          DC8 "%s\t"
   \              0x09 0x00    
    518          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   CRC_CHECK
      48   OutPut_Data
        48   -> CRC_CHECK
        48   -> LPLD_UART_PutCharAr
        48   -> __aeabi_memclr4
       8   data_save
         8   -> save_RAM
       8   key_check
         8   -> OLED_Init
         8   -> init_setpara
         8   -> save_flash
       8   main
         8   -> init_all
         8   -> key_check
         8   -> send_uart
         8   -> show_oled
     520   read_flash
       520   -> disk_read
       520   -> printf
       8   save_RAM
         8   -> save_sd
     520   save_flash
       520   -> disk_write
       520   -> printf
       8   save_sd
         8   -> printf
       8   send_uart
         8   -> OutPut_Data
      16   show_changeable
        16   -> LCD_ClearLine
        16   -> oledprintf
        16   -> oledprintfw
       0   show_fullpage
       8   show_oled
         8   -> show_changeable
         8   -> show_fullpage
         8   -> show_upperpage
      16   show_upperpage
        16   -> LCD_ClearLine
        16   -> oledprintf
      16   write_sd
        16   -> disk_read
        16   -> disk_write
        16   -> printf
        16   -> save_RAM


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable10
       4  ??DataTable11
       4  ??DataTable11_1
       4  ??DataTable11_10
       4  ??DataTable11_11
       4  ??DataTable11_12
       4  ??DataTable11_13
       4  ??DataTable11_14
       4  ??DataTable11_15
       4  ??DataTable11_16
       4  ??DataTable11_17
       4  ??DataTable11_18
       4  ??DataTable11_19
       4  ??DataTable11_2
       4  ??DataTable11_20
       4  ??DataTable11_21
       4  ??DataTable11_22
       4  ??DataTable11_23
       4  ??DataTable11_24
       4  ??DataTable11_25
       4  ??DataTable11_26
       4  ??DataTable11_27
       4  ??DataTable11_28
       4  ??DataTable11_29
       4  ??DataTable11_3
       4  ??DataTable11_30
       4  ??DataTable11_31
       4  ??DataTable11_32
       4  ??DataTable11_4
       4  ??DataTable11_5
       4  ??DataTable11_6
       4  ??DataTable11_7
       4  ??DataTable11_8
       4  ??DataTable11_9
      20  ?_0
      16  ?_1
      16  ?_10
      16  ?_11
      12  ?_12
       2  ?_13
       4  ?_14
       4  ?_15
       4  ?_16
       1  ?_17
       4  ?_18
      12  ?_2
      12  ?_3
      16  ?_4
      16  ?_5
      12  ?_6
      16  ?_7
      12  ?_8
       4  ?_9
      68  CRC_CHECK
       8  OutData
     192  OutPut_Data
   30720  RAM_BUFF
     512  SEND_BUFF
       4  T
       4  br
       4  bw
      16  data_save
      16  eleccar
     568  fatfs
     556  fil
       4  flag
      12  indata
     406  key_check
       4  lastpage
      24  main
      12  oled
      20  outdata
    2000  paralist
       1  rc
      70  read_flash
      34  save_RAM
      70  save_flash
       4  save_ram_no
     160  save_sd
       4  save_uart_no
      52  send_uart
     192  setpara
     266  show_changeable
      24  show_fullpage
      46  show_oled
     172  show_upperpage
       1  status_button
      44  track
     212  write_sd

 
 32 690 bytes in section .bss
  2 000 bytes in section .data
    199 bytes in section .rodata
  1 948 bytes in section .text
 
  1 948 bytes of CODE  memory
    199 bytes of CONST memory
 34 690 bytes of DATA  memory

Errors: none
Warnings: none
