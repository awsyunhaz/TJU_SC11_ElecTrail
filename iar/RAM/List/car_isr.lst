###############################################################################
#
# IAR ANSI C/C++ Compiler V7.20.2.7424/W32 for ARM        10/Apr/2016  21:40:44
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail\app\car_isr.c
#    Command line =  
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail\app\car_isr.c
#        -D LPLD_K60 -lCN
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail\iar\RAM\List\
#        -lB
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail\iar\RAM\List\
#        -o
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail\iar\RAM\Obj\
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=None --dlib_config "D:\IAR Systems\Embedded
#        Workbench 7.0\arm\INC\c\DLib_Config_Normal.h" -I
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail\iar\..\app\
#        -I
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail\iar\..\..\..\lib\CPU\
#        -I
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail\iar\..\..\..\lib\common\
#        -I
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail\iar\..\..\..\lib\LPLD\
#        -I
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail\iar\..\..\..\lib\LPLD\HW\
#        -I
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail\iar\..\..\..\lib\LPLD\DEV\
#        -I
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail\iar\..\..\..\lib\uCOS-II\Ports\
#        -I
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail\iar\..\..\..\lib\uCOS-II\Source\
#        -I
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail\iar\..\..\..\lib\FatFs\
#        -I
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail\iar\..\..\..\lib\FatFs\option\
#        -I
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail\iar\..\..\..\lib\USB\common\
#        -I
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail\iar\..\..\..\lib\USB\driver\
#        -I
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail\iar\..\..\..\lib\USB\descriptor\
#        -I
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail\iar\..\..\..\lib\USB\class\
#        -Ol -I "D:\IAR Systems\Embedded Workbench 7.0\arm\CMSIS\Include\" -D
#        ARM_MATH_CM4
#    List file    =  
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail\iar\RAM\List\car_isr.lst
#    Object file  =  
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail\iar\RAM\Obj\car_isr.o
#
###############################################################################

C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail\app\car_isr.c
      1          #include "car_isr.h"
      2          
      3          #if 1/*************************中断函数************************/

   \                                 In section .text, align 2, keep-with-next
      4          void pit0_isr()
      5          {
   \                     pit0_isr: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
      6            T+=PIT0_MS;           //计时
   \   00000002   0x....             LDR.N    R0,??DataTable1
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x3014             ADDS     R0,R0,#+20
   \   00000008   0x....             LDR.N    R1,??DataTable1
   \   0000000A   0x6008             STR      R0,[R1, #+0]
      7            data_input();
   \   0000000C   0x.... 0x....      BL       data_input
      8            output_Ctrl(eleccar.status);
   \   00000010   0x....             LDR.N    R0,??DataTable1_1
   \   00000012   0x7800             LDRB     R0,[R0, #+0]
   \   00000014   0x.... 0x....      BL       output_Ctrl
      9            flag.TO_SCOPE^= 1;
   \   00000018   0x....             LDR.N    R0,??DataTable1_2
   \   0000001A   0x78C0             LDRB     R0,[R0, #+3]
   \   0000001C   0xF090 0x0001      EORS     R0,R0,#0x1
   \   00000020   0x....             LDR.N    R1,??DataTable1_2
   \   00000022   0x70C8             STRB     R0,[R1, #+3]
     10          
     11          }
   \   00000024   0xBD01             POP      {R0,PC}          ;; return
     12          
     13          #if 1 //外部中断服务函数★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★

   \                                 In section .text, align 2, keep-with-next
     14          void portc_isr()
     15          {
     16            //如果PTC2产生中断――干簧管触发
     17            if(LPLD_GPIO_IsPinxExt(PORTC, GPIO_Pin2))
   \                     portc_isr: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable1_3  ;; 0x4004b0a0
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0x0740             LSLS     R0,R0,#+29
   \   00000006   0xD506             BPL.N    ??portc_isr_0
     18            {
     19              eleccar.status_reed = 1;
   \   00000008   0x2001             MOVS     R0,#+1
   \   0000000A   0x....             LDR.N    R1,??DataTable1_1
   \   0000000C   0x7048             STRB     R0,[R1, #+1]
     20              eleccar.reed_time = T;
   \   0000000E   0x....             LDR.N    R0,??DataTable1
   \   00000010   0x6800             LDR      R0,[R0, #+0]
   \   00000012   0x....             LDR.N    R1,??DataTable1_1
   \   00000014   0x6048             STR      R0,[R1, #+4]
     21            }
     22            
     23            //如果PTC3产生中断――旋钮按下
     24            if(LPLD_GPIO_IsPinxExt(PORTC, GPIO_Pin3))
   \                     ??portc_isr_0: (+1)
   \   00000016   0x....             LDR.N    R0,??DataTable1_3  ;; 0x4004b0a0
   \   00000018   0x6800             LDR      R0,[R0, #+0]
   \   0000001A   0x0700             LSLS     R0,R0,#+28
   \   0000001C   0xD502             BPL.N    ??portc_isr_1
     25            {
     26              status_button = PRESS;
   \   0000001E   0x2001             MOVS     R0,#+1
   \   00000020   0x....             LDR.N    R1,??DataTable1_4
   \   00000022   0x7008             STRB     R0,[R1, #+0]
     27            }
     28            //如果PTC5产生中断――旋钮旋转,顺时针先
     29            if(LPLD_GPIO_IsPinxExt(PORTC, GPIO_Pin5))
   \                     ??portc_isr_1: (+1)
   \   00000024   0x....             LDR.N    R0,??DataTable1_3  ;; 0x4004b0a0
   \   00000026   0x6800             LDR      R0,[R0, #+0]
   \   00000028   0x0680             LSLS     R0,R0,#+26
   \   0000002A   0xD564             BPL.N    ??portc_isr_2
     30            {
     31              if(PTC7_I)  //检查C7端电平，如果是高电平，则是正转
   \   0000002C   0x....             LDR.N    R0,??DataTable1_5  ;; 0x43fe121c
   \   0000002E   0x6800             LDR      R0,[R0, #+0]
   \   00000030   0x2800             CMP      R0,#+0
   \   00000032   0xD031             BEQ.N    ??portc_isr_3
     32              {
     33                status_button = CW;
   \   00000034   0x2002             MOVS     R0,#+2
   \   00000036   0x....             LDR.N    R1,??DataTable1_4
   \   00000038   0x7008             STRB     R0,[R1, #+0]
     34                //旋钮响应
     35                if(oled.changepara)
   \   0000003A   0x....             LDR.N    R0,??DataTable1_6
   \   0000003C   0x7800             LDRB     R0,[R0, #+0]
   \   0000003E   0x2800             CMP      R0,#+0
   \   00000040   0xD019             BEQ.N    ??portc_isr_4
     36                  *paralist[oled.para_select].para += paralist[oled.para_select].precision;
   \   00000042   0x....             LDR.N    R0,??DataTable1_7
   \   00000044   0x....             LDR.N    R1,??DataTable1_6
   \   00000046   0x8849             LDRH     R1,[R1, #+2]
   \   00000048   0x2214             MOVS     R2,#+20
   \   0000004A   0xFB02 0x0001      MLA      R0,R2,R1,R0
   \   0000004E   0x6800             LDR      R0,[R0, #+0]
   \   00000050   0x6800             LDR      R0,[R0, #+0]
   \   00000052   0x....             LDR.N    R1,??DataTable1_7
   \   00000054   0x....             LDR.N    R2,??DataTable1_6
   \   00000056   0x8852             LDRH     R2,[R2, #+2]
   \   00000058   0x2314             MOVS     R3,#+20
   \   0000005A   0xFB03 0x1102      MLA      R1,R3,R2,R1
   \   0000005E   0x7C49             LDRB     R1,[R1, #+17]
   \   00000060   0xFA50 0xF081      UXTAB    R0,R0,R1
   \   00000064   0x....             LDR.N    R1,??DataTable1_7
   \   00000066   0x....             LDR.N    R2,??DataTable1_6
   \   00000068   0x8852             LDRH     R2,[R2, #+2]
   \   0000006A   0x2314             MOVS     R3,#+20
   \   0000006C   0xFB03 0x1102      MLA      R1,R3,R2,R1
   \   00000070   0x6809             LDR      R1,[R1, #+0]
   \   00000072   0x6008             STR      R0,[R1, #+0]
   \   00000074   0xE03F             B.N      ??portc_isr_2
     37                else
     38                {
     39                  if(oled.para_select <oled.para_num-1)
   \                     ??portc_isr_4: (+1)
   \   00000076   0x....             LDR.N    R0,??DataTable1_6
   \   00000078   0x8840             LDRH     R0,[R0, #+2]
   \   0000007A   0x....             LDR.N    R1,??DataTable1_6
   \   0000007C   0x8889             LDRH     R1,[R1, #+4]
   \   0000007E   0x1E49             SUBS     R1,R1,#+1
   \   00000080   0x4288             CMP      R0,R1
   \   00000082   0xDA05             BGE.N    ??portc_isr_5
     40                    oled.para_select ++;
   \   00000084   0x....             LDR.N    R0,??DataTable1_6
   \   00000086   0x8840             LDRH     R0,[R0, #+2]
   \   00000088   0x1C40             ADDS     R0,R0,#+1
   \   0000008A   0x....             LDR.N    R1,??DataTable1_6
   \   0000008C   0x8048             STRH     R0,[R1, #+2]
   \   0000008E   0xE032             B.N      ??portc_isr_2
     41                  else
     42                    oled.para_select = 0;
   \                     ??portc_isr_5: (+1)
   \   00000090   0x2000             MOVS     R0,#+0
   \   00000092   0x....             LDR.N    R1,??DataTable1_6
   \   00000094   0x8048             STRH     R0,[R1, #+2]
   \   00000096   0xE02E             B.N      ??portc_isr_2
     43                }
     44              }
     45              else
     46              {
     47                status_button = CCW;
   \                     ??portc_isr_3: (+1)
   \   00000098   0x2003             MOVS     R0,#+3
   \   0000009A   0x....             LDR.N    R1,??DataTable1_4
   \   0000009C   0x7008             STRB     R0,[R1, #+0]
     48                //旋钮响应
     49                if(oled.changepara)
   \   0000009E   0x....             LDR.N    R0,??DataTable1_6
   \   000000A0   0x7800             LDRB     R0,[R0, #+0]
   \   000000A2   0x2800             CMP      R0,#+0
   \   000000A4   0xD018             BEQ.N    ??portc_isr_6
     50                  *paralist[oled.para_select].para -= paralist[oled.para_select].precision;
   \   000000A6   0x....             LDR.N    R0,??DataTable1_7
   \   000000A8   0x....             LDR.N    R1,??DataTable1_6
   \   000000AA   0x8849             LDRH     R1,[R1, #+2]
   \   000000AC   0x2214             MOVS     R2,#+20
   \   000000AE   0xFB02 0x0001      MLA      R0,R2,R1,R0
   \   000000B2   0x6800             LDR      R0,[R0, #+0]
   \   000000B4   0x6800             LDR      R0,[R0, #+0]
   \   000000B6   0x....             LDR.N    R1,??DataTable1_7
   \   000000B8   0x....             LDR.N    R2,??DataTable1_6
   \   000000BA   0x8852             LDRH     R2,[R2, #+2]
   \   000000BC   0x2314             MOVS     R3,#+20
   \   000000BE   0xFB03 0x1102      MLA      R1,R3,R2,R1
   \   000000C2   0x7C49             LDRB     R1,[R1, #+17]
   \   000000C4   0x1A40             SUBS     R0,R0,R1
   \   000000C6   0x....             LDR.N    R1,??DataTable1_7
   \   000000C8   0x....             LDR.N    R2,??DataTable1_6
   \   000000CA   0x8852             LDRH     R2,[R2, #+2]
   \   000000CC   0x2314             MOVS     R3,#+20
   \   000000CE   0xFB03 0x1102      MLA      R1,R3,R2,R1
   \   000000D2   0x6809             LDR      R1,[R1, #+0]
   \   000000D4   0x6008             STR      R0,[R1, #+0]
   \   000000D6   0xE00E             B.N      ??portc_isr_2
     51                else
     52                {
     53                  if(oled.para_select >0)
   \                     ??portc_isr_6: (+1)
   \   000000D8   0x....             LDR.N    R0,??DataTable1_6
   \   000000DA   0x8840             LDRH     R0,[R0, #+2]
   \   000000DC   0x2800             CMP      R0,#+0
   \   000000DE   0xD005             BEQ.N    ??portc_isr_7
     54                    oled.para_select --;
   \   000000E0   0x....             LDR.N    R0,??DataTable1_6
   \   000000E2   0x8840             LDRH     R0,[R0, #+2]
   \   000000E4   0x1E40             SUBS     R0,R0,#+1
   \   000000E6   0x....             LDR.N    R1,??DataTable1_6
   \   000000E8   0x8048             STRH     R0,[R1, #+2]
   \   000000EA   0xE004             B.N      ??portc_isr_2
     55                  else
     56                    oled.para_select = oled.para_num-1;
   \                     ??portc_isr_7: (+1)
   \   000000EC   0x....             LDR.N    R0,??DataTable1_6
   \   000000EE   0x8880             LDRH     R0,[R0, #+4]
   \   000000F0   0x1E40             SUBS     R0,R0,#+1
   \   000000F2   0x....             LDR.N    R1,??DataTable1_6
   \   000000F4   0x8048             STRH     R0,[R1, #+2]
     57                }
     58              }
     59            }
     60            //如果PTC6产生中断――拨轮按下
     61            if(LPLD_GPIO_IsPinxExt(PORTC, GPIO_Pin6))
   \                     ??portc_isr_2: (+1)
   \   000000F6   0x....             LDR.N    R0,??DataTable1_3  ;; 0x4004b0a0
   \   000000F8   0x6800             LDR      R0,[R0, #+0]
   \   000000FA   0x0640             LSLS     R0,R0,#+25
   \   000000FC   0xD502             BPL.N    ??portc_isr_8
     62            {
     63              status_button = PUSH;
   \   000000FE   0x2006             MOVS     R0,#+6
   \   00000100   0x....             LDR.N    R1,??DataTable1_4
   \   00000102   0x7008             STRB     R0,[R1, #+0]
     64            }
     65            //如果PTC4产生中断――拨轮向上    
     66            if(LPLD_GPIO_IsPinxExt(PORTC, GPIO_Pin4))
   \                     ??portc_isr_8: (+1)
   \   00000104   0x....             LDR.N    R0,??DataTable1_3  ;; 0x4004b0a0
   \   00000106   0x6800             LDR      R0,[R0, #+0]
   \   00000108   0x06C0             LSLS     R0,R0,#+27
   \   0000010A   0xD502             BPL.N    ??portc_isr_9
     67            {
     68              status_button = UP;
   \   0000010C   0x2004             MOVS     R0,#+4
   \   0000010E   0x....             LDR.N    R1,??DataTable1_4
   \   00000110   0x7008             STRB     R0,[R1, #+0]
     69            }
     70            //如果PTC8产生中断――拨轮向下
     71            if(LPLD_GPIO_IsPinxExt(PORTC, GPIO_Pin8))
   \                     ??portc_isr_9: (+1)
   \   00000112   0x....             LDR.N    R0,??DataTable1_3  ;; 0x4004b0a0
   \   00000114   0x6800             LDR      R0,[R0, #+0]
   \   00000116   0x05C0             LSLS     R0,R0,#+23
   \   00000118   0xD502             BPL.N    ??portc_isr_10
     72            {
     73              status_button = DOWN;
   \   0000011A   0x2005             MOVS     R0,#+5
   \   0000011C   0x....             LDR.N    R1,??DataTable1_4
   \   0000011E   0x7008             STRB     R0,[R1, #+0]
     74            }
     75          }
   \                     ??portc_isr_10: (+1)
   \   00000120   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x........         DC32     T

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x........         DC32     eleccar

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   0x........         DC32     flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_3:
   \   00000000   0x4004B0A0         DC32     0x4004b0a0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_4:
   \   00000000   0x........         DC32     status_button

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_5:
   \   00000000   0x43FE121C         DC32     0x43fe121c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_6:
   \   00000000   0x........         DC32     oled

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_7:
   \   00000000   0x........         DC32     paralist
     76          
     77          #endif
     78          
     79          
     80          #endif

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   pit0_isr
         8   -> data_input
         8   -> output_Ctrl
       0   portc_isr


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_2
       4  ??DataTable1_3
       4  ??DataTable1_4
       4  ??DataTable1_5
       4  ??DataTable1_6
       4  ??DataTable1_7
      38  pit0_isr
     290  portc_isr

 
 360 bytes in section .text
 
 360 bytes of CODE memory

Errors: none
Warnings: none
