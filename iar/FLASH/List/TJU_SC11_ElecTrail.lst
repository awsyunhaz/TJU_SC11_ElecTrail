###############################################################################
#
# IAR ANSI C/C++ Compiler V7.20.2.7424/W32 for ARM        06/Jul/2016  19:43:00
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail_A车\app\TJU_SC11_ElecTrail.c
#    Command line =  
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail_A车\app\TJU_SC11_ElecTrail.c
#        -D LPLD_K60 -lCN
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail_A车\iar\FLASH\List\
#        -lB
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail_A车\iar\FLASH\List\
#        -o
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail_A车\iar\FLASH\Obj\
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=None --dlib_config "D:\IAR Systems\Embedded
#        Workbench 7.0\arm\INC\c\DLib_Config_Full.h" -I
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail_A车\iar\..\app\
#        -I
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail_A车\iar\..\..\..\lib\CPU\
#        -I
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail_A车\iar\..\..\..\lib\common\
#        -I
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail_A车\iar\..\..\..\lib\LPLD\
#        -I
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail_A车\iar\..\..\..\lib\LPLD\HW\
#        -I
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail_A车\iar\..\..\..\lib\LPLD\DEV\
#        -I
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail_A车\iar\..\..\..\lib\uCOS-II\Ports\
#        -I
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail_A车\iar\..\..\..\lib\uCOS-II\Source\
#        -I
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail_A车\iar\..\..\..\lib\FatFs\
#        -I
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail_A车\iar\..\..\..\lib\FatFs\option\
#        -I
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail_A车\iar\..\..\..\lib\USB\common\
#        -I
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail_A车\iar\..\..\..\lib\USB\driver\
#        -I
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail_A车\iar\..\..\..\lib\USB\descriptor\
#        -I
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail_A车\iar\..\..\..\lib\USB\class\
#        -Ol -I "D:\IAR Systems\Embedded Workbench 7.0\arm\CMSIS\Include\" -D
#        ARM_MATH_CM4
#    List file    =  
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail_A车\iar\FLASH\List\TJU_SC11_ElecTrail.lst
#    Object file  =  
#        C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail_A车\iar\FLASH\Obj\TJU_SC11_ElecTrail.o
#
###############################################################################

C:\Users\zyh\Desktop\飞思卡尔\软件组作业一（2015.11.23）\拉普兰德例程及OLED测试程序\project\TJU_SC11_ElecTrail_A车\app\TJU_SC11_ElecTrail.c
      1          /*
      2          * @file TJU_SC10_Electrail.c
      3          * @rev 1.0 By 郑云昊
      4          * @date 2016-06-26
      5          * @brief 第十一届天津大学智能车队K60基础工程
      6          * 
      7          * 本工程基于"拉普兰德K60底层库V3"开发，
      8          * 所有开源代码均在"lib"文件夹下，用户不必更改该目录下代码，
      9          * 所有用户工程需保存在"project"文件夹下，以工程名定义文件夹名，
     10          * 底层库使用方法见相关文档。 
     11          *
     12          */
     13          
     14          #include "common.h"
     15          #include "car_global.h"
     16          
     17          
     18          void init_all();
     19          void init_sdhc();
     20          void init_uart(void);
     21          void init_key();
     22          void FLOAT_LDC_init();
     23          
     24          uint16 battery_check();
     25          void init_speedFb();
     26          void init_pulse_counter(PortPinsEnum_Type counter_port,         //通用的
     27                                  uint8 dma_chx);
     28          void init_motor();
     29          void init_servo();
     30          void init_pit();
     31          void init_sdhc();
     32          void OLED_Init();       //通用
     33          void show_oled();
     34          void show_upperpage(int page);
     35          void show_changeable();
     36          void show_fullpage(int page);
     37          
     38          void pit0_isr();
     39          void portc_isr();
     40          void key_check();
     41          void data_input();
     42          int get_frequency(uint8 i);
     43          int Track_Cal(int32* fre);
     44          int weight_cal(int xvalue,int* setarray);
     45          int Speed_Cal(int track_pos);
     46          int Steer_PWM_Cal(int track_pos);
     47          int Motor_PID_Cal(int input_speed,int setspeed);
     48          void data_process();
     49          
     50          void output_Ctrl(uint8 status);
     51          void save_flash();
     52          void read_flash();
     53          
     54          void write_sd();
     55          void save_RAM();
     56          void data_save();
     57          void save_sd(int value,char* label);
     58          void send_uart();
     59          
     60          void OutPut_Data(void);
     61          unsigned short CRC_CHECK(unsigned char *Buf, unsigned char CRC_CNT);
     62          
     63          
     64          
     65          
     66          /**************************全局变量********************************/
     67          
     68          

   \                                 In section .bss, align 4
     69          uint32 T;                            //PIT计时器
   \                     T:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     70          indata_STRUCT indata;                //输入变量
   \                     indata:
   \   00000000                      DS8 28

   \                                 In section .bss, align 4
     71          outdata_STRUCT outdata;              //输出变量
   \                     outdata:
   \   00000000                      DS8 20

   \                                 In section .bss, align 1
     72          STATUS_TRACK status_track;           //赛道类型
   \                     status_track:
   \   00000000                      DS8 1

   \                                 In section .bss, align 4
     73          STATUS_CAR_STRUCT eleccar;           //小车状态
   \                     eleccar:
   \   00000000                      DS8 28

   \                                 In section .bss, align 1
     74          STATUS_BUTTON status_button;         //按钮状态
   \                     status_button:
   \   00000000                      DS8 1

   \                                 In section .bss, align 4
     75          OLED_STRUCT oled;                    //屏幕显示
   \                     oled:
   \   00000000                      DS8 12

   \                                 In section .bss, align 4
     76          setpara_STRUCT setpara;              //设定参数
   \                     setpara:
   \   00000000                      DS8 192

   \                                 In section .bss, align 4
     77          trackcal_STRUCT track;               //赛道计算值
   \                     track:
   \   00000000                      DS8 24

   \                                 In section .bss, align 4
     78          FLAG flag;                           //标志位
   \                     flag:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
     79          PARA_LIST_STRUCT paralist[100]=      //可调参数表
   \                     paralist:
   \   00000000   0x........         DC32 setpara + 4H
   \   00000004   0x6C 0x65          DC8 "left.min"
   \              0x66 0x74    
   \              0x2E 0x6D    
   \              0x69 0x6E    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0, 0, 1, 0, 0
   \              0x00 0x00    
   \              0x01 0x00    
   \              0x00         
   \   00000014   0x........         DC32 setpara
   \   00000018   0x6C 0x65          DC8 "left.max"
   \              0x66 0x74    
   \              0x2E 0x6D    
   \              0x61 0x78    
   \              0x00         
   \   00000021   0x00 0x00          DC8 0, 0, 0, 0, 1, 0, 0
   \              0x00 0x00    
   \              0x01 0x00    
   \              0x00         
   \   00000028   0x........         DC32 setpara + 0CH
   \   0000002C   0x72 0x69          DC8 "right.min"
   \              0x67 0x68    
   \              0x74 0x2E    
   \              0x6D 0x69    
   \              0x6E 0x00    
   \   00000036   0x00 0x00          DC8 0, 0, 0, 1, 0, 0
   \              0x00 0x01    
   \              0x00 0x00    
   \   0000003C   0x........         DC32 setpara + 8H
   \   00000040   0x72 0x69          DC8 "right.max"
   \              0x67 0x68    
   \              0x74 0x2E    
   \              0x6D 0x61    
   \              0x78 0x00    
   \   0000004A   0x00 0x00          DC8 0, 0, 0, 1, 0, 0
   \              0x00 0x01    
   \              0x00 0x00    
   \   00000050   0x........         DC32 setpara + 14H
   \   00000054   0x63 0x65          DC8 "center.min"
   \              0x6E 0x74    
   \              0x65 0x72    
   \              0x2E 0x6D    
   \              0x69 0x6E    
   \              0x00         
   \   0000005F   0x00 0x00          DC8 0, 0, 1, 0, 0
   \              0x01 0x00    
   \              0x00         
   \   00000064   0x........         DC32 setpara + 10H
   \   00000068   0x63 0x65          DC8 "center.max"
   \              0x6E 0x74    
   \              0x65 0x72    
   \              0x2E 0x6D    
   \              0x61 0x78    
   \              0x00         
   \   00000073   0x00 0x00          DC8 0, 0, 1, 0, 0
   \              0x01 0x00    
   \              0x00         
   \   00000078   0x........         DC32 setpara + 18H
   \   0000007C   0x53 0x70          DC8 "SpeedKp"
   \              0x65 0x65    
   \              0x64 0x4B    
   \              0x70 0x00    
   \   00000084   0x00 0x00          DC8 0, 0, 0, 0, 0, 1, 0, 0
   \              0x00 0x00    
   \              0x00 0x01    
   \              0x00 0x00    
   \   0000008C   0x........         DC32 setpara + 1CH
   \   00000090   0x53 0x70          DC8 "SpeedKi"
   \              0x65 0x65    
   \              0x64 0x4B    
   \              0x69 0x00    
   \   00000098   0x00 0x00          DC8 0, 0, 0, 0, 0, 1, 0, 0
   \              0x00 0x00    
   \              0x00 0x01    
   \              0x00 0x00    
   \   000000A0   0x........         DC32 setpara + 20H
   \   000000A4   0x53 0x70          DC8 "SpeedKd"
   \              0x65 0x65    
   \              0x64 0x4B    
   \              0x64 0x00    
   \   000000AC   0x00 0x00          DC8 0, 0, 0, 0, 0, 1, 0, 0
   \              0x00 0x00    
   \              0x00 0x01    
   \              0x00 0x00    
   \   000000B4   0x........         DC32 setpara + 24H
   \   000000B8   0x42 0x41          DC8 "BANG"
   \              0x4E 0x47    
   \              0x00         
   \   000000BD   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x0A 0x00    
   \              0x00         
   \   000000C8   0x........         DC32 setpara + 28H
   \   000000CC   0x44 0x75          DC8 "DutyMax"
   \              0x74 0x79    
   \              0x4D 0x61    
   \              0x78 0x00    
   \   000000D4   0x00 0x00          DC8 0, 0, 0, 0, 0, 100, 0, 0
   \              0x00 0x00    
   \              0x00 0x64    
   \              0x00 0x00    
   \   000000DC   0x........         DC32 setpara + 2CH
   \   000000E0   0x44 0x75          DC8 "DutyMin"
   \              0x74 0x79    
   \              0x4D 0x69    
   \              0x6E 0x00    
   \   000000E8   0x00 0x00          DC8 0, 0, 0, 0, 0, 100, 0, 0
   \              0x00 0x00    
   \              0x00 0x64    
   \              0x00 0x00    
   \   000000F0   0x........         DC32 setpara + 30H
   \   000000F4   0x53 0x70          DC8 "SpeedMax"
   \              0x65 0x65    
   \              0x64 0x4D    
   \              0x61 0x78    
   \              0x00         
   \   000000FD   0x00 0x00          DC8 0, 0, 0, 0, 10, 0, 0
   \              0x00 0x00    
   \              0x0A 0x00    
   \              0x00         
   \   00000104   0x........         DC32 setpara + 34H
   \   00000108   0x53 0x70          DC8 "SpeedMin"
   \              0x65 0x65    
   \              0x64 0x4D    
   \              0x69 0x6E    
   \              0x00         
   \   00000111   0x00 0x00          DC8 0, 0, 0, 0, 10, 0, 0
   \              0x00 0x00    
   \              0x0A 0x00    
   \              0x00         
   \   00000118   0x........         DC32 setpara + 38H
   \   0000011C   0x4B 0x5F          DC8 "K_left"
   \              0x6C 0x65    
   \              0x66 0x74    
   \              0x00         
   \   00000123   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 1, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x01 0x00    
   \              0x00         
   \   0000012C   0x........         DC32 setpara + 3CH
   \   00000130   0x4B 0x5F          DC8 "K_right"
   \              0x72 0x69    
   \              0x67 0x68    
   \              0x74 0x00    
   \   00000138   0x00 0x00          DC8 0, 0, 0, 0, 0, 1, 0, 0
   \              0x00 0x00    
   \              0x00 0x01    
   \              0x00 0x00    
   \   00000140   0x........         DC32 setpara + 54H
   \   00000144   0x53 0x74          DC8 "SteerKp"
   \              0x65 0x65    
   \              0x72 0x4B    
   \              0x70 0x00    
   \   0000014C   0x00 0x00          DC8 0, 0, 0, 0, 0, 1, 0, 0
   \              0x00 0x00    
   \              0x00 0x01    
   \              0x00 0x00    
   \   00000154   0x........         DC32 setpara + 58H
   \   00000158   0x53 0x74          DC8 "SteerKd"
   \              0x65 0x65    
   \              0x72 0x4B    
   \              0x64 0x00    
   \   00000160   0x00 0x00          DC8 0, 0, 0, 0, 0, 1, 0, 0
   \              0x00 0x00    
   \              0x00 0x01    
   \              0x00 0x00    
   \   00000168   0x........         DC32 setpara + 48H
   \   0000016C   0x53 0x65          DC8 "Settime"
   \              0x74 0x74    
   \              0x69 0x6D    
   \              0x65 0x00    
   \   00000174   0x00 0x00          DC8 0, 0, 0, 0, 0, 1, 0, 0
   \              0x00 0x00    
   \              0x00 0x01    
   \              0x00 0x00    
   \   0000017C   0x........         DC32 setpara + 4CH
   \   00000180   0x6F 0x75          DC8 "outtime"
   \              0x74 0x74    
   \              0x69 0x6D    
   \              0x65 0x00    
   \   00000188   0x00 0x00          DC8 0, 0, 0, 0, 0, 1, 0, 0
   \              0x00 0x00    
   \              0x00 0x01    
   \              0x00 0x00    
   \   00000190   0x........         DC32 setpara + 5CH
   \   00000194   0x53 0x74          DC8 "SteerMID"
   \              0x65 0x65    
   \              0x72 0x4D    
   \              0x49 0x44    
   \              0x00         
   \   0000019D   0x00 0x00          DC8 0, 0, 0, 0, 1, 0, 0
   \              0x00 0x00    
   \              0x01 0x00    
   \              0x00         
   \   000001A4   0x........         DC32 setpara + 60H
   \   000001A8   0x53 0x74          DC8 "SteerMAXTURN"
   \              0x65 0x65    
   \              0x72 0x4D    
   \              0x41 0x58    
   \              0x54 0x55    
   \              0x52 0x4E    
   \              0x00         
   \   000001B5   0x01 0x00          DC8 1, 0, 0
   \              0x00         
   \   000001B8   0x........         DC32 setpara + 50H
   \   000001BC   0x54 0x52          DC8 "TRACK_AMP"
   \              0x41 0x43    
   \              0x4B 0x5F    
   \              0x41 0x4D    
   \              0x50 0x00    
   \   000001C6   0x00 0x00          DC8 0, 0, 0, 1, 0, 0
   \              0x00 0x01    
   \              0x00 0x00    
   \   000001CC   0x00000000         DC32 0H
   \   000001D0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001E0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001F0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000200   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000210   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000220   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000230   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000240   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000250   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000260   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000270   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000280   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000290   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000002A0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000002B0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000002C0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000002D0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000002E0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000002F0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000300   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000310   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000320   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000330   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000340   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000350   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000360   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000370   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000380   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000390   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000003A0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000003B0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000003C0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000003D0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000003E0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000003F0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000400   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000410   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000420   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000430   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000440   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000450   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000460   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000470   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000480   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000490   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000004A0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000004B0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000004C0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000004D0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000004E0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000004F0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000500   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000510   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000520   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000530   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000540   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000550   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000560   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000570   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000580   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000590   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000005A0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000005B0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000005C0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000005D0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000005E0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000005F0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000600   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000610   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000620   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000630   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000640   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000650   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000660   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000670   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000680   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000690   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000006A0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000006B0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000006C0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000006D0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000006E0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000006F0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000700   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000710   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000720   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000730   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000740   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000750   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000760   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000770   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000780   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000790   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000007A0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000007B0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000007C0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
     80          {
     81            {&setpara.Ref.leftmin,"left.min",1},
     82            {&setpara.Ref.leftmax,"left.max",1},
     83            {&setpara.Ref.rightmin,"right.min",1},
     84            {&setpara.Ref.rightmax,"right.max",1},
     85            {&setpara.Ref.centermin,"center.min",1},
     86            {&setpara.Ref.centermax,"center.max",1},
     87            {&setpara.SpeedPID.Kp,"SpeedKp",1}, //结构体内子结构体
     88            {&setpara.SpeedPID.Ki,"SpeedKi",1},
     89            {&setpara.SpeedPID.Kd,"SpeedKd",1},
     90            {&setpara.SpeedBANGBANG,"BANG",10},
     91            {&setpara.SetDutyMax,"DutyMax",100},
     92            {&setpara.SetDutyMin,"DutyMin",100},  
     93            {&setpara.SetSpeedMax,"SpeedMax",10},
     94            {&setpara.SetSpeedMin,"SpeedMin",10},
     95            {&setpara.K_left,"K_left",1},
     96            {&setpara.K_right,"K_right",1},
     97            {&setpara.SteerPD.Kp,"SteerKp",1},
     98            {&setpara.SteerPD.Kd,"SteerKd",1},
     99            {&setpara.settime,"Settime",1},
    100            {&setpara.outtime,"outtime",1},
    101            {&setpara.Steer.mid,"SteerMID",1},
    102            {&setpara.Steer.maxturn,"SteerMAXTURN",1},
    103            {&setpara.track_amp,"TRACK_AMP",1},
    104          
    105            {0}
    106          };
    107          
    108          // 以下变量定义均采用FatFs文件系统变量类型

   \                                 In section .bss, align 1
    109          FRESULT rc;			//结果代码 
   \                     rc:
   \   00000000                      DS8 1

   \                                 In section .bss, align 4
    110          FATFS fatfs;			// 文件系统对象 
   \                     fatfs:
   \   00000000                      DS8 568

   \                                 In section .bss, align 4
    111          FIL fil;			// 文件对象 
   \                     fil:
   \   00000000                      DS8 556

   \                                 In section .bss, align 4
    112          UINT bw, br;
   \                     bw:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     br:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    113          int16 OutData[4]; 
   \                     OutData:
   \   00000000                      DS8 8

   \                                 In section .bss, align 4
    114          uint32 save_ram_no = 0;
   \                     save_ram_no:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    115          uint32 save_uart_no = 0;
   \                     save_uart_no:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    116          uint8 RAM_BUFF[60][512] = {0};
   \                     RAM_BUFF:
   \   00000000                      DS8 30720

   \                                 In section .bss, align 4
    117          uint8 SEND_BUFF[512] = {0};
   \                     SEND_BUFF:
   \   00000000                      DS8 512
    118          
    119          
    120          #if 1/************************主函数*******************************/
    121          

   \                                 In section .text, align 2, keep-with-next
    122          void main (void)
    123          {
   \                     main: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    124            DisableInterrupts;
   \   00000002   0xB672             CPSID    I
    125            init_all();
   \   00000004   0x.... 0x....      BL       init_all
    126            EnableInterrupts;
   \   00000008   0xB662             CPSIE    I
    127            
    128            while(1)
    129            {
    130              key_check();
   \                     ??main_0: (+1)
   \   0000000A   0x.... 0x....      BL       key_check
    131              show_oled();
   \   0000000E   0x.... 0x....      BL       show_oled
    132              send_uart();
   \   00000012   0x.... 0x....      BL       send_uart
   \   00000016   0xE7F8             B.N      ??main_0
    133          //    write_sd();
    134            } 
    135            
    136          }
    137          
    138          #endif
    139          
    140          
    141          
    142          
    143          
    144          #if 1/*************************子程序组**************************/

   \                                 In section .text, align 2, keep-with-next
    145           void key_check()                //查询
    146          {
   \                     key_check: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    147            //记录按键时间
    148            uint32 pushtime=T;
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable13_7
   \   00000006   0x6800             LDR      R0,[R0, #+0]
    149            
    150            //旋钮或拨轮按下操作后屏幕初始化，以修复花屏
    151          //  if(status_button==PRESS||status_button==PUSH)
    152          //    OLED_Init();        
    153            
    154            switch(status_button)
   \   00000008   0x.... 0x....      LDR.W    R1,??DataTable13_8
   \   0000000C   0x7809             LDRB     R1,[R1, #+0]
   \   0000000E   0x2901             CMP      R1,#+1
   \   00000010   0xD006             BEQ.N    ??key_check_0
   \   00000012   0x2904             CMP      R1,#+4
   \   00000014   0xD02F             BEQ.N    ??key_check_1
   \   00000016   0x2905             CMP      R1,#+5
   \   00000018   0xD06C             BEQ.N    ??key_check_2
   \   0000001A   0x2906             CMP      R1,#+6
   \   0000001C   0xD01C             BEQ.N    ??key_check_3
   \   0000001E   0xE0A9             B.N      ??key_check_4
    155            {
    156            case PRESS:           //旋钮按下
    157              while(!PTC3_I);
   \                     ??key_check_0: (+1)
   \   00000020   0x.... 0x....      LDR.W    R1,??DataTable13_9  ;; 0x43fe120c
   \   00000024   0x6809             LDR      R1,[R1, #+0]
   \   00000026   0x2900             CMP      R1,#+0
   \   00000028   0xD0FA             BEQ.N    ??key_check_0
    158              if(T-pushtime<500)
   \   0000002A   0x.... 0x....      LDR.W    R1,??DataTable13_7
   \   0000002E   0x6809             LDR      R1,[R1, #+0]
   \   00000030   0x1A08             SUBS     R0,R1,R0
   \   00000032   0xF5B0 0x7FFA      CMP      R0,#+500
   \   00000036   0xD208             BCS.N    ??key_check_5
    159              {
    160                oled.changepara ^= 1;    //状态取反
   \   00000038   0x.... 0x....      LDR.W    R0,??DataTable13_10
   \   0000003C   0x7800             LDRB     R0,[R0, #+0]
   \   0000003E   0xF090 0x0001      EORS     R0,R0,#0x1
   \   00000042   0x.... 0x....      LDR.W    R1,??DataTable13_10
   \   00000046   0x7008             STRB     R0,[R1, #+0]
   \   00000048   0xE005             B.N      ??key_check_6
    161              }
    162              else
    163              {
    164                save_flash();
   \                     ??key_check_5: (+1)
   \   0000004A   0x.... 0x....      BL       save_flash
    165                eleccar.status = 1;
   \   0000004E   0x2001             MOVS     R0,#+1
   \   00000050   0x.... 0x....      LDR.W    R1,??DataTable13_11
   \   00000054   0x7008             STRB     R0,[R1, #+0]
    166              }
    167              break;
   \                     ??key_check_6: (+1)
   \   00000056   0xE08D             B.N      ??key_check_7
    168            case PUSH:            //拨轮按下
    169              while(!PTC6_I);
   \                     ??key_check_3: (+1)
   \   00000058   0x.... 0x....      LDR.W    R1,??DataTable13_12  ;; 0x43fe1218
   \   0000005C   0x6809             LDR      R1,[R1, #+0]
   \   0000005E   0x2900             CMP      R1,#+0
   \   00000060   0xD0FA             BEQ.N    ??key_check_3
    170              if(T-pushtime<500)
   \   00000062   0x.... 0x....      LDR.W    R1,??DataTable13_7
   \   00000066   0x6809             LDR      R1,[R1, #+0]
   \   00000068   0x1A08             SUBS     R0,R1,R0
   \   0000006A   0xF5B0 0x7FFA      CMP      R0,#+500
   \   0000006E   0xD301             BCC.N    ??key_check_8
    171              {
    172              }
    173              else
    174              {
    175                init_setpara();       //初始化所有参数
   \   00000070   0x.... 0x....      BL       init_setpara
    176              }
    177              break;
   \                     ??key_check_8: (+1)
   \   00000074   0xE07E             B.N      ??key_check_7
    178            case UP:              //拨轮向上
    179              while(!PTC4_I);
   \                     ??key_check_1: (+1)
   \   00000076   0x.... 0x....      LDR.W    R1,??DataTable13_13  ;; 0x43fe1210
   \   0000007A   0x6809             LDR      R1,[R1, #+0]
   \   0000007C   0x2900             CMP      R1,#+0
   \   0000007E   0xD0FA             BEQ.N    ??key_check_1
    180              if(T-pushtime<500)
   \   00000080   0x.... 0x....      LDR.W    R1,??DataTable13_7
   \   00000084   0x6809             LDR      R1,[R1, #+0]
   \   00000086   0x1A08             SUBS     R0,R1,R0
   \   00000088   0xF5B0 0x7FFA      CMP      R0,#+500
   \   0000008C   0xD231             BCS.N    ??key_check_9
    181              {
    182                if(oled.changepara)   //参数改变状态
   \   0000008E   0x.... 0x....      LDR.W    R0,??DataTable13_10
   \   00000092   0x7800             LDRB     R0,[R0, #+0]
   \   00000094   0x2800             CMP      R0,#+0
   \   00000096   0xD014             BEQ.N    ??key_check_10
    183                {
    184                  if(oled.para_select >0)
   \   00000098   0x.... 0x....      LDR.W    R0,??DataTable13_10
   \   0000009C   0x8840             LDRH     R0,[R0, #+2]
   \   0000009E   0x2800             CMP      R0,#+0
   \   000000A0   0xD007             BEQ.N    ??key_check_11
    185                    oled.para_select --;
   \   000000A2   0x.... 0x....      LDR.W    R0,??DataTable13_10
   \   000000A6   0x8840             LDRH     R0,[R0, #+2]
   \   000000A8   0x1E40             SUBS     R0,R0,#+1
   \   000000AA   0x.... 0x....      LDR.W    R1,??DataTable13_10
   \   000000AE   0x8048             STRH     R0,[R1, #+2]
   \   000000B0   0xE01F             B.N      ??key_check_9
    186                  else
    187                    oled.para_select = oled.para_num-1;
   \                     ??key_check_11: (+1)
   \   000000B2   0x.... 0x....      LDR.W    R0,??DataTable13_10
   \   000000B6   0x8880             LDRH     R0,[R0, #+4]
   \   000000B8   0x1E40             SUBS     R0,R0,#+1
   \   000000BA   0x.... 0x....      LDR.W    R1,??DataTable13_10
   \   000000BE   0x8048             STRH     R0,[R1, #+2]
   \   000000C0   0xE017             B.N      ??key_check_9
    188                }
    189                else              //参数选择状态
    190                {
    191                  if(oled.showpage > oled.showpage_min)
   \                     ??key_check_10: (+1)
   \   000000C2   0x.... 0x....      LDR.W    R0,??DataTable13_10
   \   000000C6   0xF990 0x0008      LDRSB    R0,[R0, #+8]
   \   000000CA   0x.... 0x....      LDR.W    R1,??DataTable13_10
   \   000000CE   0xF991 0x1006      LDRSB    R1,[R1, #+6]
   \   000000D2   0x4288             CMP      R0,R1
   \   000000D4   0xDA07             BGE.N    ??key_check_12
    192                    oled.showpage --;//减减
   \   000000D6   0x.... 0x....      LDR.W    R0,??DataTable13_10
   \   000000DA   0x7980             LDRB     R0,[R0, #+6]
   \   000000DC   0x1E40             SUBS     R0,R0,#+1
   \   000000DE   0x.... 0x....      LDR.W    R1,??DataTable13_10
   \   000000E2   0x7188             STRB     R0,[R1, #+6]
   \   000000E4   0xE005             B.N      ??key_check_9
    193                  else
    194                    oled.showpage = oled.showpage_max;
   \                     ??key_check_12: (+1)
   \   000000E6   0x.... 0x....      LDR.W    R0,??DataTable13_10
   \   000000EA   0x79C0             LDRB     R0,[R0, #+7]
   \   000000EC   0x.... 0x....      LDR.W    R1,??DataTable13_10
   \   000000F0   0x7188             STRB     R0,[R1, #+6]
    195                }
    196              }
    197              else
    198              {
    199              }
    200              break;  
   \                     ??key_check_9: (+1)
   \   000000F2   0xE03F             B.N      ??key_check_7
    201            case DOWN:
    202              while(!PTC8_I);
   \                     ??key_check_2: (+1)
   \   000000F4   0x.... 0x....      LDR.W    R1,??DataTable13_14  ;; 0x43fe1220
   \   000000F8   0x6809             LDR      R1,[R1, #+0]
   \   000000FA   0x2900             CMP      R1,#+0
   \   000000FC   0xD0FA             BEQ.N    ??key_check_2
    203              if(T-pushtime<500)
   \   000000FE   0x.... 0x....      LDR.W    R1,??DataTable13_7
   \   00000102   0x6809             LDR      R1,[R1, #+0]
   \   00000104   0x1A08             SUBS     R0,R1,R0
   \   00000106   0xF5B0 0x7FFA      CMP      R0,#+500
   \   0000010A   0xD232             BCS.N    ??key_check_13
    204              {
    205                if(oled.changepara)   //参数改变状态
   \   0000010C   0x.... 0x....      LDR.W    R0,??DataTable13_10
   \   00000110   0x7800             LDRB     R0,[R0, #+0]
   \   00000112   0x2800             CMP      R0,#+0
   \   00000114   0xD015             BEQ.N    ??key_check_14
    206                {
    207                  if(oled.para_select <oled.para_num-1)
   \   00000116   0x.... 0x....      LDR.W    R0,??DataTable13_10
   \   0000011A   0x8840             LDRH     R0,[R0, #+2]
   \   0000011C   0x.... 0x....      LDR.W    R1,??DataTable13_10
   \   00000120   0x8889             LDRH     R1,[R1, #+4]
   \   00000122   0x1E49             SUBS     R1,R1,#+1
   \   00000124   0x4288             CMP      R0,R1
   \   00000126   0xDA07             BGE.N    ??key_check_15
    208                    oled.para_select ++;
   \   00000128   0x.... 0x....      LDR.W    R0,??DataTable13_10
   \   0000012C   0x8840             LDRH     R0,[R0, #+2]
   \   0000012E   0x1C40             ADDS     R0,R0,#+1
   \   00000130   0x.... 0x....      LDR.W    R1,??DataTable13_10
   \   00000134   0x8048             STRH     R0,[R1, #+2]
   \   00000136   0xE01C             B.N      ??key_check_13
    209                  else
    210                    oled.para_select = 0;
   \                     ??key_check_15: (+1)
   \   00000138   0x2000             MOVS     R0,#+0
   \   0000013A   0x.... 0x....      LDR.W    R1,??DataTable13_10
   \   0000013E   0x8048             STRH     R0,[R1, #+2]
   \   00000140   0xE017             B.N      ??key_check_13
    211                }
    212                else              //参数选择状态
    213                {
    214                  if(oled.showpage < oled.showpage_max)
   \                     ??key_check_14: (+1)
   \   00000142   0x.... 0x....      LDR.W    R0,??DataTable13_10
   \   00000146   0xF990 0x0006      LDRSB    R0,[R0, #+6]
   \   0000014A   0x.... 0x....      LDR.W    R1,??DataTable13_10
   \   0000014E   0xF991 0x1007      LDRSB    R1,[R1, #+7]
   \   00000152   0x4288             CMP      R0,R1
   \   00000154   0xDA07             BGE.N    ??key_check_16
    215                    oled.showpage ++;
   \   00000156   0x.... 0x....      LDR.W    R0,??DataTable13_10
   \   0000015A   0x7980             LDRB     R0,[R0, #+6]
   \   0000015C   0x1C40             ADDS     R0,R0,#+1
   \   0000015E   0x.... 0x....      LDR.W    R1,??DataTable13_10
   \   00000162   0x7188             STRB     R0,[R1, #+6]
   \   00000164   0xE005             B.N      ??key_check_13
    216                  else
    217                    oled.showpage = oled.showpage_min;
   \                     ??key_check_16: (+1)
   \   00000166   0x.... 0x....      LDR.W    R0,??DataTable13_10
   \   0000016A   0x7A00             LDRB     R0,[R0, #+8]
   \   0000016C   0x.... 0x....      LDR.W    R1,??DataTable13_10
   \   00000170   0x7188             STRB     R0,[R1, #+6]
    218                }
    219              }
    220              else
    221              {
    222              }
    223              break;
   \                     ??key_check_13: (+1)
   \   00000172   0xE7FF             B.N      ??key_check_7
    224            default:
    225              break;
    226            }
    227            //清除按键状态
    228            status_button = NONE;
   \                     ??key_check_4: (+1)
   \                     ??key_check_7: (+1)
   \   00000174   0x2000             MOVS     R0,#+0
   \   00000176   0x.... 0x....      LDR.W    R1,??DataTable13_8
   \   0000017A   0x7008             STRB     R0,[R1, #+0]
    229            
    230          }
   \   0000017C   0xBD01             POP      {R0,PC}          ;; return
    231          
    232          //void save_flash()
    233          //{
    234          //  int res;
    235          //  uint32 data_to_write[128];
    236          //  for(int i=0;i<oled.para_num;i++)
    237          //    data_to_write[i] = *paralist[i].para;
    238          //  res = disk_write(0,(uint8*)data_to_write,0,1);
    239          //  printf("SD WRITE = %3d \n",res);
    240          //}
    241          

   \                                 In section .text, align 2, keep-with-next
    242          void save_flash()
    243          {
   \                     save_flash: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB0E5             SUB      SP,SP,#+404
    244            uint32 data_to_write[100];
    245            for(int i=0;i<oled.para_num;i++)
   \   00000004   0x2000             MOVS     R0,#+0
   \   00000006   0xE00A             B.N      ??save_flash_0
    246              data_to_write[i] = *paralist[i].para;
   \                     ??save_flash_1: (+1)
   \   00000008   0x.... 0x....      LDR.W    R1,??DataTable13_15
   \   0000000C   0x2214             MOVS     R2,#+20
   \   0000000E   0xFB02 0x1100      MLA      R1,R2,R0,R1
   \   00000012   0x6809             LDR      R1,[R1, #+0]
   \   00000014   0x6809             LDR      R1,[R1, #+0]
   \   00000016   0xAA00             ADD      R2,SP,#+0
   \   00000018   0xF842 0x1020      STR      R1,[R2, R0, LSL #+2]
   \   0000001C   0x1C40             ADDS     R0,R0,#+1
   \                     ??save_flash_0: (+1)
   \   0000001E   0x.... 0x....      LDR.W    R1,??DataTable13_10
   \   00000022   0x8889             LDRH     R1,[R1, #+4]
   \   00000024   0x4288             CMP      R0,R1
   \   00000026   0xDBEF             BLT.N    ??save_flash_1
    247            LPLD_Flash_SectorErase(FLASH_SAVE_SECTOR*0x800);
   \   00000028   0xF45F 0x20FF      MOVS     R0,#+522240
   \   0000002C   0x.... 0x....      BL       LPLD_Flash_SectorErase
    248            LPLD_Flash_ByteProgram(FLASH_SAVE_SECTOR*0x800,data_to_write,oled.para_num*4);
   \   00000030   0x.... 0x....      LDR.W    R0,??DataTable13_10
   \   00000034   0x8880             LDRH     R0,[R0, #+4]
   \   00000036   0x0082             LSLS     R2,R0,#+2
   \   00000038   0xA900             ADD      R1,SP,#+0
   \   0000003A   0xF45F 0x20FF      MOVS     R0,#+522240
   \   0000003E   0x.... 0x....      BL       LPLD_Flash_ByteProgram
    249            
    250          }
   \   00000042   0xB065             ADD      SP,SP,#+404
   \   00000044   0xBD00             POP      {PC}             ;; return
    251          

   \                                 In section .text, align 2, keep-with-next
    252          void read_flash()
    253          {
   \                     read_flash: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xF5AD 0x7D01      SUB      SP,SP,#+516
    254            int res;
    255            uint32 data_read[128];
    256            res = disk_read(0,(uint8*)data_read,0,1);
   \   00000006   0x2301             MOVS     R3,#+1
   \   00000008   0x2200             MOVS     R2,#+0
   \   0000000A   0xA900             ADD      R1,SP,#+0
   \   0000000C   0x2000             MOVS     R0,#+0
   \   0000000E   0x.... 0x....      BL       disk_read
   \   00000012   0x0001             MOVS     R1,R0
    257            printf("SD READ = %3d \n",res);
   \   00000014   0x.... 0x....      LDR.W    R0,??DataTable13_16
   \   00000018   0x.... 0x....      BL       printf
    258            //参数读取
    259            for(int i=0;i<oled.para_num;i++)
   \   0000001C   0x2000             MOVS     R0,#+0
   \   0000001E   0xE00A             B.N      ??read_flash_0
    260            {
    261              *paralist[i].para = data_read[i];
   \                     ??read_flash_1: (+1)
   \   00000020   0xA900             ADD      R1,SP,#+0
   \   00000022   0xF851 0x1020      LDR      R1,[R1, R0, LSL #+2]
   \   00000026   0x.... 0x....      LDR.W    R2,??DataTable13_15
   \   0000002A   0x2314             MOVS     R3,#+20
   \   0000002C   0xFB03 0x2200      MLA      R2,R3,R0,R2
   \   00000030   0x6812             LDR      R2,[R2, #+0]
   \   00000032   0x6011             STR      R1,[R2, #+0]
    262            }
   \   00000034   0x1C40             ADDS     R0,R0,#+1
   \                     ??read_flash_0: (+1)
   \   00000036   0x.... 0x....      LDR.W    R1,??DataTable13_10
   \   0000003A   0x8889             LDRH     R1,[R1, #+4]
   \   0000003C   0x4288             CMP      R0,R1
   \   0000003E   0xDBEF             BLT.N    ??read_flash_1
    263          }
   \   00000040   0xF50D 0x7D01      ADD      SP,SP,#+516
   \   00000044   0xBD00             POP      {PC}             ;; return
    264          

   \                                 In section .text, align 2, keep-with-next
    265          uint16 battery_check()
    266          {
   \                     battery_check: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    267            static uint16 old_volt;
    268            uint16 new_volt = 856 * LPLD_ADC_Get(ADC0, AD23) / 811;
   \   00000002   0x2117             MOVS     R1,#+23
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable13_17  ;; 0x4003b000
   \   00000008   0x.... 0x....      BL       LPLD_ADC_Get
   \   0000000C   0xF44F 0x7156      MOV      R1,#+856
   \   00000010   0x4348             MULS     R0,R1,R0
   \   00000012   0xF240 0x312B      MOVW     R1,#+811
   \   00000016   0xFB90 0xF4F1      SDIV     R4,R0,R1
    269            if(abs(new_volt - old_volt)>3)
   \   0000001A   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000001C   0x.... 0x....      LDR.W    R0,??DataTable13_18
   \   00000020   0x8800             LDRH     R0,[R0, #+0]
   \   00000022   0x1A20             SUBS     R0,R4,R0
   \   00000024   0x.... 0x....      BL       abs
   \   00000028   0x2804             CMP      R0,#+4
   \   0000002A   0xDB03             BLT.N    ??battery_check_0
    270              old_volt = new_volt;
   \   0000002C   0x.... 0x....      LDR.W    R0,??DataTable13_18
   \   00000030   0x8004             STRH     R4,[R0, #+0]
   \   00000032   0xE01D             B.N      ??battery_check_1
    271            else if(new_volt - old_volt>2)
   \                     ??battery_check_0: (+1)
   \   00000034   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000036   0x.... 0x....      LDR.W    R0,??DataTable13_18
   \   0000003A   0x8800             LDRH     R0,[R0, #+0]
   \   0000003C   0x1A20             SUBS     R0,R4,R0
   \   0000003E   0x2803             CMP      R0,#+3
   \   00000040   0xDB07             BLT.N    ??battery_check_2
    272              old_volt++;
   \   00000042   0x.... 0x....      LDR.W    R0,??DataTable13_18
   \   00000046   0x8800             LDRH     R0,[R0, #+0]
   \   00000048   0x1C40             ADDS     R0,R0,#+1
   \   0000004A   0x.... 0x....      LDR.W    R1,??DataTable13_18
   \   0000004E   0x8008             STRH     R0,[R1, #+0]
   \   00000050   0xE00E             B.N      ??battery_check_1
    273            else if(new_volt - old_volt<-2)
   \                     ??battery_check_2: (+1)
   \   00000052   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000054   0x.... 0x....      LDR.W    R0,??DataTable13_18
   \   00000058   0x8800             LDRH     R0,[R0, #+0]
   \   0000005A   0x1A20             SUBS     R0,R4,R0
   \   0000005C   0xF110 0x0F02      CMN      R0,#+2
   \   00000060   0xDA06             BGE.N    ??battery_check_1
    274              old_volt--;
   \   00000062   0x.... 0x....      LDR.W    R0,??DataTable13_18
   \   00000066   0x8800             LDRH     R0,[R0, #+0]
   \   00000068   0x1E40             SUBS     R0,R0,#+1
   \   0000006A   0x.... 0x....      LDR.W    R1,??DataTable13_18
   \   0000006E   0x8008             STRH     R0,[R1, #+0]
    275            return old_volt;
   \                     ??battery_check_1: (+1)
   \   00000070   0x.... 0x....      LDR.W    R0,??DataTable13_18
   \   00000074   0x8800             LDRH     R0,[R0, #+0]
   \   00000076   0xBD10             POP      {R4,PC}          ;; return
    276          }

   \                                 In section .bss, align 2
   \                     ??old_volt:
   \   00000000                      DS8 2
    277          

   \                                 In section .text, align 2, keep-with-next
    278          void show_oled()
    279          {
   \                     show_oled: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    280          //  if(eleccar.batt_volt < 740) 
    281          //  {
    282          //    LCD_P14x16Str(4,2,"电压");
    283          //    LCD_P8x16Str(37,8,"-.- -.- -.-");
    284          //  }
    285            if(oled.showpage>=0)
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable13_10
   \   00000006   0xF990 0x0006      LDRSB    R0,[R0, #+6]
   \   0000000A   0x2800             CMP      R0,#+0
   \   0000000C   0xD408             BMI.N    ??show_oled_0
    286            {
    287              show_upperpage(oled.showpage);
   \   0000000E   0x.... 0x....      LDR.W    R0,??DataTable13_10
   \   00000012   0xF990 0x0006      LDRSB    R0,[R0, #+6]
   \   00000016   0x.... 0x....      BL       show_upperpage
    288              show_changeable();
   \   0000001A   0x.... 0x....      BL       show_changeable
   \   0000001E   0xE005             B.N      ??show_oled_1
    289            }
    290            else
    291            {
    292              show_fullpage(oled.showpage);             //潜在不确定
   \                     ??show_oled_0: (+1)
   \   00000020   0x.... 0x....      LDR.W    R0,??DataTable13_10
   \   00000024   0xF990 0x0006      LDRSB    R0,[R0, #+6]
   \   00000028   0x.... 0x....      BL       show_fullpage
    293            }
    294            
    295          }
   \                     ??show_oled_1: (+1)
   \   0000002C   0xBD01             POP      {R0,PC}          ;; return
    296          #endif
    297          

   \                                 In section .text, align 2, keep-with-next
    298          void show_upperpage(int page)
    299          {
   \                     show_upperpage: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
    300          //  switch(0)
    301          //  {
    302          //  case 0:
    303          //    oledprintf(0,0,"leftF1 %6d",indata.leftF1);
    304          //    oledprintf(1,0,"rightF1 %6d",indata.rightF1);
    305          //
    306          //    break;
    307          //  default:
    308          //    break;
    309          //  }
    310            static int lastpage;
    311            if(lastpage!=page)
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable13_19
   \   00000008   0x6800             LDR      R0,[R0, #+0]
   \   0000000A   0x42A0             CMP      R0,R4
   \   0000000C   0xD00B             BEQ.N    ??show_upperpage_0
    312            {
    313              for(int i=0;i<5;LCD_ClearLine(i++));        //换页前清行
   \   0000000E   0x2500             MOVS     R5,#+0
   \   00000010   0xE004             B.N      ??show_upperpage_1
   \                     ??show_upperpage_2: (+1)
   \   00000012   0x0028             MOVS     R0,R5
   \   00000014   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000016   0x.... 0x....      BL       LCD_ClearLine
   \   0000001A   0x1C6D             ADDS     R5,R5,#+1
   \                     ??show_upperpage_1: (+1)
   \   0000001C   0x2D05             CMP      R5,#+5
   \   0000001E   0xDBF8             BLT.N    ??show_upperpage_2
    314              lastpage=page;
   \   00000020   0x.... 0x....      LDR.W    R0,??DataTable13_19
   \   00000024   0x6004             STR      R4,[R0, #+0]
    315            }
    316            
    317            switch(page)
   \                     ??show_upperpage_0: (+1)
   \   00000026   0x2C00             CMP      R4,#+0
   \   00000028   0xD005             BEQ.N    ??show_upperpage_3
   \   0000002A   0x2C02             CMP      R4,#+2
   \   0000002C   0xD068             BEQ.N    ??show_upperpage_4
   \   0000002E   0xD342             BCC.N    ??show_upperpage_5
   \   00000030   0x2C03             CMP      R4,#+3
   \   00000032   0xD066             BEQ.N    ??show_upperpage_6
   \   00000034   0xE07B             B.N      ??show_upperpage_7
    318            {
    319            case 0:
    320              oledprintf(0,0,"LFre %6d",LF);
   \                     ??show_upperpage_3: (+1)
   \   00000036   0x.... 0x....      LDR.W    R0,??DataTable13_20
   \   0000003A   0x6803             LDR      R3,[R0, #+0]
   \   0000003C   0x.... 0x....      LDR.W    R2,??DataTable13_21
   \   00000040   0x2100             MOVS     R1,#+0
   \   00000042   0x2000             MOVS     R0,#+0
   \   00000044   0x.... 0x....      BL       oledprintf
    321              oledprintf(0,80,"%4d",LF-setpara.Ref.leftmin);
   \   00000048   0x.... 0x....      LDR.W    R0,??DataTable13_20
   \   0000004C   0x6800             LDR      R0,[R0, #+0]
   \   0000004E   0x.... 0x....      LDR.W    R1,??DataTable13_22
   \   00000052   0x6849             LDR      R1,[R1, #+4]
   \   00000054   0x1A43             SUBS     R3,R0,R1
   \   00000056   0x....             ADR.N    R2,??DataTable7  ;; "%4d"
   \   00000058   0x2150             MOVS     R1,#+80
   \   0000005A   0x2000             MOVS     R0,#+0
   \   0000005C   0x.... 0x....      BL       oledprintf
    322              oledprintf(1,0,"RFre %6d",RF);
   \   00000060   0x.... 0x....      LDR.W    R0,??DataTable13_20
   \   00000064   0x6843             LDR      R3,[R0, #+4]
   \   00000066   0x.... 0x....      LDR.W    R2,??DataTable13_23
   \   0000006A   0x2100             MOVS     R1,#+0
   \   0000006C   0x2001             MOVS     R0,#+1
   \   0000006E   0x.... 0x....      BL       oledprintf
    323              oledprintf(1,80,"%4d",RF-setpara.Ref.rightmin);
   \   00000072   0x.... 0x....      LDR.W    R0,??DataTable13_20
   \   00000076   0x6840             LDR      R0,[R0, #+4]
   \   00000078   0x.... 0x....      LDR.W    R1,??DataTable13_22
   \   0000007C   0x68C9             LDR      R1,[R1, #+12]
   \   0000007E   0x1A43             SUBS     R3,R0,R1
   \   00000080   0x....             ADR.N    R2,??DataTable7  ;; "%4d"
   \   00000082   0x2150             MOVS     R1,#+80
   \   00000084   0x2001             MOVS     R0,#+1
   \   00000086   0x.... 0x....      BL       oledprintf
    324              oledprintf(2,0,"CFre %6d",CF);
   \   0000008A   0x.... 0x....      LDR.W    R0,??DataTable13_20
   \   0000008E   0x6883             LDR      R3,[R0, #+8]
   \   00000090   0x.... 0x....      LDR.W    R2,??DataTable13_24
   \   00000094   0x2100             MOVS     R1,#+0
   \   00000096   0x2002             MOVS     R0,#+2
   \   00000098   0x.... 0x....      BL       oledprintf
    325              oledprintf(2,80,"%4d",CF-setpara.Ref.centermin);
   \   0000009C   0x.... 0x....      LDR.W    R0,??DataTable13_20
   \   000000A0   0x6880             LDR      R0,[R0, #+8]
   \   000000A2   0x.... 0x....      LDR.W    R1,??DataTable13_22
   \   000000A6   0x6949             LDR      R1,[R1, #+20]
   \   000000A8   0x1A43             SUBS     R3,R0,R1
   \   000000AA   0x....             ADR.N    R2,??DataTable7  ;; "%4d"
   \   000000AC   0x2150             MOVS     R1,#+80
   \   000000AE   0x2002             MOVS     R0,#+2
   \   000000B0   0x.... 0x....      BL       oledprintf
    326          //    oledprintf(2,0,"NearOUT: %6d",track.near_out);
    327          //    oledprintf(3,0,"FarOUT: %6d",track.far_out);
    328              
    329              break;
   \   000000B4   0xE03B             B.N      ??show_upperpage_8
    330            case 1:
    331          //    oledprintf(0,0,"%4d %4d  %4d %4d",indata.ad[0],indata.ad[5],indata.ad[4],indata.ad[1]);
    332              oledprintf(0,0,"SpeedOUT: %6d",outdata.Motor_Speed);
   \                     ??show_upperpage_5: (+1)
   \   000000B6   0x.... 0x....      LDR.W    R0,??DataTable13_25
   \   000000BA   0x6883             LDR      R3,[R0, #+8]
   \   000000BC   0x.... 0x....      LDR.W    R2,??DataTable13_26
   \   000000C0   0x2100             MOVS     R1,#+0
   \   000000C2   0x2000             MOVS     R0,#+0
   \   000000C4   0x.... 0x....      BL       oledprintf
    333              oledprintf(1,0,"MotorPWM: %6d",outdata.Motor_Power);
   \   000000C8   0x.... 0x....      LDR.W    R0,??DataTable13_25
   \   000000CC   0x68C3             LDR      R3,[R0, #+12]
   \   000000CE   0x.... 0x....      LDR.W    R2,??DataTable13_27
   \   000000D2   0x2100             MOVS     R1,#+0
   \   000000D4   0x2001             MOVS     R0,#+1
   \   000000D6   0x.... 0x....      BL       oledprintf
    334              oledprintf(2,0,"SpeedFB:%6d",indata.febspeed);
   \   000000DA   0x.... 0x....      LDR.W    R0,??DataTable13_20
   \   000000DE   0x6983             LDR      R3,[R0, #+24]
   \   000000E0   0x.... 0x....      LDR.W    R2,??DataTable13_28
   \   000000E4   0x2100             MOVS     R1,#+0
   \   000000E6   0x2002             MOVS     R0,#+2
   \   000000E8   0x.... 0x....      BL       oledprintf
    335              oledprintf(3,0,"SteerPWM: %6d",outdata.Steer_PWM);
   \   000000EC   0x.... 0x....      LDR.W    R0,??DataTable13_25
   \   000000F0   0x6843             LDR      R3,[R0, #+4]
   \   000000F2   0x.... 0x....      LDR.W    R2,??DataTable13_29
   \   000000F6   0x2100             MOVS     R1,#+0
   \   000000F8   0x2003             MOVS     R0,#+3
   \   000000FA   0x.... 0x....      BL       oledprintf
    336              break;
   \   000000FE   0xE016             B.N      ??show_upperpage_8
    337            case 2:
    338          //    oledprintf(0,0,"NearCal: %6d",track.near_cal);
    339          //    oledprintf(1,0,"FarCal: %6d",track.far_cal);
    340          //    oledprintf(2,0,"%4d %4d  %4d %4d",LH,RH,LF,RF);
    341          //    oledprintf(3,0,"FarOUT: %6d",track.far_out);
    342              
    343              break;
   \                     ??show_upperpage_4: (+1)
   \   00000100   0xE015             B.N      ??show_upperpage_8
    344            case 3:
    345              oledprintf(1,0,"Battery: %1d.%02dV",eleccar.batt_volt/100,eleccar.batt_volt%100);
   \                     ??show_upperpage_6: (+1)
   \   00000102   0x.... 0x....      LDR.W    R0,??DataTable13_11
   \   00000106   0x8900             LDRH     R0,[R0, #+8]
   \   00000108   0x2164             MOVS     R1,#+100
   \   0000010A   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \   0000010E   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   00000112   0x9000             STR      R0,[SP, #+0]
   \   00000114   0x.... 0x....      LDR.W    R0,??DataTable13_11
   \   00000118   0x8900             LDRH     R0,[R0, #+8]
   \   0000011A   0x2164             MOVS     R1,#+100
   \   0000011C   0xFB90 0xF3F1      SDIV     R3,R0,R1
   \   00000120   0x.... 0x....      LDR.W    R2,??DataTable13_30
   \   00000124   0x2100             MOVS     R1,#+0
   \   00000126   0x2001             MOVS     R0,#+1
   \   00000128   0x.... 0x....      BL       oledprintf
    346          //    oledprintf(2,0,"A%6d,%6d,%6d",indata.mpu6050.acc_x,indata.mpu6050.acc_y,indata.mpu6050.acc_z);
    347          //    oledprintf(3,0,"G%6d,%6d,%6d",indata.mpu6050.gyr_x,indata.mpu6050.gyr_y,indata.mpu6050.gyr_z);
    348              break;
   \   0000012C   0xE7FF             B.N      ??show_upperpage_8
    349            default:
    350              break;
    351            }
    352          }
   \                     ??show_upperpage_7: (+1)
   \                     ??show_upperpage_8: (+1)
   \   0000012E   0xBD31             POP      {R0,R4,R5,PC}    ;; return

   \                                 In section .bss, align 4
   \                     ??lastpage:
   \   00000000                      DS8 4

   \                                 In section .text, align 2, keep-with-next
    353          void show_changeable()
    354          {
   \                     show_changeable: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB082             SUB      SP,SP,#+8
    355            int temp_para_select = oled.para_select;      //由于潜在的中断干扰，必须先存储参数序号以避免危险
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable13_10
   \   00000008   0x8844             LDRH     R4,[R0, #+2]
    356            if(temp_para_select>0)
   \   0000000A   0x2C01             CMP      R4,#+1
   \   0000000C   0xDB1B             BLT.N    ??show_changeable_0
    357            {
    358              oledprintf(5,0,"%02d.%-13s",temp_para_select-1,paralist[temp_para_select-1].label);
   \   0000000E   0x.... 0x....      LDR.W    R0,??DataTable13_15
   \   00000012   0x2114             MOVS     R1,#+20
   \   00000014   0xFB01 0x0004      MLA      R0,R1,R4,R0
   \   00000018   0x3810             SUBS     R0,R0,#+16
   \   0000001A   0x9000             STR      R0,[SP, #+0]
   \   0000001C   0x1E63             SUBS     R3,R4,#+1
   \   0000001E   0x.... 0x....      LDR.W    R2,??DataTable13_31
   \   00000022   0x2100             MOVS     R1,#+0
   \   00000024   0x2005             MOVS     R0,#+5
   \   00000026   0x.... 0x....      BL       oledprintf
    359              oledprintf(5,96,"%5d",*paralist[temp_para_select-1].para);
   \   0000002A   0x.... 0x....      LDR.W    R0,??DataTable13_15
   \   0000002E   0x2114             MOVS     R1,#+20
   \   00000030   0xFB01 0x0004      MLA      R0,R1,R4,R0
   \   00000034   0xF850 0x0C14      LDR      R0,[R0, #-20]
   \   00000038   0x6803             LDR      R3,[R0, #+0]
   \   0000003A   0x....             ADR.N    R2,??DataTable10  ;; "%5d"
   \   0000003C   0x2160             MOVS     R1,#+96
   \   0000003E   0x2005             MOVS     R0,#+5
   \   00000040   0x.... 0x....      BL       oledprintf
   \   00000044   0xE002             B.N      ??show_changeable_1
    360            }
    361            else
    362            {
    363              LCD_ClearLine(5);
   \                     ??show_changeable_0: (+1)
   \   00000046   0x2005             MOVS     R0,#+5
   \   00000048   0x.... 0x....      BL       LCD_ClearLine
    364            }
    365            if(oled.changepara)
   \                     ??show_changeable_1: (+1)
   \   0000004C   0x.... 0x....      LDR.W    R0,??DataTable13_10
   \   00000050   0x7800             LDRB     R0,[R0, #+0]
   \   00000052   0x2800             CMP      R0,#+0
   \   00000054   0xD01A             BEQ.N    ??show_changeable_2
    366            {
    367              oledprintf(6,0,"%02d.%-13s",temp_para_select,paralist[temp_para_select].label);
   \   00000056   0x.... 0x....      LDR.W    R0,??DataTable13_15
   \   0000005A   0x2114             MOVS     R1,#+20
   \   0000005C   0xFB01 0x0004      MLA      R0,R1,R4,R0
   \   00000060   0x1D00             ADDS     R0,R0,#+4
   \   00000062   0x9000             STR      R0,[SP, #+0]
   \   00000064   0x0023             MOVS     R3,R4
   \   00000066   0x.... 0x....      LDR.W    R2,??DataTable13_31
   \   0000006A   0x2100             MOVS     R1,#+0
   \   0000006C   0x2006             MOVS     R0,#+6
   \   0000006E   0x.... 0x....      BL       oledprintf
    368              oledprintfw(6,96,"%5d",*paralist[temp_para_select].para);
   \   00000072   0x.... 0x....      LDR.W    R0,??DataTable13_15
   \   00000076   0x2114             MOVS     R1,#+20
   \   00000078   0xFB01 0x0004      MLA      R0,R1,R4,R0
   \   0000007C   0x6800             LDR      R0,[R0, #+0]
   \   0000007E   0x6803             LDR      R3,[R0, #+0]
   \   00000080   0x....             ADR.N    R2,??DataTable10  ;; "%5d"
   \   00000082   0x2160             MOVS     R1,#+96
   \   00000084   0x2006             MOVS     R0,#+6
   \   00000086   0x.... 0x....      BL       oledprintfw
   \   0000008A   0xE019             B.N      ??show_changeable_3
    369            }
    370            else
    371            {  
    372              oledprintfw(6,0,"%02d.%-13s",temp_para_select,paralist[temp_para_select].label);
   \                     ??show_changeable_2: (+1)
   \   0000008C   0x.... 0x....      LDR.W    R0,??DataTable13_15
   \   00000090   0x2114             MOVS     R1,#+20
   \   00000092   0xFB01 0x0004      MLA      R0,R1,R4,R0
   \   00000096   0x1D00             ADDS     R0,R0,#+4
   \   00000098   0x9000             STR      R0,[SP, #+0]
   \   0000009A   0x0023             MOVS     R3,R4
   \   0000009C   0x.... 0x....      LDR.W    R2,??DataTable13_31
   \   000000A0   0x2100             MOVS     R1,#+0
   \   000000A2   0x2006             MOVS     R0,#+6
   \   000000A4   0x.... 0x....      BL       oledprintfw
    373              oledprintf(6,96,"%5d",*paralist[temp_para_select].para);
   \   000000A8   0x.... 0x....      LDR.W    R0,??DataTable13_15
   \   000000AC   0x2114             MOVS     R1,#+20
   \   000000AE   0xFB01 0x0004      MLA      R0,R1,R4,R0
   \   000000B2   0x6800             LDR      R0,[R0, #+0]
   \   000000B4   0x6803             LDR      R3,[R0, #+0]
   \   000000B6   0x....             ADR.N    R2,??DataTable10  ;; "%5d"
   \   000000B8   0x2160             MOVS     R1,#+96
   \   000000BA   0x2006             MOVS     R0,#+6
   \   000000BC   0x.... 0x....      BL       oledprintf
    374            }
    375            if(temp_para_select<oled.para_num-1)
   \                     ??show_changeable_3: (+1)
   \   000000C0   0x.... 0x....      LDR.W    R0,??DataTable13_10
   \   000000C4   0x8880             LDRH     R0,[R0, #+4]
   \   000000C6   0x1E40             SUBS     R0,R0,#+1
   \   000000C8   0x4284             CMP      R4,R0
   \   000000CA   0xDA1A             BGE.N    ??show_changeable_4
    376            {
    377              oledprintf(7,0,"%02d.%-13s",temp_para_select+1,paralist[temp_para_select+1].label);
   \   000000CC   0x.... 0x....      LDR.W    R0,??DataTable13_15
   \   000000D0   0x2114             MOVS     R1,#+20
   \   000000D2   0xFB01 0x0004      MLA      R0,R1,R4,R0
   \   000000D6   0x3018             ADDS     R0,R0,#+24
   \   000000D8   0x9000             STR      R0,[SP, #+0]
   \   000000DA   0x1C63             ADDS     R3,R4,#+1
   \   000000DC   0x.... 0x....      LDR.W    R2,??DataTable13_31
   \   000000E0   0x2100             MOVS     R1,#+0
   \   000000E2   0x2007             MOVS     R0,#+7
   \   000000E4   0x.... 0x....      BL       oledprintf
    378              oledprintf(7,96,"%5d",*paralist[temp_para_select+1].para);
   \   000000E8   0x.... 0x....      LDR.W    R0,??DataTable13_15
   \   000000EC   0x2114             MOVS     R1,#+20
   \   000000EE   0xFB01 0x0004      MLA      R0,R1,R4,R0
   \   000000F2   0x6940             LDR      R0,[R0, #+20]
   \   000000F4   0x6803             LDR      R3,[R0, #+0]
   \   000000F6   0x....             ADR.N    R2,??DataTable10  ;; "%5d"
   \   000000F8   0x2160             MOVS     R1,#+96
   \   000000FA   0x2007             MOVS     R0,#+7
   \   000000FC   0x.... 0x....      BL       oledprintf
   \   00000100   0xE002             B.N      ??show_changeable_5
    379            }  
    380            else
    381            {
    382              LCD_ClearLine(7);
   \                     ??show_changeable_4: (+1)
   \   00000102   0x2007             MOVS     R0,#+7
   \   00000104   0x.... 0x....      BL       LCD_ClearLine
    383            }
    384            
    385          }
   \                     ??show_changeable_5: (+1)
   \   00000108   0xBD13             POP      {R0,R1,R4,PC}    ;; return

   \                                 In section .text, align 2, keep-with-next
    386          void show_fullpage(int page)
    387          {
    388            switch(page)
   \                     show_fullpage: (+1)
   \   00000000   0xF07F 0x0102      MVNS     R1,#+2
   \   00000004   0x1A40             SUBS     R0,R0,R1
   \   00000006   0xD005             BEQ.N    ??show_fullpage_0
   \   00000008   0x1E40             SUBS     R0,R0,#+1
   \   0000000A   0xD002             BEQ.N    ??show_fullpage_1
   \   0000000C   0x1E40             SUBS     R0,R0,#+1
   \   0000000E   0xD102             BNE.N    ??show_fullpage_2
    389            {
    390            case -1:
    391              break;
   \                     ??show_fullpage_3: (+1)
   \   00000010   0xE001             B.N      ??show_fullpage_4
    392            case -2:
    393              break;
   \                     ??show_fullpage_1: (+1)
   \   00000012   0xE000             B.N      ??show_fullpage_4
    394            case -3:
    395              break;
   \                     ??show_fullpage_0: (+1)
   \   00000014   0xE7FF             B.N      ??show_fullpage_4
    396            default:
    397              break; 
    398            }
    399          }
   \                     ??show_fullpage_2: (+1)
   \                     ??show_fullpage_4: (+1)
   \   00000016   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
    400          unsigned short CRC_CHECK(unsigned char *Buf, unsigned char CRC_CNT)
    401          {
   \                     CRC_CHECK: (+1)
   \   00000000   0xB430             PUSH     {R4,R5}
    402            unsigned short CRC_Temp;
    403            unsigned char i,j;
    404            CRC_Temp = 0xffff;
   \   00000002   0xF64F 0x72FF      MOVW     R2,#+65535
    405            
    406            for (i=0;i<CRC_CNT; i++){      
   \   00000006   0x2300             MOVS     R3,#+0
   \   00000008   0xE000             B.N      ??CRC_CHECK_0
   \                     ??CRC_CHECK_1: (+1)
   \   0000000A   0x1C5B             ADDS     R3,R3,#+1
   \                     ??CRC_CHECK_0: (+1)
   \   0000000C   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   0000000E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000010   0x428B             CMP      R3,R1
   \   00000012   0xD213             BCS.N    ??CRC_CHECK_2
    407              CRC_Temp ^= Buf[i];                                 //异或等
   \   00000014   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000016   0x5C1C             LDRB     R4,[R3, R0]
   \   00000018   0x4062             EORS     R2,R4,R2
    408              for (j=0;j<8;j++) {
   \   0000001A   0x2400             MOVS     R4,#+0
   \   0000001C   0xE002             B.N      ??CRC_CHECK_3
    409                if (CRC_Temp & 0x01)
    410                  CRC_Temp = (CRC_Temp >>1 ) ^ 0xa001;            //异或
    411                else
    412                  CRC_Temp = CRC_Temp >> 1;
   \                     ??CRC_CHECK_4: (+1)
   \   0000001E   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   00000020   0x0852             LSRS     R2,R2,#+1
   \                     ??CRC_CHECK_5: (+1)
   \   00000022   0x1C64             ADDS     R4,R4,#+1
   \                     ??CRC_CHECK_3: (+1)
   \   00000024   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000026   0x2C08             CMP      R4,#+8
   \   00000028   0xDAEF             BGE.N    ??CRC_CHECK_1
   \   0000002A   0x07D5             LSLS     R5,R2,#+31
   \   0000002C   0xD5F7             BPL.N    ??CRC_CHECK_4
   \   0000002E   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   00000030   0x0852             LSRS     R2,R2,#+1
   \   00000032   0xF482 0x4220      EOR      R2,R2,#0xA000
   \   00000036   0xF092 0x0201      EORS     R2,R2,#0x1
   \   0000003A   0xE7F2             B.N      ??CRC_CHECK_5
    413              }
    414            }
    415            return(CRC_Temp);
   \                     ??CRC_CHECK_2: (+1)
   \   0000003C   0x0010             MOVS     R0,R2
   \   0000003E   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000040   0xBC30             POP      {R4,R5}
   \   00000042   0x4770             BX       LR               ;; return
    416          }
    417          

   \                                 In section .text, align 2, keep-with-next
    418          void OutPut_Data(void)
    419          {
   \                     OutPut_Data: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB08B             SUB      SP,SP,#+44
    420            int temp[4] = {0};
   \   00000004   0xA807             ADD      R0,SP,#+28
   \   00000006   0x2110             MOVS     R1,#+16
   \   00000008   0x.... 0x....      BL       __aeabi_memclr4
    421            unsigned int temp1[4] = {0};
   \   0000000C   0xA803             ADD      R0,SP,#+12
   \   0000000E   0x2110             MOVS     R1,#+16
   \   00000010   0x.... 0x....      BL       __aeabi_memclr4
    422            unsigned char databuf[10] = {0};
   \   00000014   0xA800             ADD      R0,SP,#+0
   \   00000016   0x2100             MOVS     R1,#+0
   \   00000018   0x2200             MOVS     R2,#+0
   \   0000001A   0x2300             MOVS     R3,#+0
   \   0000001C   0xC00E             STM      R0!,{R1-R3}
   \   0000001E   0x380C             SUBS     R0,R0,#+12
    423            unsigned char i;
    424            unsigned short CRC16 = 0;
   \   00000020   0x2000             MOVS     R0,#+0
    425            for(i=0;i<4;i++)
   \   00000022   0x2100             MOVS     R1,#+0
   \   00000024   0xE011             B.N      ??OutPut_Data_0
    426            {    
    427              temp[i]  = (int)OutData[i];
   \                     ??OutPut_Data_1: (+1)
   \   00000026   0x.... 0x....      LDR.W    R0,??DataTable13_32
   \   0000002A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000002C   0xF930 0x0011      LDRSH    R0,[R0, R1, LSL #+1]
   \   00000030   0xAA07             ADD      R2,SP,#+28
   \   00000032   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000034   0xF842 0x0021      STR      R0,[R2, R1, LSL #+2]
    428              temp1[i] = (unsigned int)temp[i];   
   \   00000038   0xA807             ADD      R0,SP,#+28
   \   0000003A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000003C   0xF850 0x0021      LDR      R0,[R0, R1, LSL #+2]
   \   00000040   0xAA03             ADD      R2,SP,#+12
   \   00000042   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000044   0xF842 0x0021      STR      R0,[R2, R1, LSL #+2]
    429            }
   \   00000048   0x1C49             ADDS     R1,R1,#+1
   \                     ??OutPut_Data_0: (+1)
   \   0000004A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000004C   0x2904             CMP      R1,#+4
   \   0000004E   0xDBEA             BLT.N    ??OutPut_Data_1
    430            
    431            for(i=0;i<4;i++) 
   \   00000050   0x2100             MOVS     R1,#+0
   \   00000052   0xE018             B.N      ??OutPut_Data_2
    432            {
    433              databuf[i*2]   = (unsigned char)(temp1[i]%256);//低八位
   \                     ??OutPut_Data_3: (+1)
   \   00000054   0xA803             ADD      R0,SP,#+12
   \   00000056   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000058   0xF850 0x0021      LDR      R0,[R0, R1, LSL #+2]
   \   0000005C   0xF44F 0x7280      MOV      R2,#+256
   \   00000060   0xFBB0 0xF3F2      UDIV     R3,R0,R2
   \   00000064   0xFB03 0x0312      MLS      R3,R3,R2,R0
   \   00000068   0xA800             ADD      R0,SP,#+0
   \   0000006A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000006C   0xF800 0x3011      STRB     R3,[R0, R1, LSL #+1]
    434              databuf[i*2+1] = (unsigned char)(temp1[i]/256);//高八位
   \   00000070   0xA803             ADD      R0,SP,#+12
   \   00000072   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000074   0xF850 0x0021      LDR      R0,[R0, R1, LSL #+2]
   \   00000078   0x0A00             LSRS     R0,R0,#+8
   \   0000007A   0xAA00             ADD      R2,SP,#+0
   \   0000007C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000007E   0xEB12 0x0241      ADDS     R2,R2,R1, LSL #+1
   \   00000082   0x7050             STRB     R0,[R2, #+1]
    435            }
   \   00000084   0x1C49             ADDS     R1,R1,#+1
   \                     ??OutPut_Data_2: (+1)
   \   00000086   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000088   0x2904             CMP      R1,#+4
   \   0000008A   0xDBE3             BLT.N    ??OutPut_Data_3
    436            
    437            CRC16 = CRC_CHECK(databuf,8);
   \   0000008C   0x2108             MOVS     R1,#+8
   \   0000008E   0xA800             ADD      R0,SP,#+0
   \   00000090   0x.... 0x....      BL       CRC_CHECK
    438            databuf[8] = CRC16%256;               
   \   00000094   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000096   0xF44F 0x7180      MOV      R1,#+256
   \   0000009A   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \   0000009E   0xFB02 0x0211      MLS      R2,R2,R1,R0
   \   000000A2   0xF88D 0x2008      STRB     R2,[SP, #+8]
    439            databuf[9] = CRC16/256;               
   \   000000A6   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000000A8   0xF44F 0x7180      MOV      R1,#+256
   \   000000AC   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000000B0   0xF88D 0x0009      STRB     R0,[SP, #+9]
    440            LPLD_UART_PutCharAr(UART0,databuf,10);
   \   000000B4   0x220A             MOVS     R2,#+10
   \   000000B6   0xA900             ADD      R1,SP,#+0
   \   000000B8   0x....             LDR.N    R0,??DataTable13_33  ;; 0x4006a000
   \   000000BA   0x.... 0x....      BL       LPLD_UART_PutCharAr
    441          }
   \   000000BE   0xB00B             ADD      SP,SP,#+44
   \   000000C0   0xBD00             POP      {PC}             ;; return
    442          

   \                                 In section .text, align 2, keep-with-next
    443          void send_uart()
    444          {
   \                     send_uart: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    445            if(flag.TO_SCOPE)//每次四个变量
   \   00000002   0x....             LDR.N    R0,??DataTable13_34
   \   00000004   0x78C0             LDRB     R0,[R0, #+3]
   \   00000006   0x2800             CMP      R0,#+0
   \   00000008   0xD011             BEQ.N    ??send_uart_0
    446            {
    447              OutData[0]=(int)LF;
   \   0000000A   0x....             LDR.N    R0,??DataTable13_20
   \   0000000C   0x6800             LDR      R0,[R0, #+0]
   \   0000000E   0x....             LDR.N    R1,??DataTable13_32
   \   00000010   0x8008             STRH     R0,[R1, #+0]
    448              OutData[1]=(int)RF;
   \   00000012   0x....             LDR.N    R0,??DataTable13_20
   \   00000014   0x6840             LDR      R0,[R0, #+4]
   \   00000016   0x....             LDR.N    R1,??DataTable13_32
   \   00000018   0x8048             STRH     R0,[R1, #+2]
    449              OutData[2]=(int)outdata.div;
   \   0000001A   0x....             LDR.N    R0,??DataTable13_25
   \   0000001C   0x6900             LDR      R0,[R0, #+16]
   \   0000001E   0x....             LDR.N    R1,??DataTable13_32
   \   00000020   0x8088             STRH     R0,[R1, #+4]
    450              OutData[3]=(int)RF;
   \   00000022   0x....             LDR.N    R0,??DataTable13_20
   \   00000024   0x6840             LDR      R0,[R0, #+4]
   \   00000026   0x....             LDR.N    R1,??DataTable13_32
   \   00000028   0x80C8             STRH     R0,[R1, #+6]
    451              OutPut_Data();
   \   0000002A   0x.... 0x....      BL       OutPut_Data
    452            }
    453          
    454            OutPut_Data();
   \                     ??send_uart_0: (+1)
   \   0000002E   0x.... 0x....      BL       OutPut_Data
    455          }
   \   00000032   0xBD01             POP      {R0,PC}          ;; return
    456          
    457          /**************************状态选择*********************************/

   \                                 In section .text, align 2, keep-with-next
    458          void status_select()
    459          {
    460            if (eleccar.status==1)
   \                     status_select: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable13_11
   \   00000002   0x7800             LDRB     R0,[R0, #+0]
   \   00000004   0x2801             CMP      R0,#+1
   \   00000006   0xD111             BNE.N    ??status_select_0
    461              {
    462                eleccar.runtime+=PIT0_MS;
   \   00000008   0x....             LDR.N    R0,??DataTable13_11
   \   0000000A   0x68C0             LDR      R0,[R0, #+12]
   \   0000000C   0x3014             ADDS     R0,R0,#+20
   \   0000000E   0x....             LDR.N    R1,??DataTable13_11
   \   00000010   0x60C8             STR      R0,[R1, #+12]
    463                if (eleccar.runtime >= setpara.settime*1000) 
   \   00000012   0x....             LDR.N    R0,??DataTable13_11
   \   00000014   0x68C0             LDR      R0,[R0, #+12]
   \   00000016   0x....             LDR.N    R1,??DataTable13_22
   \   00000018   0x6C89             LDR      R1,[R1, #+72]
   \   0000001A   0xF44F 0x727A      MOV      R2,#+1000
   \   0000001E   0x4351             MULS     R1,R2,R1
   \   00000020   0x4288             CMP      R0,R1
   \   00000022   0xD319             BCC.N    ??status_select_1
    464                {
    465                  eleccar.status = 2;     //制动
   \   00000024   0x2002             MOVS     R0,#+2
   \   00000026   0x....             LDR.N    R1,??DataTable13_11
   \   00000028   0x7008             STRB     R0,[R1, #+0]
   \   0000002A   0xE015             B.N      ??status_select_1
    466                }
    467              }
    468              else if (eleccar.status == 2)
   \                     ??status_select_0: (+1)
   \   0000002C   0x....             LDR.N    R0,??DataTable13_11
   \   0000002E   0x7800             LDRB     R0,[R0, #+0]
   \   00000030   0x2802             CMP      R0,#+2
   \   00000032   0xD111             BNE.N    ??status_select_1
    469              {
    470               eleccar.runtime+=PIT0_MS;
   \   00000034   0x....             LDR.N    R0,??DataTable13_11
   \   00000036   0x68C0             LDR      R0,[R0, #+12]
   \   00000038   0x3014             ADDS     R0,R0,#+20
   \   0000003A   0x....             LDR.N    R1,??DataTable13_11
   \   0000003C   0x60C8             STR      R0,[R1, #+12]
    471               if (eleccar.runtime > (setpara.settime+1)*1000)
   \   0000003E   0x....             LDR.N    R0,??DataTable13_22
   \   00000040   0x6C80             LDR      R0,[R0, #+72]
   \   00000042   0x1C40             ADDS     R0,R0,#+1
   \   00000044   0xF44F 0x717A      MOV      R1,#+1000
   \   00000048   0x4348             MULS     R0,R1,R0
   \   0000004A   0x....             LDR.N    R1,??DataTable13_11
   \   0000004C   0x68C9             LDR      R1,[R1, #+12]
   \   0000004E   0x4288             CMP      R0,R1
   \   00000050   0xD202             BCS.N    ??status_select_1
    472                 eleccar.status = 3;      //停车
   \   00000052   0x2003             MOVS     R0,#+3
   \   00000054   0x....             LDR.N    R1,??DataTable13_11
   \   00000056   0x7008             STRB     R0,[R1, #+0]
    473              }
    474          
    475          }
   \                     ??status_select_1: (+1)
   \   00000058   0x4770             BX       LR               ;; return
    476          
    477          /**************************数据存储*********************************/

   \                                 In section .text, align 2, keep-with-next
    478          void data_save()
    479          {
   \                     data_save: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    480            if(eleccar.status==1)
   \   00000002   0x....             LDR.N    R0,??DataTable13_11
   \   00000004   0x7800             LDRB     R0,[R0, #+0]
   \   00000006   0x2801             CMP      R0,#+1
   \   00000008   0xD101             BNE.N    ??data_save_0
    481              save_RAM();
   \   0000000A   0x.... 0x....      BL       save_RAM
    482          }
   \                     ??data_save_0: (+1)
   \   0000000E   0xBD01             POP      {R0,PC}          ;; return
    483          

   \                                 In section .text, align 2, keep-with-next
    484          void write_sd()
    485          {
   \                     write_sd: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    486            uint16 temp_flash_read;
    487            
    488            
    489            if(flag.TO_SEND_ARRAY)
   \   00000002   0x....             LDR.N    R0,??DataTable13_34
   \   00000004   0x7800             LDRB     R0,[R0, #+0]
   \   00000006   0x2800             CMP      R0,#+0
   \   00000008   0xD002             BEQ.N    ??write_sd_0
    490            {
    491              flag.TO_SEND_ARRAY=0;
   \   0000000A   0x2000             MOVS     R0,#+0
   \   0000000C   0x....             LDR.N    R1,??DataTable13_34
   \   0000000E   0x7008             STRB     R0,[R1, #+0]
    492              
    493          //    SEND_TAB_ALL();  
    494            }
    495            if(eleccar.status)
   \                     ??write_sd_0: (+1)
   \   00000010   0x....             LDR.N    R0,??DataTable13_11
   \   00000012   0x7800             LDRB     R0,[R0, #+0]
   \   00000014   0x2800             CMP      R0,#+0
   \   00000016   0xD026             BEQ.N    ??write_sd_1
    496            {
    497              if(flag.TO_SAVE_FLASH_NO<(2*save_ram_no)/512)
   \   00000018   0x....             LDR.N    R0,??DataTable13_34
   \   0000001A   0x7840             LDRB     R0,[R0, #+1]
   \   0000001C   0x....             LDR.N    R1,??DataTable13_35
   \   0000001E   0x6809             LDR      R1,[R1, #+0]
   \   00000020   0x0049             LSLS     R1,R1,#+1
   \   00000022   0xEBB0 0x2F51      CMP      R0,R1, LSR #+9
   \   00000026   0xD21E             BCS.N    ??write_sd_1
    498              {
    499                int i=disk_write(0,RAM_BUFF[flag.TO_SAVE_FLASH_NO%50],flag.TO_SAVE_FLASH_NO,1);
   \   00000028   0x....             LDR.N    R0,??DataTable13_34
   \   0000002A   0x7840             LDRB     R0,[R0, #+1]
   \   0000002C   0x2132             MOVS     R1,#+50
   \   0000002E   0x2301             MOVS     R3,#+1
   \   00000030   0x....             LDR.N    R2,??DataTable13_34
   \   00000032   0x7852             LDRB     R2,[R2, #+1]
   \   00000034   0xFB90 0xF4F1      SDIV     R4,R0,R1
   \   00000038   0xFB01 0x0014      MLS      R0,R1,R4,R0
   \   0000003C   0xF44F 0x7100      MOV      R1,#+512
   \   00000040   0x....             LDR.N    R4,??DataTable13_36
   \   00000042   0xFB01 0x4100      MLA      R1,R1,R0,R4
   \   00000046   0x2000             MOVS     R0,#+0
   \   00000048   0x.... 0x....      BL       disk_write
    500                if(i==0)
   \   0000004C   0x2800             CMP      R0,#+0
   \   0000004E   0xD105             BNE.N    ??write_sd_2
    501                {
    502                  flag.TO_SAVE_FLASH_NO++;
   \   00000050   0x....             LDR.N    R0,??DataTable13_34
   \   00000052   0x7840             LDRB     R0,[R0, #+1]
   \   00000054   0x1C40             ADDS     R0,R0,#+1
   \   00000056   0x....             LDR.N    R1,??DataTable13_34
   \   00000058   0x7048             STRB     R0,[R1, #+1]
   \   0000005A   0xE004             B.N      ??write_sd_1
    503                }
    504                else
    505                {
    506                  for(int i=100;i--;);
   \                     ??write_sd_2: (+1)
   \   0000005C   0x2064             MOVS     R0,#+100
   \                     ??write_sd_3: (+1)
   \   0000005E   0x0001             MOVS     R1,R0
   \   00000060   0x1E48             SUBS     R0,R1,#+1
   \   00000062   0x2900             CMP      R1,#+0
   \   00000064   0xD1FB             BNE.N    ??write_sd_3
    507                }
    508              }
    509            }
    510            if(flag.TO_SEND_SD)
   \                     ??write_sd_1: (+1)
   \   00000066   0x....             LDR.N    R0,??DataTable13_34
   \   00000068   0x7880             LDRB     R0,[R0, #+2]
   \   0000006A   0x2800             CMP      R0,#+0
   \   0000006C   0xD031             BEQ.N    ??write_sd_4
    511            {
    512              DisableInterrupts;
   \   0000006E   0xB672             CPSID    I
    513              //printf("TO_SAVE_FLASH_NO = %3d.\n",flag.TO_SAVE_FLASH_NO);
    514              save_RAM();       //调用save_RAM()函数的打印标签功能
   \   00000070   0x.... 0x....      BL       save_RAM
    515              flag.TO_SEND_SD = 0;
   \   00000074   0x2000             MOVS     R0,#+0
   \   00000076   0x....             LDR.N    R1,??DataTable13_34
   \   00000078   0x7088             STRB     R0,[R1, #+2]
    516              for(int i=0;i<flag.TO_SAVE_FLASH_NO;i++)
   \   0000007A   0x2400             MOVS     R4,#+0
   \   0000007C   0xE000             B.N      ??write_sd_5
   \                     ??write_sd_6: (+1)
   \   0000007E   0x1C64             ADDS     R4,R4,#+1
   \                     ??write_sd_5: (+1)
   \   00000080   0x....             LDR.N    R0,??DataTable13_34
   \   00000082   0x7840             LDRB     R0,[R0, #+1]
   \   00000084   0x4284             CMP      R4,R0
   \   00000086   0xDA23             BGE.N    ??write_sd_7
    517              {  
    518                int j;
    519                while(disk_read(0,SEND_BUFF,i,1)); 
   \                     ??write_sd_8: (+1)
   \   00000088   0x2301             MOVS     R3,#+1
   \   0000008A   0x0022             MOVS     R2,R4
   \   0000008C   0x....             LDR.N    R1,??DataTable13_37
   \   0000008E   0x2000             MOVS     R0,#+0
   \   00000090   0x.... 0x....      BL       disk_read
   \   00000094   0x2800             CMP      R0,#+0
   \   00000096   0xD1F7             BNE.N    ??write_sd_8
    520                for(j=0;j<511;j+=2)
   \   00000098   0x2500             MOVS     R5,#+0
   \   0000009A   0xE004             B.N      ??write_sd_9
    521                {       
    522                  temp_flash_read=SEND_BUFF[j]*256+SEND_BUFF[j+1];
    523                  if(temp_flash_read==0xAAAA)
    524                    printf("\n");
    525                  else 
    526                    printf("%d\t",(int16)temp_flash_read);   
   \                     ??write_sd_10: (+1)
   \   0000009C   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   0000009E   0x....             ADR.N    R0,??DataTable13  ;; "%d\t"
   \   000000A0   0x.... 0x....      BL       printf
   \                     ??write_sd_11: (+1)
   \   000000A4   0x1CAD             ADDS     R5,R5,#+2
   \                     ??write_sd_9: (+1)
   \   000000A6   0xF5B5 0x7FFF      CMP      R5,#+510
   \   000000AA   0xDCE8             BGT.N    ??write_sd_6
   \   000000AC   0x....             LDR.N    R0,??DataTable13_37
   \   000000AE   0x5C28             LDRB     R0,[R5, R0]
   \   000000B0   0xF44F 0x7180      MOV      R1,#+256
   \   000000B4   0x....             LDR.N    R2,??DataTable13_37
   \   000000B6   0x18AA             ADDS     R2,R5,R2
   \   000000B8   0x7852             LDRB     R2,[R2, #+1]
   \   000000BA   0xFB01 0x2100      MLA      R1,R1,R0,R2
   \   000000BE   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   000000C0   0xF64A 0x20AA      MOVW     R0,#+43690
   \   000000C4   0x4281             CMP      R1,R0
   \   000000C6   0xD1E9             BNE.N    ??write_sd_10
   \   000000C8   0x....             ADR.N    R0,??DataTable13_1  ;; "\n"
   \   000000CA   0x.... 0x....      BL       printf
   \   000000CE   0xE7E9             B.N      ??write_sd_11
    527                } 
    528              }
    529              EnableInterrupts;
   \                     ??write_sd_7: (+1)
   \   000000D0   0xB662             CPSIE    I
    530            } 
    531          }    
   \                     ??write_sd_4: (+1)
   \   000000D2   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    532          

   \                                 In section .text, align 2, keep-with-next
    533          void save_RAM()
    534          {
   \                     save_RAM: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    535            save_sd(indata.fre[0],"LF");
   \   00000002   0x....             ADR.N    R1,??DataTable13_2  ;; 0x4C, 0x46, 0x00, 0x00
   \   00000004   0x....             LDR.N    R0,??DataTable13_20
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0x.... 0x....      BL       save_sd
    536            save_sd(indata.fre[1],"RF");
   \   0000000C   0x....             ADR.N    R1,??DataTable13_3  ;; 0x52, 0x46, 0x00, 0x00
   \   0000000E   0x....             LDR.N    R0,??DataTable13_20
   \   00000010   0x6840             LDR      R0,[R0, #+4]
   \   00000012   0x.... 0x....      BL       save_sd
    537            save_sd(indata.fre[2],"CF");
   \   00000016   0x....             ADR.N    R1,??DataTable13_4  ;; 0x43, 0x46, 0x00, 0x00
   \   00000018   0x....             LDR.N    R0,??DataTable13_20
   \   0000001A   0x6880             LDR      R0,[R0, #+8]
   \   0000001C   0x.... 0x....      BL       save_sd
    538            save_sd((int)0xAAAA,"");
   \   00000020   0x....             ADR.N    R1,??DataTable13_5  ;; ""
   \   00000022   0xF64A 0x20AA      MOVW     R0,#+43690
   \   00000026   0x.... 0x....      BL       save_sd
    539          }
   \   0000002A   0xBD01             POP      {R0,PC}          ;; return
    540          
    541          

   \                                 In section .text, align 2, keep-with-next
    542          void save_sd(int value,char* label)
    543          {
   \                     save_sd: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    544            if(flag.TO_SEND_SD)
   \   00000002   0x....             LDR.N    R2,??DataTable13_34
   \   00000004   0x7892             LDRB     R2,[R2, #+2]
   \   00000006   0x2A00             CMP      R2,#+0
   \   00000008   0xD00C             BEQ.N    ??save_sd_0
    545            {
    546              if((uint16)value==0xAAAA)printf("\n");
   \   0000000A   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000000C   0xF64A 0x22AA      MOVW     R2,#+43690
   \   00000010   0x4290             CMP      R0,R2
   \   00000012   0xD103             BNE.N    ??save_sd_1
   \   00000014   0x....             ADR.N    R0,??DataTable13_1  ;; "\n"
   \   00000016   0x.... 0x....      BL       printf
   \   0000001A   0xE040             B.N      ??save_sd_2
    547              else printf("%s\t",label);
   \                     ??save_sd_1: (+1)
   \   0000001C   0x....             ADR.N    R0,??DataTable13_6  ;; "%s\t"
   \   0000001E   0x.... 0x....      BL       printf
   \   00000022   0xE03C             B.N      ??save_sd_2
    548            }
    549            else if(eleccar.runtime>0)
   \                     ??save_sd_0: (+1)
   \   00000024   0x....             LDR.N    R1,??DataTable13_11
   \   00000026   0x68C9             LDR      R1,[R1, #+12]
   \   00000028   0x2900             CMP      R1,#+0
   \   0000002A   0xD038             BEQ.N    ??save_sd_2
    550            {
    551              RAM_BUFF[(2*save_ram_no)/512%50][(2*save_ram_no)%512] = (uint8)(((uint16)value)>>8);
   \   0000002C   0x....             LDR.N    R1,??DataTable13_35
   \   0000002E   0x6809             LDR      R1,[R1, #+0]
   \   00000030   0x0049             LSLS     R1,R1,#+1
   \   00000032   0x0A49             LSRS     R1,R1,#+9
   \   00000034   0x2232             MOVS     R2,#+50
   \   00000036   0xFBB1 0xF3F2      UDIV     R3,R1,R2
   \   0000003A   0xFB02 0x1113      MLS      R1,R2,R3,R1
   \   0000003E   0xF44F 0x7200      MOV      R2,#+512
   \   00000042   0x....             LDR.N    R3,??DataTable13_36
   \   00000044   0xFB02 0x3101      MLA      R1,R2,R1,R3
   \   00000048   0x....             LDR.N    R2,??DataTable13_35
   \   0000004A   0x6812             LDR      R2,[R2, #+0]
   \   0000004C   0x0052             LSLS     R2,R2,#+1
   \   0000004E   0xF44F 0x7300      MOV      R3,#+512
   \   00000052   0xFBB2 0xF4F3      UDIV     R4,R2,R3
   \   00000056   0xFB04 0x2413      MLS      R4,R4,R3,R2
   \   0000005A   0x0002             MOVS     R2,R0
   \   0000005C   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   0000005E   0x0A12             LSRS     R2,R2,#+8
   \   00000060   0x5462             STRB     R2,[R4, R1]
    552              RAM_BUFF[(2*save_ram_no)/512%50][(2*save_ram_no)%512+1] = (uint8)((uint16)value);
   \   00000062   0x....             LDR.N    R1,??DataTable13_35
   \   00000064   0x6809             LDR      R1,[R1, #+0]
   \   00000066   0x0049             LSLS     R1,R1,#+1
   \   00000068   0x0A49             LSRS     R1,R1,#+9
   \   0000006A   0x2232             MOVS     R2,#+50
   \   0000006C   0xFBB1 0xF3F2      UDIV     R3,R1,R2
   \   00000070   0xFB02 0x1113      MLS      R1,R2,R3,R1
   \   00000074   0xF44F 0x7200      MOV      R2,#+512
   \   00000078   0x....             LDR.N    R3,??DataTable13_36
   \   0000007A   0xFB02 0x3101      MLA      R1,R2,R1,R3
   \   0000007E   0x....             LDR.N    R2,??DataTable13_35
   \   00000080   0x6812             LDR      R2,[R2, #+0]
   \   00000082   0x0052             LSLS     R2,R2,#+1
   \   00000084   0xF44F 0x7300      MOV      R3,#+512
   \   00000088   0xFBB2 0xF4F3      UDIV     R4,R2,R3
   \   0000008C   0xFB04 0x2413      MLS      R4,R4,R3,R2
   \   00000090   0x1861             ADDS     R1,R4,R1
   \   00000092   0x7048             STRB     R0,[R1, #+1]
    553              save_ram_no++;
   \   00000094   0x....             LDR.N    R0,??DataTable13_35
   \   00000096   0x6800             LDR      R0,[R0, #+0]
   \   00000098   0x1C40             ADDS     R0,R0,#+1
   \   0000009A   0x....             LDR.N    R1,??DataTable13_35
   \   0000009C   0x6008             STR      R0,[R1, #+0]
    554            }
    555          }
   \                     ??save_sd_2: (+1)
   \   0000009E   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7:
   \   00000000   0x25 0x34          DC8      "%4d"
   \              0x64 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10:
   \   00000000   0x25 0x35          DC8      "%5d"
   \              0x64 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13:
   \   00000000   0x25 0x64          DC8      "%d\t"
   \              0x09 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_1:
   \   00000000   0x0A 0x00          DC8      "\n",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_2:
   \   00000000   0x4C 0x46          DC8      0x4C, 0x46, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_3:
   \   00000000   0x52 0x46          DC8      0x52, 0x46, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_4:
   \   00000000   0x43 0x46          DC8      0x43, 0x46, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_5:
   \   00000000   0x00 0x00          DC8      "",0x0,0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_6:
   \   00000000   0x25 0x73          DC8      "%s\t"
   \              0x09 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_7:
   \   00000000   0x........         DC32     T

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_8:
   \   00000000   0x........         DC32     status_button

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_9:
   \   00000000   0x43FE120C         DC32     0x43fe120c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_10:
   \   00000000   0x........         DC32     oled

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_11:
   \   00000000   0x........         DC32     eleccar

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_12:
   \   00000000   0x43FE1218         DC32     0x43fe1218

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_13:
   \   00000000   0x43FE1210         DC32     0x43fe1210

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_14:
   \   00000000   0x43FE1220         DC32     0x43fe1220

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_15:
   \   00000000   0x........         DC32     paralist

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_16:
   \   00000000   0x........         DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_17:
   \   00000000   0x4003B000         DC32     0x4003b000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_18:
   \   00000000   0x........         DC32     ??old_volt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_19:
   \   00000000   0x........         DC32     ??lastpage

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_20:
   \   00000000   0x........         DC32     indata

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_21:
   \   00000000   0x........         DC32     ?_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_22:
   \   00000000   0x........         DC32     setpara

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_23:
   \   00000000   0x........         DC32     ?_3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_24:
   \   00000000   0x........         DC32     ?_4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_25:
   \   00000000   0x........         DC32     outdata

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_26:
   \   00000000   0x........         DC32     ?_5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_27:
   \   00000000   0x........         DC32     ?_6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_28:
   \   00000000   0x........         DC32     ?_7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_29:
   \   00000000   0x........         DC32     ?_8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_30:
   \   00000000   0x........         DC32     ?_9

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_31:
   \   00000000   0x........         DC32     ?_10

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_32:
   \   00000000   0x........         DC32     OutData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_33:
   \   00000000   0x4006A000         DC32     0x4006a000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_34:
   \   00000000   0x........         DC32     flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_35:
   \   00000000   0x........         DC32     save_ram_no

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_36:
   \   00000000   0x........         DC32     RAM_BUFF

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_37:
   \   00000000   0x........         DC32     SEND_BUFF

   \                                 In section .rodata, align 4
   \                     ?_0:
   \   00000000   0x53 0x44          DC8 "SD READ = %3d \012"
   \              0x20 0x52    
   \              0x45 0x41    
   \              0x44 0x20    
   \              0x3D 0x20    
   \              0x25 0x33    
   \              0x64 0x20    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \                     ?_1:
   \   00000000   0x4C 0x46          DC8 "LFre %6d"
   \              0x72 0x65    
   \              0x20 0x25    
   \              0x36 0x64    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \   00000000   0x25 0x34          DC8 "%4d"
   \              0x64 0x00    

   \                                 In section .rodata, align 4
   \                     ?_3:
   \   00000000   0x52 0x46          DC8 "RFre %6d"
   \              0x72 0x65    
   \              0x20 0x25    
   \              0x36 0x64    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_4:
   \   00000000   0x43 0x46          DC8 "CFre %6d"
   \              0x72 0x65    
   \              0x20 0x25    
   \              0x36 0x64    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_5:
   \   00000000   0x53 0x70          DC8 "SpeedOUT: %6d"
   \              0x65 0x65    
   \              0x64 0x4F    
   \              0x55 0x54    
   \              0x3A 0x20    
   \              0x25 0x36    
   \              0x64 0x00    
   \   0000000E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_6:
   \   00000000   0x4D 0x6F          DC8 "MotorPWM: %6d"
   \              0x74 0x6F    
   \              0x72 0x50    
   \              0x57 0x4D    
   \              0x3A 0x20    
   \              0x25 0x36    
   \              0x64 0x00    
   \   0000000E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_7:
   \   00000000   0x53 0x70          DC8 "SpeedFB:%6d"
   \              0x65 0x65    
   \              0x64 0x46    
   \              0x42 0x3A    
   \              0x25 0x36    
   \              0x64 0x00    

   \                                 In section .rodata, align 4
   \                     ?_8:
   \   00000000   0x53 0x74          DC8 "SteerPWM: %6d"
   \              0x65 0x65    
   \              0x72 0x50    
   \              0x57 0x4D    
   \              0x3A 0x20    
   \              0x25 0x36    
   \              0x64 0x00    
   \   0000000E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_9:
   \   00000000   0x42 0x61          DC8 "Battery: %1d.%02dV"
   \              0x74 0x74    
   \              0x65 0x72    
   \              0x79 0x3A    
   \              0x20 0x25    
   \              0x31 0x64    
   \              0x2E 0x25    
   \              0x30 0x32    
   \              0x64 0x56    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_10:
   \   00000000   0x25 0x30          DC8 "%02d.%-13s"
   \              0x32 0x64    
   \              0x2E 0x25    
   \              0x2D 0x31    
   \              0x33 0x73    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \   00000000   0x25 0x35          DC8 "%5d"
   \              0x64 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x00000000         DC32 0
   \   00000004   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x00000000         DC32 0
   \   00000004   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 2
   \   00000000   0x0A 0x00          DC8 "\012"

   \                                 In section .rodata, align 4
   \   00000000   0x25 0x64          DC8 "%d\t"
   \              0x09 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x4C 0x46          DC8 "LF"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \   00000000   0x52 0x46          DC8 "RF"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \   00000000   0x43 0x46          DC8 "CF"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 1
   \   00000000   0x00               DC8 ""

   \                                 In section .rodata, align 4
   \   00000000   0x25 0x73          DC8 "%s\t"
   \              0x09 0x00    
    556          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   CRC_CHECK
      48   OutPut_Data
        48   -> CRC_CHECK
        48   -> LPLD_UART_PutCharAr
        48   -> __aeabi_memclr4
       8   battery_check
         8   -> LPLD_ADC_Get
         8   -> abs
       8   data_save
         8   -> save_RAM
       8   key_check
         8   -> init_setpara
         8   -> save_flash
       8   main
         8   -> init_all
         8   -> key_check
         8   -> send_uart
         8   -> show_oled
     520   read_flash
       520   -> disk_read
       520   -> printf
       8   save_RAM
         8   -> save_sd
     408   save_flash
       408   -> LPLD_Flash_ByteProgram
       408   -> LPLD_Flash_SectorErase
       8   save_sd
         8   -> printf
       8   send_uart
         8   -> OutPut_Data
      16   show_changeable
        16   -> LCD_ClearLine
        16   -> oledprintf
        16   -> oledprintfw
       0   show_fullpage
       8   show_oled
         8   -> show_changeable
         8   -> show_fullpage
         8   -> show_upperpage
      16   show_upperpage
        16   -> LCD_ClearLine
        16   -> oledprintf
       0   status_select
      16   write_sd
        16   -> disk_read
        16   -> disk_write
        16   -> printf
        16   -> save_RAM


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable10
       4  ??DataTable13
       4  ??DataTable13_1
       4  ??DataTable13_10
       4  ??DataTable13_11
       4  ??DataTable13_12
       4  ??DataTable13_13
       4  ??DataTable13_14
       4  ??DataTable13_15
       4  ??DataTable13_16
       4  ??DataTable13_17
       4  ??DataTable13_18
       4  ??DataTable13_19
       4  ??DataTable13_2
       4  ??DataTable13_20
       4  ??DataTable13_21
       4  ??DataTable13_22
       4  ??DataTable13_23
       4  ??DataTable13_24
       4  ??DataTable13_25
       4  ??DataTable13_26
       4  ??DataTable13_27
       4  ??DataTable13_28
       4  ??DataTable13_29
       4  ??DataTable13_3
       4  ??DataTable13_30
       4  ??DataTable13_31
       4  ??DataTable13_32
       4  ??DataTable13_33
       4  ??DataTable13_34
       4  ??DataTable13_35
       4  ??DataTable13_36
       4  ??DataTable13_37
       4  ??DataTable13_4
       4  ??DataTable13_5
       4  ??DataTable13_6
       4  ??DataTable13_7
       4  ??DataTable13_8
       4  ??DataTable13_9
       4  ??DataTable7
      16  ?_0
      12  ?_1
      12  ?_10
       4  ?_11
      16  ?_12
      16  ?_13
      12  ?_14
       2  ?_15
       4  ?_16
       4  ?_17
       4  ?_18
       4  ?_19
       4  ?_2
       1  ?_20
       4  ?_21
      12  ?_3
      12  ?_4
      16  ?_5
      16  ?_6
      12  ?_7
      16  ?_8
      20  ?_9
      68  CRC_CHECK
       8  OutData
     194  OutPut_Data
   30720  RAM_BUFF
     512  SEND_BUFF
       4  T
     120  battery_check
       4  br
       4  bw
      16  data_save
      28  eleccar
     568  fatfs
     556  fil
       4  flag
      28  indata
     382  key_check
       4  lastpage
      24  main
       2  old_volt
      12  oled
      20  outdata
    2000  paralist
       1  rc
      70  read_flash
      44  save_RAM
      70  save_flash
       4  save_ram_no
     160  save_sd
       4  save_uart_no
      52  send_uart
     192  setpara
     266  show_changeable
      24  show_fullpage
      46  show_oled
     304  show_upperpage
       1  status_button
      90  status_select
       1  status_track
      24  track
     212  write_sd

 
 32 701 bytes in section .bss
  2 000 bytes in section .data
    219 bytes in section .rodata
  2 302 bytes in section .text
 
  2 302 bytes of CODE  memory
    219 bytes of CONST memory
 34 701 bytes of DATA  memory

Errors: none
Warnings: none
